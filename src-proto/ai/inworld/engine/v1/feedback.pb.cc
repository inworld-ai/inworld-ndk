#include "ProtoDisableWarning.h"
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ai/inworld/engine/v1/feedback.proto

#include "ai/inworld/engine/v1/feedback.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_ai_2finworld_2fengine_2fv1_2ffeedback_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_InteractionFeedback_ai_2finworld_2fengine_2fv1_2ffeedback_2eproto;
namespace ai {
namespace inworld {
namespace engine {
namespace v1 {
class InteractionFeedbackDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InteractionFeedback> _instance;
} _InteractionFeedback_default_instance_;
class CreateInteractionFeedbackRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateInteractionFeedbackRequest> _instance;
} _CreateInteractionFeedbackRequest_default_instance_;
class DeleteInteractionFeedbackRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteInteractionFeedbackRequest> _instance;
} _DeleteInteractionFeedbackRequest_default_instance_;
}  // namespace v1
}  // namespace engine
}  // namespace inworld
}  // namespace ai
static void InitDefaultsscc_info_CreateInteractionFeedbackRequest_ai_2finworld_2fengine_2fv1_2ffeedback_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::engine::v1::_CreateInteractionFeedbackRequest_default_instance_;
    new (ptr) ::ai::inworld::engine::v1::CreateInteractionFeedbackRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CreateInteractionFeedbackRequest_ai_2finworld_2fengine_2fv1_2ffeedback_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CreateInteractionFeedbackRequest_ai_2finworld_2fengine_2fv1_2ffeedback_2eproto}, {
      &scc_info_InteractionFeedback_ai_2finworld_2fengine_2fv1_2ffeedback_2eproto.base,}};

static void InitDefaultsscc_info_DeleteInteractionFeedbackRequest_ai_2finworld_2fengine_2fv1_2ffeedback_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::engine::v1::_DeleteInteractionFeedbackRequest_default_instance_;
    new (ptr) ::ai::inworld::engine::v1::DeleteInteractionFeedbackRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteInteractionFeedbackRequest_ai_2finworld_2fengine_2fv1_2ffeedback_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteInteractionFeedbackRequest_ai_2finworld_2fengine_2fv1_2ffeedback_2eproto}, {}};

static void InitDefaultsscc_info_InteractionFeedback_ai_2finworld_2fengine_2fv1_2ffeedback_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::engine::v1::_InteractionFeedback_default_instance_;
    new (ptr) ::ai::inworld::engine::v1::InteractionFeedback();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_InteractionFeedback_ai_2finworld_2fengine_2fv1_2ffeedback_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_InteractionFeedback_ai_2finworld_2fengine_2fv1_2ffeedback_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_ai_2finworld_2fengine_2fv1_2ffeedback_2eproto[3];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_ai_2finworld_2fengine_2fv1_2ffeedback_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_ai_2finworld_2fengine_2fv1_2ffeedback_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_ai_2finworld_2fengine_2fv1_2ffeedback_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::v1::InteractionFeedback, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::v1::InteractionFeedback, is_like_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::v1::InteractionFeedback, type_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::v1::InteractionFeedback, comment_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::v1::InteractionFeedback, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::v1::CreateInteractionFeedbackRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::v1::CreateInteractionFeedbackRequest, parent_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::v1::CreateInteractionFeedbackRequest, interaction_feedback_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::v1::DeleteInteractionFeedbackRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::v1::DeleteInteractionFeedbackRequest, name_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ai::inworld::engine::v1::InteractionFeedback)},
  { 9, -1, sizeof(::ai::inworld::engine::v1::CreateInteractionFeedbackRequest)},
  { 16, -1, sizeof(::ai::inworld::engine::v1::DeleteInteractionFeedbackRequest)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::engine::v1::_InteractionFeedback_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::engine::v1::_CreateInteractionFeedbackRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::engine::v1::_DeleteInteractionFeedbackRequest_default_instance_),
};

const char descriptor_table_protodef_ai_2finworld_2fengine_2fv1_2ffeedback_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n#ai/inworld/engine/v1/feedback.proto\022\024a"
  "i.inworld.engine.v1\032\034google/api/annotati"
  "ons.proto\032\027google/api/client.proto\032\037goog"
  "le/api/field_behavior.proto\032\031google/api/"
  "resource.proto\032\033google/protobuf/empty.pr"
  "oto\"\227\002\n\023InteractionFeedback\022\017\n\007is_like\030\001"
  " \001(\010\022:\n\004type\030\002 \003(\0162,.ai.inworld.engine.v"
  "1.InteractionDislikeType\022\017\n\007comment\030\003 \001("
  "\t\022\014\n\004name\030\005 \001(\t:\215\001\352A\211\001\n\027api.inworld.ai/F"
  "eedback\022nworkspaces/{workspace}/sessions"
  "/{session}/interactions/{interaction}/gr"
  "oups/{correlation}/feedbacks/{feedback}J"
  "\004\010\004\020\005\"\244\001\n CreateInteractionFeedbackReque"
  "st\0222\n\006parent\030\001 \001(\tB\"\372A\034\n\032api.inworld.ai/"
  "Interaction\340A\002\022L\n\024interaction_feedback\030\002"
  " \001(\0132).ai.inworld.engine.v1.InteractionF"
  "eedbackB\003\340A\002\"Q\n DeleteInteractionFeedbac"
  "kRequest\022-\n\004name\030\001 \001(\tB\037\340A\002\372A\031\n\027api.inwo"
  "rld.ai/Feedback*\321\003\n\026InteractionDislikeTy"
  "pe\022(\n$INTERACTION_DISLIKE_TYPE_UNSPECIFI"
  "ED\020\000\022\'\n#INTERACTION_DISLIKE_TYPE_IRRELEV"
  "ANT\020\001\022#\n\037INTERACTION_DISLIKE_TYPE_UNSAFE"
  "\020\002\022#\n\037INTERACTION_DISLIKE_TYPE_UNTRUE\020\003\022"
  "4\n0INTERACTION_DISLIKE_TYPE_INCORRECT_US"
  "E_KNOWLEDGE\020\004\022.\n*INTERACTION_DISLIKE_TYP"
  "E_UNEXPECTED_ACTION\020\005\0225\n1INTERACTION_DIS"
  "LIKE_TYPE_UNEXPECTED_GOAL_BEHAVIOR\020\006\022\'\n#"
  "INTERACTION_DISLIKE_TYPE_REPETITION\020\007\022-\n"
  ")INTERACTION_DISLIKE_TYPE_OUT_OF_CHARACT"
  "ER\020\010\022%\n!INTERACTION_DISLIKE_TYPE_TOO_LON"
  "G\020\t2\347\003\n\010Feedback\022\214\002\n\031CreateInteractionFe"
  "edback\0226.ai.inworld.engine.v1.CreateInte"
  "ractionFeedbackRequest\032).ai.inworld.engi"
  "ne.v1.InteractionFeedback\"\213\001\202\323\344\223\002g\"O/v1/"
  "feedback/{parent=workspaces/*/sessions/*"
  "/interactions/*/groups/*}/feedbacks:\024int"
  "eraction_feedback\332A\033parent,interaction_f"
  "eedback\022\313\001\n\031DeleteInteractionFeedback\0226."
  "ai.inworld.engine.v1.DeleteInteractionFe"
  "edbackRequest\032\026.google.protobuf.Empty\"^\202"
  "\323\344\223\002Q*O/v1/feedback/{name=workspaces/*/s"
  "essions/*/interactions/*/groups/*/feedba"
  "cks/*}\332A\004nameB\206\001\n\024ai.inworld.engine.v1B\r"
  "FeedbackProtoP\001ZFgithub.com/inworld-ai/i"
  "nworld-proto-golang/src/go/ai/inworld/en"
  "gine/v1\252\002\024Ai.Inworld.Engine.V1b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_ai_2finworld_2fengine_2fv1_2ffeedback_2eproto_deps[5] = {
  &::descriptor_table_google_2fapi_2fannotations_2eproto,
  &::descriptor_table_google_2fapi_2fclient_2eproto,
  &::descriptor_table_google_2fapi_2ffield_5fbehavior_2eproto,
  &::descriptor_table_google_2fapi_2fresource_2eproto,
  &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_ai_2finworld_2fengine_2fv1_2ffeedback_2eproto_sccs[3] = {
  &scc_info_CreateInteractionFeedbackRequest_ai_2finworld_2fengine_2fv1_2ffeedback_2eproto.base,
  &scc_info_DeleteInteractionFeedbackRequest_ai_2finworld_2fengine_2fv1_2ffeedback_2eproto.base,
  &scc_info_InteractionFeedback_ai_2finworld_2fengine_2fv1_2ffeedback_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_ai_2finworld_2fengine_2fv1_2ffeedback_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ai_2finworld_2fengine_2fv1_2ffeedback_2eproto = {
  false, false, descriptor_table_protodef_ai_2finworld_2fengine_2fv1_2ffeedback_2eproto, "ai/inworld/engine/v1/feedback.proto", 1838,
  &descriptor_table_ai_2finworld_2fengine_2fv1_2ffeedback_2eproto_once, descriptor_table_ai_2finworld_2fengine_2fv1_2ffeedback_2eproto_sccs, descriptor_table_ai_2finworld_2fengine_2fv1_2ffeedback_2eproto_deps, 3, 5,
  schemas, file_default_instances, TableStruct_ai_2finworld_2fengine_2fv1_2ffeedback_2eproto::offsets,
  file_level_metadata_ai_2finworld_2fengine_2fv1_2ffeedback_2eproto, 3, file_level_enum_descriptors_ai_2finworld_2fengine_2fv1_2ffeedback_2eproto, file_level_service_descriptors_ai_2finworld_2fengine_2fv1_2ffeedback_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_ai_2finworld_2fengine_2fv1_2ffeedback_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_ai_2finworld_2fengine_2fv1_2ffeedback_2eproto)), true);
namespace ai {
namespace inworld {
namespace engine {
namespace v1 {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* InteractionDislikeType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_ai_2finworld_2fengine_2fv1_2ffeedback_2eproto);
  return file_level_enum_descriptors_ai_2finworld_2fengine_2fv1_2ffeedback_2eproto[0];
}
bool InteractionDislikeType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class InteractionFeedback::_Internal {
 public:
};

InteractionFeedback::InteractionFeedback(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  type_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.engine.v1.InteractionFeedback)
}
InteractionFeedback::InteractionFeedback(const InteractionFeedback& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      type_(from.type_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  comment_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_comment().empty()) {
    comment_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_comment(), 
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  is_like_ = from.is_like_;
  // @@protoc_insertion_point(copy_constructor:ai.inworld.engine.v1.InteractionFeedback)
}

void InteractionFeedback::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_InteractionFeedback_ai_2finworld_2fengine_2fv1_2ffeedback_2eproto.base);
  comment_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  is_like_ = false;
}

InteractionFeedback::~InteractionFeedback() {
  // @@protoc_insertion_point(destructor:ai.inworld.engine.v1.InteractionFeedback)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void InteractionFeedback::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  comment_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void InteractionFeedback::ArenaDtor(void* object) {
  InteractionFeedback* _this = reinterpret_cast< InteractionFeedback* >(object);
  (void)_this;
}
void InteractionFeedback::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void InteractionFeedback::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InteractionFeedback& InteractionFeedback::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_InteractionFeedback_ai_2finworld_2fengine_2fv1_2ffeedback_2eproto.base);
  return *internal_default_instance();
}


void InteractionFeedback::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.engine.v1.InteractionFeedback)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_.Clear();
  comment_.ClearToEmpty();
  name_.ClearToEmpty();
  is_like_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InteractionFeedback::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool is_like = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          is_like_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .ai.inworld.engine.v1.InteractionDislikeType type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedEnumParser(_internal_mutable_type(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_add_type(static_cast<::ai::inworld::engine::v1::InteractionDislikeType>(val));
        } else goto handle_unusual;
        continue;
      // string comment = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_comment();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.engine.v1.InteractionFeedback.comment"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.engine.v1.InteractionFeedback.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* InteractionFeedback::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.engine.v1.InteractionFeedback)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_like = 1;
  if (this->is_like() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_is_like(), target);
  }

  // repeated .ai.inworld.engine.v1.InteractionDislikeType type = 2;
  {
    int byte_size = _type_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          2, type_, byte_size, target);
    }
  }

  // string comment = 3;
  if (this->comment().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_comment().data(), static_cast<int>(this->_internal_comment().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.v1.InteractionFeedback.comment");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_comment(), target);
  }

  // string name = 5;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.v1.InteractionFeedback.name");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.engine.v1.InteractionFeedback)
  return target;
}

size_t InteractionFeedback::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.engine.v1.InteractionFeedback)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ai.inworld.engine.v1.InteractionDislikeType type = 2;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->_internal_type_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(
        this->_internal_type(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _type_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // string comment = 3;
  if (this->comment().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_comment());
  }

  // string name = 5;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // bool is_like = 1;
  if (this->is_like() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InteractionFeedback::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.engine.v1.InteractionFeedback)
  GOOGLE_DCHECK_NE(&from, this);
  const InteractionFeedback* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<InteractionFeedback>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.engine.v1.InteractionFeedback)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.engine.v1.InteractionFeedback)
    MergeFrom(*source);
  }
}

void InteractionFeedback::MergeFrom(const InteractionFeedback& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.engine.v1.InteractionFeedback)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  type_.MergeFrom(from.type_);
  if (from.comment().size() > 0) {
    _internal_set_comment(from._internal_comment());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.is_like() != 0) {
    _internal_set_is_like(from._internal_is_like());
  }
}

void InteractionFeedback::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.engine.v1.InteractionFeedback)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InteractionFeedback::CopyFrom(const InteractionFeedback& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.engine.v1.InteractionFeedback)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InteractionFeedback::IsInitialized() const {
  return true;
}

void InteractionFeedback::InternalSwap(InteractionFeedback* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  type_.InternalSwap(&other->type_);
  comment_.Swap(&other->comment_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(is_like_, other->is_like_);
}

::PROTOBUF_NAMESPACE_ID::Metadata InteractionFeedback::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CreateInteractionFeedbackRequest::_Internal {
 public:
  static const ::ai::inworld::engine::v1::InteractionFeedback& interaction_feedback(const CreateInteractionFeedbackRequest* msg);
};

const ::ai::inworld::engine::v1::InteractionFeedback&
CreateInteractionFeedbackRequest::_Internal::interaction_feedback(const CreateInteractionFeedbackRequest* msg) {
  return *msg->interaction_feedback_;
}
CreateInteractionFeedbackRequest::CreateInteractionFeedbackRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.engine.v1.CreateInteractionFeedbackRequest)
}
CreateInteractionFeedbackRequest::CreateInteractionFeedbackRequest(const CreateInteractionFeedbackRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_parent().empty()) {
    parent_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_parent(), 
      GetArena());
  }
  if (from._internal_has_interaction_feedback()) {
    interaction_feedback_ = new ::ai::inworld::engine::v1::InteractionFeedback(*from.interaction_feedback_);
  } else {
    interaction_feedback_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.engine.v1.CreateInteractionFeedbackRequest)
}

void CreateInteractionFeedbackRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateInteractionFeedbackRequest_ai_2finworld_2fengine_2fv1_2ffeedback_2eproto.base);
  parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  interaction_feedback_ = nullptr;
}

CreateInteractionFeedbackRequest::~CreateInteractionFeedbackRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.engine.v1.CreateInteractionFeedbackRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateInteractionFeedbackRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  parent_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete interaction_feedback_;
}

void CreateInteractionFeedbackRequest::ArenaDtor(void* object) {
  CreateInteractionFeedbackRequest* _this = reinterpret_cast< CreateInteractionFeedbackRequest* >(object);
  (void)_this;
}
void CreateInteractionFeedbackRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateInteractionFeedbackRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateInteractionFeedbackRequest& CreateInteractionFeedbackRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateInteractionFeedbackRequest_ai_2finworld_2fengine_2fv1_2ffeedback_2eproto.base);
  return *internal_default_instance();
}


void CreateInteractionFeedbackRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.engine.v1.CreateInteractionFeedbackRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty();
  if (GetArena() == nullptr && interaction_feedback_ != nullptr) {
    delete interaction_feedback_;
  }
  interaction_feedback_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateInteractionFeedbackRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_parent();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.engine.v1.CreateInteractionFeedbackRequest.parent"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ai.inworld.engine.v1.InteractionFeedback interaction_feedback = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_interaction_feedback(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateInteractionFeedbackRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.engine.v1.CreateInteractionFeedbackRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->parent().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent().data(), static_cast<int>(this->_internal_parent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.v1.CreateInteractionFeedbackRequest.parent");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_parent(), target);
  }

  // .ai.inworld.engine.v1.InteractionFeedback interaction_feedback = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_interaction_feedback()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::interaction_feedback(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.engine.v1.CreateInteractionFeedbackRequest)
  return target;
}

size_t CreateInteractionFeedbackRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.engine.v1.CreateInteractionFeedbackRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent());
  }

  // .ai.inworld.engine.v1.InteractionFeedback interaction_feedback = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_interaction_feedback()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *interaction_feedback_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateInteractionFeedbackRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.engine.v1.CreateInteractionFeedbackRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateInteractionFeedbackRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateInteractionFeedbackRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.engine.v1.CreateInteractionFeedbackRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.engine.v1.CreateInteractionFeedbackRequest)
    MergeFrom(*source);
  }
}

void CreateInteractionFeedbackRequest::MergeFrom(const CreateInteractionFeedbackRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.engine.v1.CreateInteractionFeedbackRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {
    _internal_set_parent(from._internal_parent());
  }
  if (from.has_interaction_feedback()) {
    _internal_mutable_interaction_feedback()->::ai::inworld::engine::v1::InteractionFeedback::MergeFrom(from._internal_interaction_feedback());
  }
}

void CreateInteractionFeedbackRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.engine.v1.CreateInteractionFeedbackRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateInteractionFeedbackRequest::CopyFrom(const CreateInteractionFeedbackRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.engine.v1.CreateInteractionFeedbackRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateInteractionFeedbackRequest::IsInitialized() const {
  return true;
}

void CreateInteractionFeedbackRequest::InternalSwap(CreateInteractionFeedbackRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  parent_.Swap(&other->parent_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(interaction_feedback_, other->interaction_feedback_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateInteractionFeedbackRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DeleteInteractionFeedbackRequest::_Internal {
 public:
};

DeleteInteractionFeedbackRequest::DeleteInteractionFeedbackRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.engine.v1.DeleteInteractionFeedbackRequest)
}
DeleteInteractionFeedbackRequest::DeleteInteractionFeedbackRequest(const DeleteInteractionFeedbackRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.engine.v1.DeleteInteractionFeedbackRequest)
}

void DeleteInteractionFeedbackRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteInteractionFeedbackRequest_ai_2finworld_2fengine_2fv1_2ffeedback_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteInteractionFeedbackRequest::~DeleteInteractionFeedbackRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.engine.v1.DeleteInteractionFeedbackRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteInteractionFeedbackRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteInteractionFeedbackRequest::ArenaDtor(void* object) {
  DeleteInteractionFeedbackRequest* _this = reinterpret_cast< DeleteInteractionFeedbackRequest* >(object);
  (void)_this;
}
void DeleteInteractionFeedbackRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteInteractionFeedbackRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteInteractionFeedbackRequest& DeleteInteractionFeedbackRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteInteractionFeedbackRequest_ai_2finworld_2fengine_2fv1_2ffeedback_2eproto.base);
  return *internal_default_instance();
}


void DeleteInteractionFeedbackRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.engine.v1.DeleteInteractionFeedbackRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteInteractionFeedbackRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.engine.v1.DeleteInteractionFeedbackRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteInteractionFeedbackRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.engine.v1.DeleteInteractionFeedbackRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.v1.DeleteInteractionFeedbackRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.engine.v1.DeleteInteractionFeedbackRequest)
  return target;
}

size_t DeleteInteractionFeedbackRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.engine.v1.DeleteInteractionFeedbackRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteInteractionFeedbackRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.engine.v1.DeleteInteractionFeedbackRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteInteractionFeedbackRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteInteractionFeedbackRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.engine.v1.DeleteInteractionFeedbackRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.engine.v1.DeleteInteractionFeedbackRequest)
    MergeFrom(*source);
  }
}

void DeleteInteractionFeedbackRequest::MergeFrom(const DeleteInteractionFeedbackRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.engine.v1.DeleteInteractionFeedbackRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
}

void DeleteInteractionFeedbackRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.engine.v1.DeleteInteractionFeedbackRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteInteractionFeedbackRequest::CopyFrom(const DeleteInteractionFeedbackRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.engine.v1.DeleteInteractionFeedbackRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteInteractionFeedbackRequest::IsInitialized() const {
  return true;
}

void DeleteInteractionFeedbackRequest::InternalSwap(DeleteInteractionFeedbackRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteInteractionFeedbackRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace engine
}  // namespace inworld
}  // namespace ai
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::ai::inworld::engine::v1::InteractionFeedback* Arena::CreateMaybeMessage< ::ai::inworld::engine::v1::InteractionFeedback >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::engine::v1::InteractionFeedback >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::engine::v1::CreateInteractionFeedbackRequest* Arena::CreateMaybeMessage< ::ai::inworld::engine::v1::CreateInteractionFeedbackRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::engine::v1::CreateInteractionFeedbackRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::engine::v1::DeleteInteractionFeedbackRequest* Arena::CreateMaybeMessage< ::ai::inworld::engine::v1::DeleteInteractionFeedbackRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::engine::v1::DeleteInteractionFeedbackRequest >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
