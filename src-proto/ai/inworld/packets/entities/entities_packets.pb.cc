#include "ProtoDisableWarning.h"
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ai/inworld/packets/entities/entities_packets.proto

#include "ai/inworld/packets/entities/entities_packets.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_ai_2finworld_2fpackets_2fentities_2fentities_5fpackets_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CreateOrUpdateItemsOperation_ai_2finworld_2fpackets_2fentities_2fentities_5fpackets_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ai_2finworld_2fpackets_2fentities_2fentities_5fpackets_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_EntityItem_ai_2finworld_2fpackets_2fentities_2fentities_5fpackets_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ai_2finworld_2fpackets_2fentities_2fentities_5fpackets_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_EntityItem_PropertiesEntry_DoNotUse_ai_2finworld_2fpackets_2fentities_2fentities_5fpackets_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ai_2finworld_2fpackets_2fentities_2fentities_5fpackets_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ItemsInEntitiesOperation_ai_2finworld_2fpackets_2fentities_2fentities_5fpackets_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ai_2finworld_2fpackets_2fentities_2fentities_5fpackets_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemoveItemsOperation_ai_2finworld_2fpackets_2fentities_2fentities_5fpackets_2eproto;
namespace ai {
namespace inworld {
namespace packets {
namespace entities {
class EntityItem_PropertiesEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EntityItem_PropertiesEntry_DoNotUse> _instance;
} _EntityItem_PropertiesEntry_DoNotUse_default_instance_;
class EntityItemDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EntityItem> _instance;
} _EntityItem_default_instance_;
class ItemsOperationEventDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ItemsOperationEvent> _instance;
} _ItemsOperationEvent_default_instance_;
class CreateOrUpdateItemsOperationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateOrUpdateItemsOperation> _instance;
} _CreateOrUpdateItemsOperation_default_instance_;
class RemoveItemsOperationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemoveItemsOperation> _instance;
} _RemoveItemsOperation_default_instance_;
class ItemsInEntitiesOperationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ItemsInEntitiesOperation> _instance;
} _ItemsInEntitiesOperation_default_instance_;
}  // namespace entities
}  // namespace packets
}  // namespace inworld
}  // namespace ai
static void InitDefaultsscc_info_CreateOrUpdateItemsOperation_ai_2finworld_2fpackets_2fentities_2fentities_5fpackets_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::packets::entities::_CreateOrUpdateItemsOperation_default_instance_;
    new (ptr) ::ai::inworld::packets::entities::CreateOrUpdateItemsOperation();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CreateOrUpdateItemsOperation_ai_2finworld_2fpackets_2fentities_2fentities_5fpackets_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CreateOrUpdateItemsOperation_ai_2finworld_2fpackets_2fentities_2fentities_5fpackets_2eproto}, {
      &scc_info_EntityItem_ai_2finworld_2fpackets_2fentities_2fentities_5fpackets_2eproto.base,}};

static void InitDefaultsscc_info_EntityItem_ai_2finworld_2fpackets_2fentities_2fentities_5fpackets_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::packets::entities::_EntityItem_default_instance_;
    new (ptr) ::ai::inworld::packets::entities::EntityItem();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_EntityItem_ai_2finworld_2fpackets_2fentities_2fentities_5fpackets_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_EntityItem_ai_2finworld_2fpackets_2fentities_2fentities_5fpackets_2eproto}, {
      &scc_info_EntityItem_PropertiesEntry_DoNotUse_ai_2finworld_2fpackets_2fentities_2fentities_5fpackets_2eproto.base,}};

static void InitDefaultsscc_info_EntityItem_PropertiesEntry_DoNotUse_ai_2finworld_2fpackets_2fentities_2fentities_5fpackets_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::packets::entities::_EntityItem_PropertiesEntry_DoNotUse_default_instance_;
    new (ptr) ::ai::inworld::packets::entities::EntityItem_PropertiesEntry_DoNotUse();
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_EntityItem_PropertiesEntry_DoNotUse_ai_2finworld_2fpackets_2fentities_2fentities_5fpackets_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_EntityItem_PropertiesEntry_DoNotUse_ai_2finworld_2fpackets_2fentities_2fentities_5fpackets_2eproto}, {}};

static void InitDefaultsscc_info_ItemsInEntitiesOperation_ai_2finworld_2fpackets_2fentities_2fentities_5fpackets_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::packets::entities::_ItemsInEntitiesOperation_default_instance_;
    new (ptr) ::ai::inworld::packets::entities::ItemsInEntitiesOperation();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ItemsInEntitiesOperation_ai_2finworld_2fpackets_2fentities_2fentities_5fpackets_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ItemsInEntitiesOperation_ai_2finworld_2fpackets_2fentities_2fentities_5fpackets_2eproto}, {}};

static void InitDefaultsscc_info_ItemsOperationEvent_ai_2finworld_2fpackets_2fentities_2fentities_5fpackets_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::packets::entities::_ItemsOperationEvent_default_instance_;
    new (ptr) ::ai::inworld::packets::entities::ItemsOperationEvent();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_ItemsOperationEvent_ai_2finworld_2fpackets_2fentities_2fentities_5fpackets_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_ItemsOperationEvent_ai_2finworld_2fpackets_2fentities_2fentities_5fpackets_2eproto}, {
      &scc_info_CreateOrUpdateItemsOperation_ai_2finworld_2fpackets_2fentities_2fentities_5fpackets_2eproto.base,
      &scc_info_RemoveItemsOperation_ai_2finworld_2fpackets_2fentities_2fentities_5fpackets_2eproto.base,
      &scc_info_ItemsInEntitiesOperation_ai_2finworld_2fpackets_2fentities_2fentities_5fpackets_2eproto.base,}};

static void InitDefaultsscc_info_RemoveItemsOperation_ai_2finworld_2fpackets_2fentities_2fentities_5fpackets_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::packets::entities::_RemoveItemsOperation_default_instance_;
    new (ptr) ::ai::inworld::packets::entities::RemoveItemsOperation();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemoveItemsOperation_ai_2finworld_2fpackets_2fentities_2fentities_5fpackets_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RemoveItemsOperation_ai_2finworld_2fpackets_2fentities_2fentities_5fpackets_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_ai_2finworld_2fpackets_2fentities_2fentities_5fpackets_2eproto[6];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_ai_2finworld_2fpackets_2fentities_2fentities_5fpackets_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_ai_2finworld_2fpackets_2fentities_2fentities_5fpackets_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_ai_2finworld_2fpackets_2fentities_2fentities_5fpackets_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::ai::inworld::packets::entities::EntityItem_PropertiesEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::packets::entities::EntityItem_PropertiesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::packets::entities::EntityItem_PropertiesEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::packets::entities::EntityItem_PropertiesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::packets::entities::EntityItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::packets::entities::EntityItem, id_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::packets::entities::EntityItem, display_name_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::packets::entities::EntityItem, description_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::packets::entities::EntityItem, properties_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::packets::entities::ItemsOperationEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::packets::entities::ItemsOperationEvent, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::ai::inworld::packets::entities::ItemsOperationEvent, operation_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::packets::entities::CreateOrUpdateItemsOperation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::packets::entities::CreateOrUpdateItemsOperation, items_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::packets::entities::CreateOrUpdateItemsOperation, add_to_entities_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::packets::entities::RemoveItemsOperation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::packets::entities::RemoveItemsOperation, item_ids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::packets::entities::ItemsInEntitiesOperation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::packets::entities::ItemsInEntitiesOperation, type_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::packets::entities::ItemsInEntitiesOperation, item_ids_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::packets::entities::ItemsInEntitiesOperation, entity_names_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::ai::inworld::packets::entities::EntityItem_PropertiesEntry_DoNotUse)},
  { 9, -1, sizeof(::ai::inworld::packets::entities::EntityItem)},
  { 18, -1, sizeof(::ai::inworld::packets::entities::ItemsOperationEvent)},
  { 27, -1, sizeof(::ai::inworld::packets::entities::CreateOrUpdateItemsOperation)},
  { 34, -1, sizeof(::ai::inworld::packets::entities::RemoveItemsOperation)},
  { 40, -1, sizeof(::ai::inworld::packets::entities::ItemsInEntitiesOperation)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::packets::entities::_EntityItem_PropertiesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::packets::entities::_EntityItem_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::packets::entities::_ItemsOperationEvent_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::packets::entities::_CreateOrUpdateItemsOperation_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::packets::entities::_RemoveItemsOperation_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::packets::entities::_ItemsInEntitiesOperation_default_instance_),
};

const char descriptor_table_protodef_ai_2finworld_2fpackets_2fentities_2fentities_5fpackets_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n2ai/inworld/packets/entities/entities_p"
  "ackets.proto\022\033ai.inworld.packets.entitie"
  "s\"\303\001\n\nEntityItem\022\n\n\002id\030\001 \001(\t\022\024\n\014display_"
  "name\030\002 \001(\t\022\023\n\013description\030\003 \001(\t\022K\n\nprope"
  "rties\030\004 \003(\01327.ai.inworld.packets.entitie"
  "s.EntityItem.PropertiesEntry\0321\n\017Properti"
  "esEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\""
  "\236\002\n\023ItemsOperationEvent\022[\n\026create_or_upd"
  "ate_items\030\001 \001(\01329.ai.inworld.packets.ent"
  "ities.CreateOrUpdateItemsOperationH\000\022I\n\014"
  "remove_items\030\003 \001(\01321.ai.inworld.packets."
  "entities.RemoveItemsOperationH\000\022R\n\021items"
  "_in_entities\030\004 \001(\01325.ai.inworld.packets."
  "entities.ItemsInEntitiesOperationH\000B\013\n\to"
  "peration\"o\n\034CreateOrUpdateItemsOperation"
  "\0226\n\005items\030\001 \003(\0132\'.ai.inworld.packets.ent"
  "ities.EntityItem\022\027\n\017add_to_entities\030\002 \003("
  "\t\"(\n\024RemoveItemsOperation\022\020\n\010item_ids\030\001 "
  "\003(\t\"\307\001\n\030ItemsInEntitiesOperation\022H\n\004type"
  "\030\001 \001(\0162:.ai.inworld.packets.entities.Ite"
  "msInEntitiesOperation.Type\022\020\n\010item_ids\030\002"
  " \003(\t\022\024\n\014entity_names\030\003 \003(\t\"9\n\004Type\022\017\n\013UN"
  "SPECIFIED\020\000\022\007\n\003ADD\020\001\022\n\n\006REMOVE\020\002\022\013\n\007REPL"
  "ACE\020\003B\242\001\n\033ai.inworld.packets.entitiesB\036I"
  "nworldPacketsEntitiesProtocolZKgithub.co"
  "m/inworld-ai/inworld-proto-golang/src/go"
  "/ai/inworld/engine/v1alpha\252\002\025Inworld.Grp"
  "c.Entitiesb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_ai_2finworld_2fpackets_2fentities_2fentities_5fpackets_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_ai_2finworld_2fpackets_2fentities_2fentities_5fpackets_2eproto_sccs[6] = {
  &scc_info_CreateOrUpdateItemsOperation_ai_2finworld_2fpackets_2fentities_2fentities_5fpackets_2eproto.base,
  &scc_info_EntityItem_ai_2finworld_2fpackets_2fentities_2fentities_5fpackets_2eproto.base,
  &scc_info_EntityItem_PropertiesEntry_DoNotUse_ai_2finworld_2fpackets_2fentities_2fentities_5fpackets_2eproto.base,
  &scc_info_ItemsInEntitiesOperation_ai_2finworld_2fpackets_2fentities_2fentities_5fpackets_2eproto.base,
  &scc_info_ItemsOperationEvent_ai_2finworld_2fpackets_2fentities_2fentities_5fpackets_2eproto.base,
  &scc_info_RemoveItemsOperation_ai_2finworld_2fpackets_2fentities_2fentities_5fpackets_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_ai_2finworld_2fpackets_2fentities_2fentities_5fpackets_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ai_2finworld_2fpackets_2fentities_2fentities_5fpackets_2eproto = {
  false, false, descriptor_table_protodef_ai_2finworld_2fpackets_2fentities_2fentities_5fpackets_2eproto, "ai/inworld/packets/entities/entities_packets.proto", 1098,
  &descriptor_table_ai_2finworld_2fpackets_2fentities_2fentities_5fpackets_2eproto_once, descriptor_table_ai_2finworld_2fpackets_2fentities_2fentities_5fpackets_2eproto_sccs, descriptor_table_ai_2finworld_2fpackets_2fentities_2fentities_5fpackets_2eproto_deps, 6, 0,
  schemas, file_default_instances, TableStruct_ai_2finworld_2fpackets_2fentities_2fentities_5fpackets_2eproto::offsets,
  file_level_metadata_ai_2finworld_2fpackets_2fentities_2fentities_5fpackets_2eproto, 6, file_level_enum_descriptors_ai_2finworld_2fpackets_2fentities_2fentities_5fpackets_2eproto, file_level_service_descriptors_ai_2finworld_2fpackets_2fentities_2fentities_5fpackets_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_ai_2finworld_2fpackets_2fentities_2fentities_5fpackets_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_ai_2finworld_2fpackets_2fentities_2fentities_5fpackets_2eproto)), true);
namespace ai {
namespace inworld {
namespace packets {
namespace entities {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ItemsInEntitiesOperation_Type_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_ai_2finworld_2fpackets_2fentities_2fentities_5fpackets_2eproto);
  return file_level_enum_descriptors_ai_2finworld_2fpackets_2fentities_2fentities_5fpackets_2eproto[0];
}
bool ItemsInEntitiesOperation_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr ItemsInEntitiesOperation_Type ItemsInEntitiesOperation::UNSPECIFIED;
constexpr ItemsInEntitiesOperation_Type ItemsInEntitiesOperation::ADD;
constexpr ItemsInEntitiesOperation_Type ItemsInEntitiesOperation::REMOVE;
constexpr ItemsInEntitiesOperation_Type ItemsInEntitiesOperation::REPLACE;
constexpr ItemsInEntitiesOperation_Type ItemsInEntitiesOperation::Type_MIN;
constexpr ItemsInEntitiesOperation_Type ItemsInEntitiesOperation::Type_MAX;
constexpr int ItemsInEntitiesOperation::Type_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

EntityItem_PropertiesEntry_DoNotUse::EntityItem_PropertiesEntry_DoNotUse() {}
EntityItem_PropertiesEntry_DoNotUse::EntityItem_PropertiesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void EntityItem_PropertiesEntry_DoNotUse::MergeFrom(const EntityItem_PropertiesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata EntityItem_PropertiesEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void EntityItem_PropertiesEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

class EntityItem::_Internal {
 public:
};

EntityItem::EntityItem(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  properties_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.packets.entities.EntityItem)
}
EntityItem::EntityItem(const EntityItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  properties_.MergeFrom(from.properties_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArena());
  }
  display_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_display_name().empty()) {
    display_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_display_name(), 
      GetArena());
  }
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_description().empty()) {
    description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_description(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.packets.entities.EntityItem)
}

void EntityItem::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_EntityItem_ai_2finworld_2fpackets_2fentities_2fentities_5fpackets_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  display_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

EntityItem::~EntityItem() {
  // @@protoc_insertion_point(destructor:ai.inworld.packets.entities.EntityItem)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void EntityItem::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  display_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void EntityItem::ArenaDtor(void* object) {
  EntityItem* _this = reinterpret_cast< EntityItem* >(object);
  (void)_this;
}
void EntityItem::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void EntityItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EntityItem& EntityItem::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EntityItem_ai_2finworld_2fpackets_2fentities_2fentities_5fpackets_2eproto.base);
  return *internal_default_instance();
}


void EntityItem::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.packets.entities.EntityItem)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  properties_.Clear();
  id_.ClearToEmpty();
  display_name_.ClearToEmpty();
  description_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EntityItem::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.packets.entities.EntityItem.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string display_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_display_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.packets.entities.EntityItem.display_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string description = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.packets.entities.EntityItem.description"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, string> properties = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&properties_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EntityItem::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.packets.entities.EntityItem)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.packets.entities.EntityItem.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string display_name = 2;
  if (this->display_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_display_name().data(), static_cast<int>(this->_internal_display_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.packets.entities.EntityItem.display_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_display_name(), target);
  }

  // string description = 3;
  if (this->description().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.packets.entities.EntityItem.description");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_description(), target);
  }

  // map<string, string> properties = 4;
  if (!this->_internal_properties().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "ai.inworld.packets.entities.EntityItem.PropertiesEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "ai.inworld.packets.entities.EntityItem.PropertiesEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_properties().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_properties().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_properties().begin();
          it != this->_internal_properties().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = EntityItem_PropertiesEntry_DoNotUse::Funcs::InternalSerialize(4, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_properties().begin();
          it != this->_internal_properties().end(); ++it) {
        target = EntityItem_PropertiesEntry_DoNotUse::Funcs::InternalSerialize(4, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.packets.entities.EntityItem)
  return target;
}

size_t EntityItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.packets.entities.EntityItem)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> properties = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_properties_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_properties().begin();
      it != this->_internal_properties().end(); ++it) {
    total_size += EntityItem_PropertiesEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string display_name = 2;
  if (this->display_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_display_name());
  }

  // string description = 3;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EntityItem::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.packets.entities.EntityItem)
  GOOGLE_DCHECK_NE(&from, this);
  const EntityItem* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EntityItem>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.packets.entities.EntityItem)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.packets.entities.EntityItem)
    MergeFrom(*source);
  }
}

void EntityItem::MergeFrom(const EntityItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.packets.entities.EntityItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  properties_.MergeFrom(from.properties_);
  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.display_name().size() > 0) {
    _internal_set_display_name(from._internal_display_name());
  }
  if (from.description().size() > 0) {
    _internal_set_description(from._internal_description());
  }
}

void EntityItem::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.packets.entities.EntityItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EntityItem::CopyFrom(const EntityItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.packets.entities.EntityItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EntityItem::IsInitialized() const {
  return true;
}

void EntityItem::InternalSwap(EntityItem* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  properties_.Swap(&other->properties_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  display_name_.Swap(&other->display_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  description_.Swap(&other->description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata EntityItem::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ItemsOperationEvent::_Internal {
 public:
  static const ::ai::inworld::packets::entities::CreateOrUpdateItemsOperation& create_or_update_items(const ItemsOperationEvent* msg);
  static const ::ai::inworld::packets::entities::RemoveItemsOperation& remove_items(const ItemsOperationEvent* msg);
  static const ::ai::inworld::packets::entities::ItemsInEntitiesOperation& items_in_entities(const ItemsOperationEvent* msg);
};

const ::ai::inworld::packets::entities::CreateOrUpdateItemsOperation&
ItemsOperationEvent::_Internal::create_or_update_items(const ItemsOperationEvent* msg) {
  return *msg->operation_.create_or_update_items_;
}
const ::ai::inworld::packets::entities::RemoveItemsOperation&
ItemsOperationEvent::_Internal::remove_items(const ItemsOperationEvent* msg) {
  return *msg->operation_.remove_items_;
}
const ::ai::inworld::packets::entities::ItemsInEntitiesOperation&
ItemsOperationEvent::_Internal::items_in_entities(const ItemsOperationEvent* msg) {
  return *msg->operation_.items_in_entities_;
}
void ItemsOperationEvent::set_allocated_create_or_update_items(::ai::inworld::packets::entities::CreateOrUpdateItemsOperation* create_or_update_items) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_operation();
  if (create_or_update_items) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(create_or_update_items);
    if (message_arena != submessage_arena) {
      create_or_update_items = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, create_or_update_items, submessage_arena);
    }
    set_has_create_or_update_items();
    operation_.create_or_update_items_ = create_or_update_items;
  }
  // @@protoc_insertion_point(field_set_allocated:ai.inworld.packets.entities.ItemsOperationEvent.create_or_update_items)
}
void ItemsOperationEvent::set_allocated_remove_items(::ai::inworld::packets::entities::RemoveItemsOperation* remove_items) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_operation();
  if (remove_items) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(remove_items);
    if (message_arena != submessage_arena) {
      remove_items = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, remove_items, submessage_arena);
    }
    set_has_remove_items();
    operation_.remove_items_ = remove_items;
  }
  // @@protoc_insertion_point(field_set_allocated:ai.inworld.packets.entities.ItemsOperationEvent.remove_items)
}
void ItemsOperationEvent::set_allocated_items_in_entities(::ai::inworld::packets::entities::ItemsInEntitiesOperation* items_in_entities) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_operation();
  if (items_in_entities) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(items_in_entities);
    if (message_arena != submessage_arena) {
      items_in_entities = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, items_in_entities, submessage_arena);
    }
    set_has_items_in_entities();
    operation_.items_in_entities_ = items_in_entities;
  }
  // @@protoc_insertion_point(field_set_allocated:ai.inworld.packets.entities.ItemsOperationEvent.items_in_entities)
}
ItemsOperationEvent::ItemsOperationEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.packets.entities.ItemsOperationEvent)
}
ItemsOperationEvent::ItemsOperationEvent(const ItemsOperationEvent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_operation();
  switch (from.operation_case()) {
    case kCreateOrUpdateItems: {
      _internal_mutable_create_or_update_items()->::ai::inworld::packets::entities::CreateOrUpdateItemsOperation::MergeFrom(from._internal_create_or_update_items());
      break;
    }
    case kRemoveItems: {
      _internal_mutable_remove_items()->::ai::inworld::packets::entities::RemoveItemsOperation::MergeFrom(from._internal_remove_items());
      break;
    }
    case kItemsInEntities: {
      _internal_mutable_items_in_entities()->::ai::inworld::packets::entities::ItemsInEntitiesOperation::MergeFrom(from._internal_items_in_entities());
      break;
    }
    case OPERATION_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.packets.entities.ItemsOperationEvent)
}

void ItemsOperationEvent::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ItemsOperationEvent_ai_2finworld_2fpackets_2fentities_2fentities_5fpackets_2eproto.base);
  clear_has_operation();
}

ItemsOperationEvent::~ItemsOperationEvent() {
  // @@protoc_insertion_point(destructor:ai.inworld.packets.entities.ItemsOperationEvent)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ItemsOperationEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_operation()) {
    clear_operation();
  }
}

void ItemsOperationEvent::ArenaDtor(void* object) {
  ItemsOperationEvent* _this = reinterpret_cast< ItemsOperationEvent* >(object);
  (void)_this;
}
void ItemsOperationEvent::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ItemsOperationEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ItemsOperationEvent& ItemsOperationEvent::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ItemsOperationEvent_ai_2finworld_2fpackets_2fentities_2fentities_5fpackets_2eproto.base);
  return *internal_default_instance();
}


void ItemsOperationEvent::clear_operation() {
// @@protoc_insertion_point(one_of_clear_start:ai.inworld.packets.entities.ItemsOperationEvent)
  switch (operation_case()) {
    case kCreateOrUpdateItems: {
      if (GetArena() == nullptr) {
        delete operation_.create_or_update_items_;
      }
      break;
    }
    case kRemoveItems: {
      if (GetArena() == nullptr) {
        delete operation_.remove_items_;
      }
      break;
    }
    case kItemsInEntities: {
      if (GetArena() == nullptr) {
        delete operation_.items_in_entities_;
      }
      break;
    }
    case OPERATION_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = OPERATION_NOT_SET;
}


void ItemsOperationEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.packets.entities.ItemsOperationEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_operation();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ItemsOperationEvent::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .ai.inworld.packets.entities.CreateOrUpdateItemsOperation create_or_update_items = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_create_or_update_items(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ai.inworld.packets.entities.RemoveItemsOperation remove_items = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_remove_items(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ai.inworld.packets.entities.ItemsInEntitiesOperation items_in_entities = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_items_in_entities(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ItemsOperationEvent::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.packets.entities.ItemsOperationEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ai.inworld.packets.entities.CreateOrUpdateItemsOperation create_or_update_items = 1;
  if (_internal_has_create_or_update_items()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::create_or_update_items(this), target, stream);
  }

  // .ai.inworld.packets.entities.RemoveItemsOperation remove_items = 3;
  if (_internal_has_remove_items()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::remove_items(this), target, stream);
  }

  // .ai.inworld.packets.entities.ItemsInEntitiesOperation items_in_entities = 4;
  if (_internal_has_items_in_entities()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::items_in_entities(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.packets.entities.ItemsOperationEvent)
  return target;
}

size_t ItemsOperationEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.packets.entities.ItemsOperationEvent)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (operation_case()) {
    // .ai.inworld.packets.entities.CreateOrUpdateItemsOperation create_or_update_items = 1;
    case kCreateOrUpdateItems: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *operation_.create_or_update_items_);
      break;
    }
    // .ai.inworld.packets.entities.RemoveItemsOperation remove_items = 3;
    case kRemoveItems: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *operation_.remove_items_);
      break;
    }
    // .ai.inworld.packets.entities.ItemsInEntitiesOperation items_in_entities = 4;
    case kItemsInEntities: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *operation_.items_in_entities_);
      break;
    }
    case OPERATION_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ItemsOperationEvent::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.packets.entities.ItemsOperationEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const ItemsOperationEvent* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ItemsOperationEvent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.packets.entities.ItemsOperationEvent)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.packets.entities.ItemsOperationEvent)
    MergeFrom(*source);
  }
}

void ItemsOperationEvent::MergeFrom(const ItemsOperationEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.packets.entities.ItemsOperationEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.operation_case()) {
    case kCreateOrUpdateItems: {
      _internal_mutable_create_or_update_items()->::ai::inworld::packets::entities::CreateOrUpdateItemsOperation::MergeFrom(from._internal_create_or_update_items());
      break;
    }
    case kRemoveItems: {
      _internal_mutable_remove_items()->::ai::inworld::packets::entities::RemoveItemsOperation::MergeFrom(from._internal_remove_items());
      break;
    }
    case kItemsInEntities: {
      _internal_mutable_items_in_entities()->::ai::inworld::packets::entities::ItemsInEntitiesOperation::MergeFrom(from._internal_items_in_entities());
      break;
    }
    case OPERATION_NOT_SET: {
      break;
    }
  }
}

void ItemsOperationEvent::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.packets.entities.ItemsOperationEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemsOperationEvent::CopyFrom(const ItemsOperationEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.packets.entities.ItemsOperationEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemsOperationEvent::IsInitialized() const {
  return true;
}

void ItemsOperationEvent::InternalSwap(ItemsOperationEvent* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(operation_, other->operation_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata ItemsOperationEvent::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CreateOrUpdateItemsOperation::_Internal {
 public:
};

CreateOrUpdateItemsOperation::CreateOrUpdateItemsOperation(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  items_(arena),
  add_to_entities_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.packets.entities.CreateOrUpdateItemsOperation)
}
CreateOrUpdateItemsOperation::CreateOrUpdateItemsOperation(const CreateOrUpdateItemsOperation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      items_(from.items_),
      add_to_entities_(from.add_to_entities_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ai.inworld.packets.entities.CreateOrUpdateItemsOperation)
}

void CreateOrUpdateItemsOperation::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateOrUpdateItemsOperation_ai_2finworld_2fpackets_2fentities_2fentities_5fpackets_2eproto.base);
}

CreateOrUpdateItemsOperation::~CreateOrUpdateItemsOperation() {
  // @@protoc_insertion_point(destructor:ai.inworld.packets.entities.CreateOrUpdateItemsOperation)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateOrUpdateItemsOperation::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CreateOrUpdateItemsOperation::ArenaDtor(void* object) {
  CreateOrUpdateItemsOperation* _this = reinterpret_cast< CreateOrUpdateItemsOperation* >(object);
  (void)_this;
}
void CreateOrUpdateItemsOperation::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateOrUpdateItemsOperation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateOrUpdateItemsOperation& CreateOrUpdateItemsOperation::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateOrUpdateItemsOperation_ai_2finworld_2fpackets_2fentities_2fentities_5fpackets_2eproto.base);
  return *internal_default_instance();
}


void CreateOrUpdateItemsOperation::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.packets.entities.CreateOrUpdateItemsOperation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  items_.Clear();
  add_to_entities_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateOrUpdateItemsOperation::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .ai.inworld.packets.entities.EntityItem items = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_items(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string add_to_entities = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_add_to_entities();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.packets.entities.CreateOrUpdateItemsOperation.add_to_entities"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateOrUpdateItemsOperation::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.packets.entities.CreateOrUpdateItemsOperation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ai.inworld.packets.entities.EntityItem items = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_items_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_items(i), target, stream);
  }

  // repeated string add_to_entities = 2;
  for (int i = 0, n = this->_internal_add_to_entities_size(); i < n; i++) {
    const auto& s = this->_internal_add_to_entities(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.packets.entities.CreateOrUpdateItemsOperation.add_to_entities");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.packets.entities.CreateOrUpdateItemsOperation)
  return target;
}

size_t CreateOrUpdateItemsOperation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.packets.entities.CreateOrUpdateItemsOperation)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ai.inworld.packets.entities.EntityItem items = 1;
  total_size += 1UL * this->_internal_items_size();
  for (const auto& msg : this->items_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated string add_to_entities = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(add_to_entities_.size());
  for (int i = 0, n = add_to_entities_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      add_to_entities_.Get(i));
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateOrUpdateItemsOperation::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.packets.entities.CreateOrUpdateItemsOperation)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateOrUpdateItemsOperation* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateOrUpdateItemsOperation>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.packets.entities.CreateOrUpdateItemsOperation)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.packets.entities.CreateOrUpdateItemsOperation)
    MergeFrom(*source);
  }
}

void CreateOrUpdateItemsOperation::MergeFrom(const CreateOrUpdateItemsOperation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.packets.entities.CreateOrUpdateItemsOperation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
  add_to_entities_.MergeFrom(from.add_to_entities_);
}

void CreateOrUpdateItemsOperation::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.packets.entities.CreateOrUpdateItemsOperation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateOrUpdateItemsOperation::CopyFrom(const CreateOrUpdateItemsOperation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.packets.entities.CreateOrUpdateItemsOperation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateOrUpdateItemsOperation::IsInitialized() const {
  return true;
}

void CreateOrUpdateItemsOperation::InternalSwap(CreateOrUpdateItemsOperation* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  items_.InternalSwap(&other->items_);
  add_to_entities_.InternalSwap(&other->add_to_entities_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateOrUpdateItemsOperation::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RemoveItemsOperation::_Internal {
 public:
};

RemoveItemsOperation::RemoveItemsOperation(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  item_ids_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.packets.entities.RemoveItemsOperation)
}
RemoveItemsOperation::RemoveItemsOperation(const RemoveItemsOperation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      item_ids_(from.item_ids_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ai.inworld.packets.entities.RemoveItemsOperation)
}

void RemoveItemsOperation::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RemoveItemsOperation_ai_2finworld_2fpackets_2fentities_2fentities_5fpackets_2eproto.base);
}

RemoveItemsOperation::~RemoveItemsOperation() {
  // @@protoc_insertion_point(destructor:ai.inworld.packets.entities.RemoveItemsOperation)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveItemsOperation::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RemoveItemsOperation::ArenaDtor(void* object) {
  RemoveItemsOperation* _this = reinterpret_cast< RemoveItemsOperation* >(object);
  (void)_this;
}
void RemoveItemsOperation::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveItemsOperation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemoveItemsOperation& RemoveItemsOperation::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemoveItemsOperation_ai_2finworld_2fpackets_2fentities_2fentities_5fpackets_2eproto.base);
  return *internal_default_instance();
}


void RemoveItemsOperation::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.packets.entities.RemoveItemsOperation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_ids_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveItemsOperation::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string item_ids = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_item_ids();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.packets.entities.RemoveItemsOperation.item_ids"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveItemsOperation::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.packets.entities.RemoveItemsOperation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string item_ids = 1;
  for (int i = 0, n = this->_internal_item_ids_size(); i < n; i++) {
    const auto& s = this->_internal_item_ids(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.packets.entities.RemoveItemsOperation.item_ids");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.packets.entities.RemoveItemsOperation)
  return target;
}

size_t RemoveItemsOperation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.packets.entities.RemoveItemsOperation)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string item_ids = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(item_ids_.size());
  for (int i = 0, n = item_ids_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      item_ids_.Get(i));
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveItemsOperation::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.packets.entities.RemoveItemsOperation)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveItemsOperation* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveItemsOperation>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.packets.entities.RemoveItemsOperation)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.packets.entities.RemoveItemsOperation)
    MergeFrom(*source);
  }
}

void RemoveItemsOperation::MergeFrom(const RemoveItemsOperation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.packets.entities.RemoveItemsOperation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_ids_.MergeFrom(from.item_ids_);
}

void RemoveItemsOperation::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.packets.entities.RemoveItemsOperation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveItemsOperation::CopyFrom(const RemoveItemsOperation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.packets.entities.RemoveItemsOperation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveItemsOperation::IsInitialized() const {
  return true;
}

void RemoveItemsOperation::InternalSwap(RemoveItemsOperation* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  item_ids_.InternalSwap(&other->item_ids_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveItemsOperation::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ItemsInEntitiesOperation::_Internal {
 public:
};

ItemsInEntitiesOperation::ItemsInEntitiesOperation(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  item_ids_(arena),
  entity_names_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.packets.entities.ItemsInEntitiesOperation)
}
ItemsInEntitiesOperation::ItemsInEntitiesOperation(const ItemsInEntitiesOperation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      item_ids_(from.item_ids_),
      entity_names_(from.entity_names_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:ai.inworld.packets.entities.ItemsInEntitiesOperation)
}

void ItemsInEntitiesOperation::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ItemsInEntitiesOperation_ai_2finworld_2fpackets_2fentities_2fentities_5fpackets_2eproto.base);
  type_ = 0;
}

ItemsInEntitiesOperation::~ItemsInEntitiesOperation() {
  // @@protoc_insertion_point(destructor:ai.inworld.packets.entities.ItemsInEntitiesOperation)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ItemsInEntitiesOperation::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ItemsInEntitiesOperation::ArenaDtor(void* object) {
  ItemsInEntitiesOperation* _this = reinterpret_cast< ItemsInEntitiesOperation* >(object);
  (void)_this;
}
void ItemsInEntitiesOperation::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ItemsInEntitiesOperation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ItemsInEntitiesOperation& ItemsInEntitiesOperation::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ItemsInEntitiesOperation_ai_2finworld_2fpackets_2fentities_2fentities_5fpackets_2eproto.base);
  return *internal_default_instance();
}


void ItemsInEntitiesOperation::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.packets.entities.ItemsInEntitiesOperation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_ids_.Clear();
  entity_names_.Clear();
  type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ItemsInEntitiesOperation::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .ai.inworld.packets.entities.ItemsInEntitiesOperation.Type type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::ai::inworld::packets::entities::ItemsInEntitiesOperation_Type>(val));
        } else goto handle_unusual;
        continue;
      // repeated string item_ids = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_item_ids();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.packets.entities.ItemsInEntitiesOperation.item_ids"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string entity_names = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_entity_names();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.packets.entities.ItemsInEntitiesOperation.entity_names"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ItemsInEntitiesOperation::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.packets.entities.ItemsInEntitiesOperation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ai.inworld.packets.entities.ItemsInEntitiesOperation.Type type = 1;
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_type(), target);
  }

  // repeated string item_ids = 2;
  for (int i = 0, n = this->_internal_item_ids_size(); i < n; i++) {
    const auto& s = this->_internal_item_ids(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.packets.entities.ItemsInEntitiesOperation.item_ids");
    target = stream->WriteString(2, s, target);
  }

  // repeated string entity_names = 3;
  for (int i = 0, n = this->_internal_entity_names_size(); i < n; i++) {
    const auto& s = this->_internal_entity_names(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.packets.entities.ItemsInEntitiesOperation.entity_names");
    target = stream->WriteString(3, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.packets.entities.ItemsInEntitiesOperation)
  return target;
}

size_t ItemsInEntitiesOperation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.packets.entities.ItemsInEntitiesOperation)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string item_ids = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(item_ids_.size());
  for (int i = 0, n = item_ids_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      item_ids_.Get(i));
  }

  // repeated string entity_names = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(entity_names_.size());
  for (int i = 0, n = entity_names_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      entity_names_.Get(i));
  }

  // .ai.inworld.packets.entities.ItemsInEntitiesOperation.Type type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ItemsInEntitiesOperation::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.packets.entities.ItemsInEntitiesOperation)
  GOOGLE_DCHECK_NE(&from, this);
  const ItemsInEntitiesOperation* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ItemsInEntitiesOperation>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.packets.entities.ItemsInEntitiesOperation)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.packets.entities.ItemsInEntitiesOperation)
    MergeFrom(*source);
  }
}

void ItemsInEntitiesOperation::MergeFrom(const ItemsInEntitiesOperation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.packets.entities.ItemsInEntitiesOperation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_ids_.MergeFrom(from.item_ids_);
  entity_names_.MergeFrom(from.entity_names_);
  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
}

void ItemsInEntitiesOperation::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.packets.entities.ItemsInEntitiesOperation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemsInEntitiesOperation::CopyFrom(const ItemsInEntitiesOperation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.packets.entities.ItemsInEntitiesOperation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemsInEntitiesOperation::IsInitialized() const {
  return true;
}

void ItemsInEntitiesOperation::InternalSwap(ItemsInEntitiesOperation* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  item_ids_.InternalSwap(&other->item_ids_);
  entity_names_.InternalSwap(&other->entity_names_);
  swap(type_, other->type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ItemsInEntitiesOperation::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace entities
}  // namespace packets
}  // namespace inworld
}  // namespace ai
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::ai::inworld::packets::entities::EntityItem_PropertiesEntry_DoNotUse* Arena::CreateMaybeMessage< ::ai::inworld::packets::entities::EntityItem_PropertiesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::packets::entities::EntityItem_PropertiesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::packets::entities::EntityItem* Arena::CreateMaybeMessage< ::ai::inworld::packets::entities::EntityItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::packets::entities::EntityItem >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::packets::entities::ItemsOperationEvent* Arena::CreateMaybeMessage< ::ai::inworld::packets::entities::ItemsOperationEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::packets::entities::ItemsOperationEvent >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::packets::entities::CreateOrUpdateItemsOperation* Arena::CreateMaybeMessage< ::ai::inworld::packets::entities::CreateOrUpdateItemsOperation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::packets::entities::CreateOrUpdateItemsOperation >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::packets::entities::RemoveItemsOperation* Arena::CreateMaybeMessage< ::ai::inworld::packets::entities::RemoveItemsOperation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::packets::entities::RemoveItemsOperation >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::packets::entities::ItemsInEntitiesOperation* Arena::CreateMaybeMessage< ::ai::inworld::packets::entities::ItemsInEntitiesOperation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::packets::entities::ItemsInEntitiesOperation >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
