#include "ProtoDisableWarning.h"
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ai/inworld/studio/v1alpha/language_code.proto

#include "ai/inworld/studio/v1alpha/language_code.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace ai {
namespace inworld {
namespace studio {
namespace v1alpha {
}  // namespace v1alpha
}  // namespace studio
}  // namespace inworld
}  // namespace ai
static constexpr ::PROTOBUF_NAMESPACE_ID::Metadata* file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2flanguage_5fcode_2eproto = nullptr;
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_ai_2finworld_2fstudio_2fv1alpha_2flanguage_5fcode_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_ai_2finworld_2fstudio_2fv1alpha_2flanguage_5fcode_2eproto = nullptr;
const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_ai_2finworld_2fstudio_2fv1alpha_2flanguage_5fcode_2eproto::offsets[1] = {};
static constexpr ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema* schemas = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_ai_2finworld_2fstudio_2fv1alpha_2flanguage_5fcode_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n-ai/inworld/studio/v1alpha/language_cod"
  "e.proto\022\031ai.inworld.studio.v1alpha\032 goog"
  "le/protobuf/descriptor.proto*\233\001\n\014Languag"
  "eCode\022\035\n\031LANGUAGE_CODE_UNSPECIFIED\020\000\022#\n\005"
  "EN_US\020\001\032\030\252\321\371\326\003\005en-US\262\321\371\326\003\007English\022#\n\005ZH_"
  "CN\020\002\032\030\252\321\371\326\003\005zh-CN\262\321\371\326\003\007Chinese\022\"\n\005KO_KR\020"
  "\003\032\027\252\321\371\326\003\005ko-KR\262\321\371\326\003\006Korean:E\n\024language_c"
  "ode_string\022!.google.protobuf.EnumValueOp"
  "tions\030\225\232\357: \001(\t\210\001\001:>\n\rlanguage_name\022!.goo"
  "gle.protobuf.EnumValueOptions\030\226\232\357: \001(\t\210\001"
  "\001B\236\001\n\031ai.inworld.studio.v1alphaB\021Languag"
  "eCodeProtoP\001ZMgithub.com/inworld-ai/inwo"
  "rld/serving/grpc-gateway/build/proto/stu"
  "dio/v1alpha\270\001\001\252\002\031Ai.Inworld.Studio.V1Alp"
  "hab\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2flanguage_5fcode_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2fdescriptor_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2flanguage_5fcode_2eproto_sccs[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2flanguage_5fcode_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2flanguage_5fcode_2eproto = {
  false, false, descriptor_table_protodef_ai_2finworld_2fstudio_2fv1alpha_2flanguage_5fcode_2eproto, "ai/inworld/studio/v1alpha/language_code.proto", 570,
  &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2flanguage_5fcode_2eproto_once, descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2flanguage_5fcode_2eproto_sccs, descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2flanguage_5fcode_2eproto_deps, 0, 1,
  schemas, file_default_instances, TableStruct_ai_2finworld_2fstudio_2fv1alpha_2flanguage_5fcode_2eproto::offsets,
  file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2flanguage_5fcode_2eproto, 0, file_level_enum_descriptors_ai_2finworld_2fstudio_2fv1alpha_2flanguage_5fcode_2eproto, file_level_service_descriptors_ai_2finworld_2fstudio_2fv1alpha_2flanguage_5fcode_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_ai_2finworld_2fstudio_2fv1alpha_2flanguage_5fcode_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2flanguage_5fcode_2eproto)), true);
namespace ai {
namespace inworld {
namespace studio {
namespace v1alpha {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* LanguageCode_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2flanguage_5fcode_2eproto);
  return file_level_enum_descriptors_ai_2finworld_2fstudio_2fv1alpha_2flanguage_5fcode_2eproto[0];
}
bool LanguageCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const std::string language_code_string_default("");
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::google::protobuf_inworld::EnumValueOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::StringTypeTraits, 9, false >
  language_code_string(kLanguageCodeStringFieldNumber, language_code_string_default);
const std::string language_name_default("");
::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::google::protobuf_inworld::EnumValueOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::StringTypeTraits, 9, false >
  language_name(kLanguageNameFieldNumber, language_name_default);

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1alpha
}  // namespace studio
}  // namespace inworld
}  // namespace ai
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
