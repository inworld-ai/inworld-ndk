#include "ProtoDisableWarning.h"
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ai/inworld/common/status.proto

#include "ai/inworld/common/status.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_ai_2finworld_2fcommon_2fstatus_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ResourceNotFoundDetails_ai_2finworld_2fcommon_2fstatus_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2ftimestamp_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto;
namespace ai {
namespace inworld {
namespace common {
class InworldStatusDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InworldStatus> _instance;
} _InworldStatus_default_instance_;
class ResourceNotFoundDetailsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ResourceNotFoundDetails> _instance;
} _ResourceNotFoundDetails_default_instance_;
}  // namespace common
}  // namespace inworld
}  // namespace ai
static void InitDefaultsscc_info_InworldStatus_ai_2finworld_2fcommon_2fstatus_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::common::_InworldStatus_default_instance_;
    new (ptr) ::ai::inworld::common::InworldStatus();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_InworldStatus_ai_2finworld_2fcommon_2fstatus_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_InworldStatus_ai_2finworld_2fcommon_2fstatus_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,
      &scc_info_ResourceNotFoundDetails_ai_2finworld_2fcommon_2fstatus_2eproto.base,}};

static void InitDefaultsscc_info_ResourceNotFoundDetails_ai_2finworld_2fcommon_2fstatus_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ai::inworld::common::_ResourceNotFoundDetails_default_instance_;
    new (ptr) ::ai::inworld::common::ResourceNotFoundDetails();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ResourceNotFoundDetails_ai_2finworld_2fcommon_2fstatus_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ResourceNotFoundDetails_ai_2finworld_2fcommon_2fstatus_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_ai_2finworld_2fcommon_2fstatus_2eproto[2];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_ai_2finworld_2fcommon_2fstatus_2eproto[3];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_ai_2finworld_2fcommon_2fstatus_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_ai_2finworld_2fcommon_2fstatus_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::common::InworldStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::common::InworldStatus, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::common::InworldStatus, error_type_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::common::InworldStatus, reconnect_type_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::common::InworldStatus, reconnect_time_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::common::InworldStatus, max_retries_),
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::ai::inworld::common::InworldStatus, error_details_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::common::ResourceNotFoundDetails, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::common::ResourceNotFoundDetails, resource_id_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::common::ResourceNotFoundDetails, resource_type_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ai::inworld::common::InworldStatus)},
  { 11, -1, sizeof(::ai::inworld::common::ResourceNotFoundDetails)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::common::_InworldStatus_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ai::inworld::common::_ResourceNotFoundDetails_default_instance_),
};

const char descriptor_table_protodef_ai_2finworld_2fcommon_2fstatus_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\036ai/inworld/common/status.proto\022\021ai.inw"
  "orld.common\032\037google/protobuf/timestamp.p"
  "roto\"\242\002\n\rInworldStatus\0220\n\nerror_type\030\001 \001"
  "(\0162\034.ai.inworld.common.ErrorType\022;\n\016reco"
  "nnect_type\030\002 \001(\0162#.ai.inworld.common.Rec"
  "onnectionType\0222\n\016reconnect_time\030\003 \001(\0132\032."
  "google.protobuf.Timestamp\022\023\n\013max_retries"
  "\030\004 \001(\005\022H\n\022resource_not_found\030\005 \001(\0132*.ai."
  "inworld.common.ResourceNotFoundDetailsH\000"
  "B\017\n\rerror_details\"f\n\027ResourceNotFoundDet"
  "ails\022\023\n\013resource_id\030\001 \001(\t\0226\n\rresource_ty"
  "pe\030\002 \001(\0162\037.ai.inworld.common.ResourceTyp"
  "e*\356\001\n\tErrorType\022\031\n\025SESSION_TOKEN_EXPIRED"
  "\020\000\022\031\n\025SESSION_TOKEN_INVALID\020\001\022\037\n\033SESSION"
  "_RESOURCES_EXHAUSTED\020\002\022\034\n\030BILLING_TOKENS"
  "_EXHAUSTED\020\003\022\024\n\020ACCOUNT_DISABLED\020\004\022\023\n\017SE"
  "SSION_INVALID\020\005\022\026\n\022RESOURCE_NOT_FOUND\020\006\022"
  "\024\n\020SAFETY_VIOLATION\020\007\022\023\n\017SESSION_EXPIRED"
  "\020\010*K\n\020ReconnectionType\022\r\n\tUNDEFINED\020\000\022\014\n"
  "\010NO_RETRY\020\001\022\r\n\tIMMEDIATE\020\002\022\013\n\007TIMEOUT\020\003*"
  "K\n\014ResourceType\022\033\n\027RESOURCE_TYPE_UNDEFIN"
  "ED\020\000\022\036\n\032RESOURCE_TYPE_CONVERSATION\020\001B}\n\030"
  "ai.inworld.engine.statusB\022InworldStatusP"
  "rotoP\001Z3github.com/inworld-ai/inworld/en"
  "gine/inworld-status\252\002\025Inworld.Engine.Sta"
  "tusb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_ai_2finworld_2fcommon_2fstatus_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_ai_2finworld_2fcommon_2fstatus_2eproto_sccs[2] = {
  &scc_info_InworldStatus_ai_2finworld_2fcommon_2fstatus_2eproto.base,
  &scc_info_ResourceNotFoundDetails_ai_2finworld_2fcommon_2fstatus_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_ai_2finworld_2fcommon_2fstatus_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ai_2finworld_2fcommon_2fstatus_2eproto = {
  false, false, descriptor_table_protodef_ai_2finworld_2fcommon_2fstatus_2eproto, "ai/inworld/common/status.proto", 1011,
  &descriptor_table_ai_2finworld_2fcommon_2fstatus_2eproto_once, descriptor_table_ai_2finworld_2fcommon_2fstatus_2eproto_sccs, descriptor_table_ai_2finworld_2fcommon_2fstatus_2eproto_deps, 2, 1,
  schemas, file_default_instances, TableStruct_ai_2finworld_2fcommon_2fstatus_2eproto::offsets,
  file_level_metadata_ai_2finworld_2fcommon_2fstatus_2eproto, 2, file_level_enum_descriptors_ai_2finworld_2fcommon_2fstatus_2eproto, file_level_service_descriptors_ai_2finworld_2fcommon_2fstatus_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_ai_2finworld_2fcommon_2fstatus_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_ai_2finworld_2fcommon_2fstatus_2eproto)), true);
namespace ai {
namespace inworld {
namespace common {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ErrorType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_ai_2finworld_2fcommon_2fstatus_2eproto);
  return file_level_enum_descriptors_ai_2finworld_2fcommon_2fstatus_2eproto[0];
}
bool ErrorType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ReconnectionType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_ai_2finworld_2fcommon_2fstatus_2eproto);
  return file_level_enum_descriptors_ai_2finworld_2fcommon_2fstatus_2eproto[1];
}
bool ReconnectionType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ResourceType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_ai_2finworld_2fcommon_2fstatus_2eproto);
  return file_level_enum_descriptors_ai_2finworld_2fcommon_2fstatus_2eproto[2];
}
bool ResourceType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class InworldStatus::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Timestamp& reconnect_time(const InworldStatus* msg);
  static const ::ai::inworld::common::ResourceNotFoundDetails& resource_not_found(const InworldStatus* msg);
};

const PROTOBUF_NAMESPACE_ID::Timestamp&
InworldStatus::_Internal::reconnect_time(const InworldStatus* msg) {
  return *msg->reconnect_time_;
}
const ::ai::inworld::common::ResourceNotFoundDetails&
InworldStatus::_Internal::resource_not_found(const InworldStatus* msg) {
  return *msg->error_details_.resource_not_found_;
}
void InworldStatus::clear_reconnect_time() {
  if (GetArena() == nullptr && reconnect_time_ != nullptr) {
    delete reconnect_time_;
  }
  reconnect_time_ = nullptr;
}
void InworldStatus::set_allocated_resource_not_found(::ai::inworld::common::ResourceNotFoundDetails* resource_not_found) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_error_details();
  if (resource_not_found) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(resource_not_found);
    if (message_arena != submessage_arena) {
      resource_not_found = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, resource_not_found, submessage_arena);
    }
    set_has_resource_not_found();
    error_details_.resource_not_found_ = resource_not_found;
  }
  // @@protoc_insertion_point(field_set_allocated:ai.inworld.common.InworldStatus.resource_not_found)
}
InworldStatus::InworldStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.common.InworldStatus)
}
InworldStatus::InworldStatus(const InworldStatus& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_reconnect_time()) {
    reconnect_time_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.reconnect_time_);
  } else {
    reconnect_time_ = nullptr;
  }
  ::memcpy(&error_type_, &from.error_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&max_retries_) -
    reinterpret_cast<char*>(&error_type_)) + sizeof(max_retries_));
  clear_has_error_details();
  switch (from.error_details_case()) {
    case kResourceNotFound: {
      _internal_mutable_resource_not_found()->::ai::inworld::common::ResourceNotFoundDetails::MergeFrom(from._internal_resource_not_found());
      break;
    }
    case ERROR_DETAILS_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.common.InworldStatus)
}

void InworldStatus::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_InworldStatus_ai_2finworld_2fcommon_2fstatus_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&reconnect_time_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&max_retries_) -
      reinterpret_cast<char*>(&reconnect_time_)) + sizeof(max_retries_));
  clear_has_error_details();
}

InworldStatus::~InworldStatus() {
  // @@protoc_insertion_point(destructor:ai.inworld.common.InworldStatus)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void InworldStatus::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete reconnect_time_;
  if (has_error_details()) {
    clear_error_details();
  }
}

void InworldStatus::ArenaDtor(void* object) {
  InworldStatus* _this = reinterpret_cast< InworldStatus* >(object);
  (void)_this;
}
void InworldStatus::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void InworldStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InworldStatus& InworldStatus::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_InworldStatus_ai_2finworld_2fcommon_2fstatus_2eproto.base);
  return *internal_default_instance();
}


void InworldStatus::clear_error_details() {
// @@protoc_insertion_point(one_of_clear_start:ai.inworld.common.InworldStatus)
  switch (error_details_case()) {
    case kResourceNotFound: {
      if (GetArena() == nullptr) {
        delete error_details_.resource_not_found_;
      }
      break;
    }
    case ERROR_DETAILS_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ERROR_DETAILS_NOT_SET;
}


void InworldStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.common.InworldStatus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && reconnect_time_ != nullptr) {
    delete reconnect_time_;
  }
  reconnect_time_ = nullptr;
  ::memset(&error_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_retries_) -
      reinterpret_cast<char*>(&error_type_)) + sizeof(max_retries_));
  clear_error_details();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InworldStatus::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .ai.inworld.common.ErrorType error_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_error_type(static_cast<::ai::inworld::common::ErrorType>(val));
        } else goto handle_unusual;
        continue;
      // .ai.inworld.common.ReconnectionType reconnect_type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_reconnect_type(static_cast<::ai::inworld::common::ReconnectionType>(val));
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp reconnect_time = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_reconnect_time(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 max_retries = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          max_retries_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ai.inworld.common.ResourceNotFoundDetails resource_not_found = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_resource_not_found(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* InworldStatus::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.common.InworldStatus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ai.inworld.common.ErrorType error_type = 1;
  if (this->error_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_error_type(), target);
  }

  // .ai.inworld.common.ReconnectionType reconnect_type = 2;
  if (this->reconnect_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_reconnect_type(), target);
  }

  // .google.protobuf.Timestamp reconnect_time = 3;
  if (this->has_reconnect_time()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::reconnect_time(this), target, stream);
  }

  // int32 max_retries = 4;
  if (this->max_retries() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_max_retries(), target);
  }

  // .ai.inworld.common.ResourceNotFoundDetails resource_not_found = 5;
  if (_internal_has_resource_not_found()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::resource_not_found(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.common.InworldStatus)
  return target;
}

size_t InworldStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.common.InworldStatus)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Timestamp reconnect_time = 3;
  if (this->has_reconnect_time()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *reconnect_time_);
  }

  // .ai.inworld.common.ErrorType error_type = 1;
  if (this->error_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_error_type());
  }

  // .ai.inworld.common.ReconnectionType reconnect_type = 2;
  if (this->reconnect_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_reconnect_type());
  }

  // int32 max_retries = 4;
  if (this->max_retries() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_max_retries());
  }

  switch (error_details_case()) {
    // .ai.inworld.common.ResourceNotFoundDetails resource_not_found = 5;
    case kResourceNotFound: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *error_details_.resource_not_found_);
      break;
    }
    case ERROR_DETAILS_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InworldStatus::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.common.InworldStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const InworldStatus* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<InworldStatus>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.common.InworldStatus)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.common.InworldStatus)
    MergeFrom(*source);
  }
}

void InworldStatus::MergeFrom(const InworldStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.common.InworldStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_reconnect_time()) {
    _internal_mutable_reconnect_time()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_reconnect_time());
  }
  if (from.error_type() != 0) {
    _internal_set_error_type(from._internal_error_type());
  }
  if (from.reconnect_type() != 0) {
    _internal_set_reconnect_type(from._internal_reconnect_type());
  }
  if (from.max_retries() != 0) {
    _internal_set_max_retries(from._internal_max_retries());
  }
  switch (from.error_details_case()) {
    case kResourceNotFound: {
      _internal_mutable_resource_not_found()->::ai::inworld::common::ResourceNotFoundDetails::MergeFrom(from._internal_resource_not_found());
      break;
    }
    case ERROR_DETAILS_NOT_SET: {
      break;
    }
  }
}

void InworldStatus::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.common.InworldStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InworldStatus::CopyFrom(const InworldStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.common.InworldStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InworldStatus::IsInitialized() const {
  return true;
}

void InworldStatus::InternalSwap(InworldStatus* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InworldStatus, max_retries_)
      + sizeof(InworldStatus::max_retries_)
      - PROTOBUF_FIELD_OFFSET(InworldStatus, reconnect_time_)>(
          reinterpret_cast<char*>(&reconnect_time_),
          reinterpret_cast<char*>(&other->reconnect_time_));
  swap(error_details_, other->error_details_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata InworldStatus::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ResourceNotFoundDetails::_Internal {
 public:
};

ResourceNotFoundDetails::ResourceNotFoundDetails(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.common.ResourceNotFoundDetails)
}
ResourceNotFoundDetails::ResourceNotFoundDetails(const ResourceNotFoundDetails& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  resource_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_resource_id().empty()) {
    resource_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_resource_id(), 
      GetArena());
  }
  resource_type_ = from.resource_type_;
  // @@protoc_insertion_point(copy_constructor:ai.inworld.common.ResourceNotFoundDetails)
}

void ResourceNotFoundDetails::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ResourceNotFoundDetails_ai_2finworld_2fcommon_2fstatus_2eproto.base);
  resource_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  resource_type_ = 0;
}

ResourceNotFoundDetails::~ResourceNotFoundDetails() {
  // @@protoc_insertion_point(destructor:ai.inworld.common.ResourceNotFoundDetails)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ResourceNotFoundDetails::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  resource_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ResourceNotFoundDetails::ArenaDtor(void* object) {
  ResourceNotFoundDetails* _this = reinterpret_cast< ResourceNotFoundDetails* >(object);
  (void)_this;
}
void ResourceNotFoundDetails::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ResourceNotFoundDetails::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ResourceNotFoundDetails& ResourceNotFoundDetails::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ResourceNotFoundDetails_ai_2finworld_2fcommon_2fstatus_2eproto.base);
  return *internal_default_instance();
}


void ResourceNotFoundDetails::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.common.ResourceNotFoundDetails)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  resource_id_.ClearToEmpty();
  resource_type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResourceNotFoundDetails::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string resource_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_resource_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ai.inworld.common.ResourceNotFoundDetails.resource_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ai.inworld.common.ResourceType resource_type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_resource_type(static_cast<::ai::inworld::common::ResourceType>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ResourceNotFoundDetails::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.common.ResourceNotFoundDetails)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string resource_id = 1;
  if (this->resource_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_resource_id().data(), static_cast<int>(this->_internal_resource_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.common.ResourceNotFoundDetails.resource_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_resource_id(), target);
  }

  // .ai.inworld.common.ResourceType resource_type = 2;
  if (this->resource_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_resource_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.common.ResourceNotFoundDetails)
  return target;
}

size_t ResourceNotFoundDetails::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.common.ResourceNotFoundDetails)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string resource_id = 1;
  if (this->resource_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_resource_id());
  }

  // .ai.inworld.common.ResourceType resource_type = 2;
  if (this->resource_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_resource_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResourceNotFoundDetails::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ai.inworld.common.ResourceNotFoundDetails)
  GOOGLE_DCHECK_NE(&from, this);
  const ResourceNotFoundDetails* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ResourceNotFoundDetails>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ai.inworld.common.ResourceNotFoundDetails)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ai.inworld.common.ResourceNotFoundDetails)
    MergeFrom(*source);
  }
}

void ResourceNotFoundDetails::MergeFrom(const ResourceNotFoundDetails& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.common.ResourceNotFoundDetails)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.resource_id().size() > 0) {
    _internal_set_resource_id(from._internal_resource_id());
  }
  if (from.resource_type() != 0) {
    _internal_set_resource_type(from._internal_resource_type());
  }
}

void ResourceNotFoundDetails::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ai.inworld.common.ResourceNotFoundDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResourceNotFoundDetails::CopyFrom(const ResourceNotFoundDetails& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.common.ResourceNotFoundDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResourceNotFoundDetails::IsInitialized() const {
  return true;
}

void ResourceNotFoundDetails::InternalSwap(ResourceNotFoundDetails* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  resource_id_.Swap(&other->resource_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(resource_type_, other->resource_type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ResourceNotFoundDetails::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace common
}  // namespace inworld
}  // namespace ai
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::ai::inworld::common::InworldStatus* Arena::CreateMaybeMessage< ::ai::inworld::common::InworldStatus >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::common::InworldStatus >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::common::ResourceNotFoundDetails* Arena::CreateMaybeMessage< ::ai::inworld::common::ResourceNotFoundDetails >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::common::ResourceNotFoundDetails >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
