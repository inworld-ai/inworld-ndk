// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ai/inworld/studio/v1alpha/scenes.proto

#include "ProtoDisableWarning.h"

#include "ai/inworld/studio/v1alpha/scenes.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace ai {
namespace inworld {
namespace studio {
namespace v1alpha {
PROTOBUF_CONSTEXPR GetSceneRequest::GetSceneRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.view_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetSceneRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetSceneRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetSceneRequestDefaultTypeInternal() {}
  union {
    GetSceneRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetSceneRequestDefaultTypeInternal _GetSceneRequest_default_instance_;
PROTOBUF_CONSTEXPR ListScenesRequest::ListScenesRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.parent_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.page_token_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.filter_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.page_size_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ListScenesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListScenesRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListScenesRequestDefaultTypeInternal() {}
  union {
    ListScenesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListScenesRequestDefaultTypeInternal _ListScenesRequest_default_instance_;
PROTOBUF_CONSTEXPR CreateSceneRequest::CreateSceneRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.parent_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.scene_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CreateSceneRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateSceneRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateSceneRequestDefaultTypeInternal() {}
  union {
    CreateSceneRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateSceneRequestDefaultTypeInternal _CreateSceneRequest_default_instance_;
PROTOBUF_CONSTEXPR UpdateSceneRequest::UpdateSceneRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.scene_)*/nullptr
  , /*decltype(_impl_.update_mask_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UpdateSceneRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateSceneRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateSceneRequestDefaultTypeInternal() {}
  union {
    UpdateSceneRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateSceneRequestDefaultTypeInternal _UpdateSceneRequest_default_instance_;
PROTOBUF_CONSTEXPR DeleteSceneRequest::DeleteSceneRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeleteSceneRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteSceneRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteSceneRequestDefaultTypeInternal() {}
  union {
    DeleteSceneRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteSceneRequestDefaultTypeInternal _DeleteSceneRequest_default_instance_;
PROTOBUF_CONSTEXPR Scene_CharacterReference_Character_CharacterDescription::Scene_CharacterReference_Character_CharacterDescription(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.given_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.description_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Scene_CharacterReference_Character_CharacterDescriptionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Scene_CharacterReference_Character_CharacterDescriptionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Scene_CharacterReference_Character_CharacterDescriptionDefaultTypeInternal() {}
  union {
    Scene_CharacterReference_Character_CharacterDescription _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Scene_CharacterReference_Character_CharacterDescriptionDefaultTypeInternal _Scene_CharacterReference_Character_CharacterDescription_default_instance_;
PROTOBUF_CONSTEXPR Scene_CharacterReference_Character_CharacterAssets::Scene_CharacterReference_Character_CharacterAssets(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.rpm_model_uri_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.rpm_image_uri_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.rpm_image_uri_portrait_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.rpm_image_uri_posture_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Scene_CharacterReference_Character_CharacterAssetsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Scene_CharacterReference_Character_CharacterAssetsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Scene_CharacterReference_Character_CharacterAssetsDefaultTypeInternal() {}
  union {
    Scene_CharacterReference_Character_CharacterAssets _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Scene_CharacterReference_Character_CharacterAssetsDefaultTypeInternal _Scene_CharacterReference_Character_CharacterAssets_default_instance_;
PROTOBUF_CONSTEXPR Scene_CharacterReference_Character::Scene_CharacterReference_Character(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.default_character_description_)*/nullptr
  , /*decltype(_impl_.default_character_assets_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Scene_CharacterReference_CharacterDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Scene_CharacterReference_CharacterDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Scene_CharacterReference_CharacterDefaultTypeInternal() {}
  union {
    Scene_CharacterReference_Character _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Scene_CharacterReference_CharacterDefaultTypeInternal _Scene_CharacterReference_Character_default_instance_;
PROTOBUF_CONSTEXPR Scene_CharacterReference::Scene_CharacterReference(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.character_overloads_)*/{}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.character_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Scene_CharacterReferenceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Scene_CharacterReferenceDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Scene_CharacterReferenceDefaultTypeInternal() {}
  union {
    Scene_CharacterReference _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Scene_CharacterReferenceDefaultTypeInternal _Scene_CharacterReference_default_instance_;
PROTOBUF_CONSTEXPR Scene_SceneTrigger::Scene_SceneTrigger(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.trigger_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.description_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Scene_SceneTriggerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Scene_SceneTriggerDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Scene_SceneTriggerDefaultTypeInternal() {}
  union {
    Scene_SceneTrigger _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Scene_SceneTriggerDefaultTypeInternal _Scene_SceneTrigger_default_instance_;
PROTOBUF_CONSTEXPR Scene_Meta::Scene_Meta(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.total_triggers_)*/0
  , /*decltype(_impl_.total_characters_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Scene_MetaDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Scene_MetaDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Scene_MetaDefaultTypeInternal() {}
  union {
    Scene_Meta _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Scene_MetaDefaultTypeInternal _Scene_Meta_default_instance_;
PROTOBUF_CONSTEXPR Scene::Scene(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.scene_triggers_)*/{}
  , /*decltype(_impl_.character_references_)*/{}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.description_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.display_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.meta_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SceneDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SceneDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SceneDefaultTypeInternal() {}
  union {
    Scene _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SceneDefaultTypeInternal _Scene_default_instance_;
PROTOBUF_CONSTEXPR ListScenesResponse::ListScenesResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.scenes_)*/{}
  , /*decltype(_impl_.next_page_token_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ListScenesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListScenesResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListScenesResponseDefaultTypeInternal() {}
  union {
    ListScenesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListScenesResponseDefaultTypeInternal _ListScenesResponse_default_instance_;
PROTOBUF_CONSTEXPR DeploySceneRequest::DeploySceneRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeploySceneRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeploySceneRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeploySceneRequestDefaultTypeInternal() {}
  union {
    DeploySceneRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeploySceneRequestDefaultTypeInternal _DeploySceneRequest_default_instance_;
}  // namespace v1alpha
}  // namespace studio
}  // namespace inworld
}  // namespace ai
static ::_pb::Metadata file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fscenes_2eproto[14];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_ai_2finworld_2fstudio_2fv1alpha_2fscenes_2eproto[1];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_ai_2finworld_2fstudio_2fv1alpha_2fscenes_2eproto = nullptr;

const uint32_t TableStruct_ai_2finworld_2fstudio_2fv1alpha_2fscenes_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::GetSceneRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::GetSceneRequest, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::GetSceneRequest, _impl_.view_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ListScenesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ListScenesRequest, _impl_.parent_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ListScenesRequest, _impl_.page_size_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ListScenesRequest, _impl_.page_token_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ListScenesRequest, _impl_.filter_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CreateSceneRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CreateSceneRequest, _impl_.parent_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CreateSceneRequest, _impl_.scene_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::UpdateSceneRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::UpdateSceneRequest, _impl_.scene_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::UpdateSceneRequest, _impl_.update_mask_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::DeleteSceneRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::DeleteSceneRequest, _impl_.name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Scene_CharacterReference_Character_CharacterDescription, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Scene_CharacterReference_Character_CharacterDescription, _impl_.given_name_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Scene_CharacterReference_Character_CharacterDescription, _impl_.description_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Scene_CharacterReference_Character_CharacterAssets, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Scene_CharacterReference_Character_CharacterAssets, _impl_.rpm_model_uri_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Scene_CharacterReference_Character_CharacterAssets, _impl_.rpm_image_uri_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Scene_CharacterReference_Character_CharacterAssets, _impl_.rpm_image_uri_portrait_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Scene_CharacterReference_Character_CharacterAssets, _impl_.rpm_image_uri_posture_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Scene_CharacterReference_Character, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Scene_CharacterReference_Character, _impl_.default_character_description_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Scene_CharacterReference_Character, _impl_.default_character_assets_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Scene_CharacterReference, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Scene_CharacterReference, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Scene_CharacterReference, _impl_.character_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Scene_CharacterReference, _impl_.character_overloads_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Scene_SceneTrigger, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Scene_SceneTrigger, _impl_.trigger_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Scene_SceneTrigger, _impl_.description_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Scene_Meta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Scene_Meta, _impl_.total_triggers_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Scene_Meta, _impl_.total_characters_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Scene, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Scene, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Scene, _impl_.description_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Scene, _impl_.scene_triggers_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Scene, _impl_.character_references_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Scene, _impl_.display_name_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Scene, _impl_.meta_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ListScenesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ListScenesResponse, _impl_.scenes_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ListScenesResponse, _impl_.next_page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::DeploySceneRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::DeploySceneRequest, _impl_.name_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::ai::inworld::studio::v1alpha::GetSceneRequest)},
  { 8, -1, -1, sizeof(::ai::inworld::studio::v1alpha::ListScenesRequest)},
  { 18, -1, -1, sizeof(::ai::inworld::studio::v1alpha::CreateSceneRequest)},
  { 26, -1, -1, sizeof(::ai::inworld::studio::v1alpha::UpdateSceneRequest)},
  { 34, -1, -1, sizeof(::ai::inworld::studio::v1alpha::DeleteSceneRequest)},
  { 41, -1, -1, sizeof(::ai::inworld::studio::v1alpha::Scene_CharacterReference_Character_CharacterDescription)},
  { 49, -1, -1, sizeof(::ai::inworld::studio::v1alpha::Scene_CharacterReference_Character_CharacterAssets)},
  { 59, -1, -1, sizeof(::ai::inworld::studio::v1alpha::Scene_CharacterReference_Character)},
  { 67, -1, -1, sizeof(::ai::inworld::studio::v1alpha::Scene_CharacterReference)},
  { 76, -1, -1, sizeof(::ai::inworld::studio::v1alpha::Scene_SceneTrigger)},
  { 84, -1, -1, sizeof(::ai::inworld::studio::v1alpha::Scene_Meta)},
  { 92, -1, -1, sizeof(::ai::inworld::studio::v1alpha::Scene)},
  { 104, -1, -1, sizeof(::ai::inworld::studio::v1alpha::ListScenesResponse)},
  { 112, -1, -1, sizeof(::ai::inworld::studio::v1alpha::DeploySceneRequest)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::ai::inworld::studio::v1alpha::_GetSceneRequest_default_instance_._instance,
  &::ai::inworld::studio::v1alpha::_ListScenesRequest_default_instance_._instance,
  &::ai::inworld::studio::v1alpha::_CreateSceneRequest_default_instance_._instance,
  &::ai::inworld::studio::v1alpha::_UpdateSceneRequest_default_instance_._instance,
  &::ai::inworld::studio::v1alpha::_DeleteSceneRequest_default_instance_._instance,
  &::ai::inworld::studio::v1alpha::_Scene_CharacterReference_Character_CharacterDescription_default_instance_._instance,
  &::ai::inworld::studio::v1alpha::_Scene_CharacterReference_Character_CharacterAssets_default_instance_._instance,
  &::ai::inworld::studio::v1alpha::_Scene_CharacterReference_Character_default_instance_._instance,
  &::ai::inworld::studio::v1alpha::_Scene_CharacterReference_default_instance_._instance,
  &::ai::inworld::studio::v1alpha::_Scene_SceneTrigger_default_instance_._instance,
  &::ai::inworld::studio::v1alpha::_Scene_Meta_default_instance_._instance,
  &::ai::inworld::studio::v1alpha::_Scene_default_instance_._instance,
  &::ai::inworld::studio::v1alpha::_ListScenesResponse_default_instance_._instance,
  &::ai::inworld::studio::v1alpha::_DeploySceneRequest_default_instance_._instance,
};

const char descriptor_table_protodef_ai_2finworld_2fstudio_2fv1alpha_2fscenes_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n&ai/inworld/studio/v1alpha/scenes.proto"
  "\022\031ai.inworld.studio.v1alpha\032\034google/api/"
  "annotations.proto\032\027google/api/client.pro"
  "to\032\037google/api/field_behavior.proto\032\031goo"
  "gle/api/resource.proto\032\033google/protobuf/"
  "empty.proto\032 google/protobuf/field_mask."
  "proto\032\roptions.proto\"u\n\017GetSceneRequest\022"
  "*\n\004name\030\001 \001(\tB\034\340A\002\372A\026\n\024api.inworld.ai/Sc"
  "ene\0226\n\004view\030\002 \001(\0162(.ai.inworld.studio.v1"
  "alpha.SceneItemView\"\222\001\n\021ListScenesReques"
  "t\022F\n\006parent\030\001 \001(\tB6\340A\002\372A0\n\030api.inworld.a"
  "i/Workspace\022\024api.inworld.ai/Scene\022\021\n\tpag"
  "e_size\030\002 \001(\005\022\022\n\npage_token\030\003 \001(\t\022\016\n\006filt"
  "er\030\004 \001(\t\"\222\001\n\022CreateSceneRequest\022F\n\006paren"
  "t\030\001 \001(\tB6\340A\002\372A0\n\030api.inworld.ai/Workspac"
  "e\022\024api.inworld.ai/Scene\0224\n\005scene\030\002 \001(\0132 "
  ".ai.inworld.studio.v1alpha.SceneB\003\340A\002\"\200\001"
  "\n\022UpdateSceneRequest\0224\n\005scene\030\001 \001(\0132 .ai"
  ".inworld.studio.v1alpha.SceneB\003\340A\002\0224\n\013up"
  "date_mask\030\002 \001(\0132\032.google.protobuf.FieldM"
  "askB\003\340A\002\"@\n\022DeleteSceneRequest\022*\n\004name\030\001"
  " \001(\tB\034\340A\002\372A\026\n\024api.inworld.ai/Scene\"\201\n\n\005S"
  "cene\022\021\n\004name\030\001 \001(\tB\003\340A\002\022\023\n\013description\030\002"
  " \001(\t\022E\n\016scene_triggers\030\003 \003(\0132-.ai.inworl"
  "d.studio.v1alpha.Scene.SceneTrigger\022Q\n\024c"
  "haracter_references\030\004 \003(\01323.ai.inworld.s"
  "tudio.v1alpha.Scene.CharacterReference\022-"
  "\n\014display_name\030\005 \001(\tB\027\242\317\"\023\n\021\032\017display na"
  "me #1\0228\n\004meta\030\006 \001(\0132%.ai.inworld.studio."
  "v1alpha.Scene.MetaB\003\340A\003\032\375\005\n\022CharacterRef"
  "erence\022\021\n\004name\030\001 \001(\tB\003\340A\001\0223\n\tcharacter\030\002"
  " \001(\tB \340A\002\372A\032\n\030api.inworld.ai/Character\022_"
  "\n\023character_overloads\030\004 \003(\0132=.ai.inworld"
  ".studio.v1alpha.Scene.CharacterReference"
  ".CharacterB\003\340A\001\032\317\003\n\tCharacter\022y\n\035default"
  "_character_description\030\001 \001(\0132R.ai.inworl"
  "d.studio.v1alpha.Scene.CharacterReferenc"
  "e.Character.CharacterDescription\022o\n\030defa"
  "ult_character_assets\030\002 \001(\0132M.ai.inworld."
  "studio.v1alpha.Scene.CharacterReference."
  "Character.CharacterAssets\032\?\n\024CharacterDe"
  "scription\022\022\n\ngiven_name\030\001 \001(\t\022\023\n\013descrip"
  "tion\030\002 \001(\t\032\224\001\n\017CharacterAssets\022\032\n\rrpm_mo"
  "del_uri\030\001 \001(\tB\003\340A\003\022\034\n\rrpm_image_uri\030\002 \001("
  "\tB\005\030\001\340A\003\022#\n\026rpm_image_uri_portrait\030\003 \001(\t"
  "B\003\340A\003\022\"\n\025rpm_image_uri_posture\030\004 \001(\tB\003\340A"
  "\003:l\352Ai\n!api.inworld.ai/CharacterReferenc"
  "e\022Dworkspaces/{workspace}/characters/{ch"
  "aracter}/references/{reference}\032Q\n\014Scene"
  "Trigger\022,\n\007trigger\030\001 \001(\tB\033\372A\030\n\026api.inwor"
  "ld.ai/Trigger\022\023\n\013description\030\002 \001(\t\0328\n\004Me"
  "ta\022\026\n\016total_triggers\030\001 \001(\005\022\030\n\020total_char"
  "acters\030\002 \001(\005:@\352A=\n\024api.inworld.ai/Scene\022"
  "%workspaces/{workspace}/scenes/{scene}\"_"
  "\n\022ListScenesResponse\0220\n\006scenes\030\001 \003(\0132 .a"
  "i.inworld.studio.v1alpha.Scene\022\027\n\017next_p"
  "age_token\030\002 \001(\t\"@\n\022DeploySceneRequest\022*\n"
  "\004name\030\001 \001(\tB\034\340A\002\372A\026\n\024api.inworld.ai/Scen"
  "e*l\n\rSceneItemView\022\037\n\033SCENE_ITEM_VIEW_UN"
  "SPECIFIED\020\000\022\033\n\027SCENE_ITEM_VIEW_DEFAULT\020\001"
  "\022\035\n\031SCENE_ITEM_VIEW_WITH_META\020\0022\261\007\n\006Scen"
  "es\022\215\001\n\013DeployScene\022-.ai.inworld.studio.v"
  "1alpha.DeploySceneRequest\032\026.google.proto"
  "buf.Empty\"7\202\323\344\223\0021\",/v1alpha/{name=worksp"
  "aces/*/scenes/*}:deploy:\001*\022\216\001\n\010GetScene\022"
  "*.ai.inworld.studio.v1alpha.GetSceneRequ"
  "est\032 .ai.inworld.studio.v1alpha.Scene\"4\202"
  "\323\344\223\002\'\022%/v1alpha/{name=workspaces/*/scene"
  "s/*}\332A\004name\022\241\001\n\nListScenes\022,.ai.inworld."
  "studio.v1alpha.ListScenesRequest\032-.ai.in"
  "world.studio.v1alpha.ListScenesResponse\""
  "6\202\323\344\223\002\'\022%/v1alpha/{parent=workspaces/*}/"
  "scenes\332A\006parent\022\256\001\n\013UpdateScene\022-.ai.inw"
  "orld.studio.v1alpha.UpdateSceneRequest\032 "
  ".ai.inworld.studio.v1alpha.Scene\"N\202\323\344\223\0024"
  "2+/v1alpha/{scene.name=workspaces/*/scen"
  "es/*}:\005scene\332A\021scene,update_mask\022\243\001\n\013Cre"
  "ateScene\022-.ai.inworld.studio.v1alpha.Cre"
  "ateSceneRequest\032 .ai.inworld.studio.v1al"
  "pha.Scene\"C\202\323\344\223\002.\"%/v1alpha/{parent=work"
  "spaces/*}/scenes:\005scene\332A\014parent,scene\022\212"
  "\001\n\013DeleteScene\022-.ai.inworld.studio.v1alp"
  "ha.DeleteSceneRequest\032\026.google.protobuf."
  "Empty\"4\202\323\344\223\002\'*%/v1alpha/{name=workspaces"
  "/*/scenes/*}\332A\004nameB\225\001\n\031ai.inworld.studi"
  "o.v1alphaB\013ScenesProtoP\001ZMgithub.com/inw"
  "orld-ai/inworld/serving/grpc-gateway/bui"
  "ld/proto/studio/v1alpha\252\002\031Ai.Inworld.Stu"
  "dio.V1Alphab\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fscenes_2eproto_deps[7] = {
  &::descriptor_table_google_2fapi_2fannotations_2eproto,
  &::descriptor_table_google_2fapi_2fclient_2eproto,
  &::descriptor_table_google_2fapi_2ffield_5fbehavior_2eproto,
  &::descriptor_table_google_2fapi_2fresource_2eproto,
  &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
  &::descriptor_table_google_2fprotobuf_2ffield_5fmask_2eproto,
  &::descriptor_table_options_2eproto,
};
static ::_pbi::once_flag descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fscenes_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fscenes_2eproto = {
    false, false, 3539, descriptor_table_protodef_ai_2finworld_2fstudio_2fv1alpha_2fscenes_2eproto,
    "ai/inworld/studio/v1alpha/scenes.proto",
    &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fscenes_2eproto_once, descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fscenes_2eproto_deps, 7, 14,
    schemas, file_default_instances, TableStruct_ai_2finworld_2fstudio_2fv1alpha_2fscenes_2eproto::offsets,
    file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fscenes_2eproto, file_level_enum_descriptors_ai_2finworld_2fstudio_2fv1alpha_2fscenes_2eproto,
    file_level_service_descriptors_ai_2finworld_2fstudio_2fv1alpha_2fscenes_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fscenes_2eproto_getter() {
  return &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fscenes_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_ai_2finworld_2fstudio_2fv1alpha_2fscenes_2eproto(&descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fscenes_2eproto);
namespace ai {
namespace inworld {
namespace studio {
namespace v1alpha {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SceneItemView_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fscenes_2eproto);
  return file_level_enum_descriptors_ai_2finworld_2fstudio_2fv1alpha_2fscenes_2eproto[0];
}
bool SceneItemView_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class GetSceneRequest::_Internal {
 public:
};

GetSceneRequest::GetSceneRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.GetSceneRequest)
}
GetSceneRequest::GetSceneRequest(const GetSceneRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetSceneRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.view_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.view_ = from._impl_.view_;
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.GetSceneRequest)
}

inline void GetSceneRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.view_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetSceneRequest::~GetSceneRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.GetSceneRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetSceneRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void GetSceneRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetSceneRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.GetSceneRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.view_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSceneRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.GetSceneRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // .ai.inworld.studio.v1alpha.SceneItemView view = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_view(static_cast<::ai::inworld::studio::v1alpha::SceneItemView>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetSceneRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.GetSceneRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.GetSceneRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // .ai.inworld.studio.v1alpha.SceneItemView view = 2;
  if (this->_internal_view() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_view(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.GetSceneRequest)
  return target;
}

size_t GetSceneRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.GetSceneRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .ai.inworld.studio.v1alpha.SceneItemView view = 2;
  if (this->_internal_view() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_view());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetSceneRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetSceneRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetSceneRequest::GetClassData() const { return &_class_data_; }


void GetSceneRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetSceneRequest*>(&to_msg);
  auto& from = static_cast<const GetSceneRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.GetSceneRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_view() != 0) {
    _this->_internal_set_view(from._internal_view());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetSceneRequest::CopyFrom(const GetSceneRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.GetSceneRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSceneRequest::IsInitialized() const {
  return true;
}

void GetSceneRequest::InternalSwap(GetSceneRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  swap(_impl_.view_, other->_impl_.view_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSceneRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fscenes_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fscenes_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fscenes_2eproto[0]);
}

// ===================================================================

class ListScenesRequest::_Internal {
 public:
};

ListScenesRequest::ListScenesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.ListScenesRequest)
}
ListScenesRequest::ListScenesRequest(const ListScenesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ListScenesRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.parent_){}
    , decltype(_impl_.page_token_){}
    , decltype(_impl_.filter_){}
    , decltype(_impl_.page_size_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.parent_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.parent_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_parent().empty()) {
    _this->_impl_.parent_.Set(from._internal_parent(), 
      _this->GetArenaForAllocation());
  }
  _impl_.page_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.page_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_page_token().empty()) {
    _this->_impl_.page_token_.Set(from._internal_page_token(), 
      _this->GetArenaForAllocation());
  }
  _impl_.filter_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.filter_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_filter().empty()) {
    _this->_impl_.filter_.Set(from._internal_filter(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.page_size_ = from._impl_.page_size_;
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.ListScenesRequest)
}

inline void ListScenesRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.parent_){}
    , decltype(_impl_.page_token_){}
    , decltype(_impl_.filter_){}
    , decltype(_impl_.page_size_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.parent_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.parent_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.page_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.page_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.filter_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.filter_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ListScenesRequest::~ListScenesRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.ListScenesRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListScenesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.parent_.Destroy();
  _impl_.page_token_.Destroy();
  _impl_.filter_.Destroy();
}

void ListScenesRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ListScenesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.ListScenesRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.parent_.ClearToEmpty();
  _impl_.page_token_.ClearToEmpty();
  _impl_.filter_.ClearToEmpty();
  _impl_.page_size_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListScenesRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_parent();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.ListScenesRequest.parent"));
        } else
          goto handle_unusual;
        continue;
      // int32 page_size = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.page_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string page_token = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_page_token();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.ListScenesRequest.page_token"));
        } else
          goto handle_unusual;
        continue;
      // string filter = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_filter();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.ListScenesRequest.filter"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListScenesRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.ListScenesRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent().data(), static_cast<int>(this->_internal_parent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.ListScenesRequest.parent");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_parent(), target);
  }

  // int32 page_size = 2;
  if (this->_internal_page_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_page_size(), target);
  }

  // string page_token = 3;
  if (!this->_internal_page_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_page_token().data(), static_cast<int>(this->_internal_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.ListScenesRequest.page_token");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_page_token(), target);
  }

  // string filter = 4;
  if (!this->_internal_filter().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_filter().data(), static_cast<int>(this->_internal_filter().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.ListScenesRequest.filter");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_filter(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.ListScenesRequest)
  return target;
}

size_t ListScenesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.ListScenesRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent());
  }

  // string page_token = 3;
  if (!this->_internal_page_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_page_token());
  }

  // string filter = 4;
  if (!this->_internal_filter().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_filter());
  }

  // int32 page_size = 2;
  if (this->_internal_page_size() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_page_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListScenesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ListScenesRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListScenesRequest::GetClassData() const { return &_class_data_; }


void ListScenesRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ListScenesRequest*>(&to_msg);
  auto& from = static_cast<const ListScenesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.ListScenesRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_parent().empty()) {
    _this->_internal_set_parent(from._internal_parent());
  }
  if (!from._internal_page_token().empty()) {
    _this->_internal_set_page_token(from._internal_page_token());
  }
  if (!from._internal_filter().empty()) {
    _this->_internal_set_filter(from._internal_filter());
  }
  if (from._internal_page_size() != 0) {
    _this->_internal_set_page_size(from._internal_page_size());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListScenesRequest::CopyFrom(const ListScenesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.ListScenesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListScenesRequest::IsInitialized() const {
  return true;
}

void ListScenesRequest::InternalSwap(ListScenesRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.parent_, lhs_arena,
      &other->_impl_.parent_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.page_token_, lhs_arena,
      &other->_impl_.page_token_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.filter_, lhs_arena,
      &other->_impl_.filter_, rhs_arena
  );
  swap(_impl_.page_size_, other->_impl_.page_size_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListScenesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fscenes_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fscenes_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fscenes_2eproto[1]);
}

// ===================================================================

class CreateSceneRequest::_Internal {
 public:
  static const ::ai::inworld::studio::v1alpha::Scene& scene(const CreateSceneRequest* msg);
};

const ::ai::inworld::studio::v1alpha::Scene&
CreateSceneRequest::_Internal::scene(const CreateSceneRequest* msg) {
  return *msg->_impl_.scene_;
}
CreateSceneRequest::CreateSceneRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.CreateSceneRequest)
}
CreateSceneRequest::CreateSceneRequest(const CreateSceneRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CreateSceneRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.parent_){}
    , decltype(_impl_.scene_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.parent_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.parent_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_parent().empty()) {
    _this->_impl_.parent_.Set(from._internal_parent(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_scene()) {
    _this->_impl_.scene_ = new ::ai::inworld::studio::v1alpha::Scene(*from._impl_.scene_);
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.CreateSceneRequest)
}

inline void CreateSceneRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.parent_){}
    , decltype(_impl_.scene_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.parent_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.parent_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CreateSceneRequest::~CreateSceneRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.CreateSceneRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateSceneRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.parent_.Destroy();
  if (this != internal_default_instance()) delete _impl_.scene_;
}

void CreateSceneRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CreateSceneRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.CreateSceneRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.parent_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.scene_ != nullptr) {
    delete _impl_.scene_;
  }
  _impl_.scene_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateSceneRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_parent();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.CreateSceneRequest.parent"));
        } else
          goto handle_unusual;
        continue;
      // .ai.inworld.studio.v1alpha.Scene scene = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_scene(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateSceneRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.CreateSceneRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent().data(), static_cast<int>(this->_internal_parent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.CreateSceneRequest.parent");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_parent(), target);
  }

  // .ai.inworld.studio.v1alpha.Scene scene = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_scene()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::scene(this),
        _Internal::scene(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.CreateSceneRequest)
  return target;
}

size_t CreateSceneRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.CreateSceneRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent());
  }

  // .ai.inworld.studio.v1alpha.Scene scene = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_scene()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.scene_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateSceneRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CreateSceneRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateSceneRequest::GetClassData() const { return &_class_data_; }


void CreateSceneRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CreateSceneRequest*>(&to_msg);
  auto& from = static_cast<const CreateSceneRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.CreateSceneRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_parent().empty()) {
    _this->_internal_set_parent(from._internal_parent());
  }
  if (from._internal_has_scene()) {
    _this->_internal_mutable_scene()->::ai::inworld::studio::v1alpha::Scene::MergeFrom(
        from._internal_scene());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateSceneRequest::CopyFrom(const CreateSceneRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.CreateSceneRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateSceneRequest::IsInitialized() const {
  return true;
}

void CreateSceneRequest::InternalSwap(CreateSceneRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.parent_, lhs_arena,
      &other->_impl_.parent_, rhs_arena
  );
  swap(_impl_.scene_, other->_impl_.scene_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateSceneRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fscenes_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fscenes_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fscenes_2eproto[2]);
}

// ===================================================================

class UpdateSceneRequest::_Internal {
 public:
  static const ::ai::inworld::studio::v1alpha::Scene& scene(const UpdateSceneRequest* msg);
  static const ::PROTOBUF_NAMESPACE_ID::FieldMask& update_mask(const UpdateSceneRequest* msg);
};

const ::ai::inworld::studio::v1alpha::Scene&
UpdateSceneRequest::_Internal::scene(const UpdateSceneRequest* msg) {
  return *msg->_impl_.scene_;
}
const ::PROTOBUF_NAMESPACE_ID::FieldMask&
UpdateSceneRequest::_Internal::update_mask(const UpdateSceneRequest* msg) {
  return *msg->_impl_.update_mask_;
}
void UpdateSceneRequest::clear_update_mask() {
  if (GetArenaForAllocation() == nullptr && _impl_.update_mask_ != nullptr) {
    delete _impl_.update_mask_;
  }
  _impl_.update_mask_ = nullptr;
}
UpdateSceneRequest::UpdateSceneRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.UpdateSceneRequest)
}
UpdateSceneRequest::UpdateSceneRequest(const UpdateSceneRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UpdateSceneRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.scene_){nullptr}
    , decltype(_impl_.update_mask_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_scene()) {
    _this->_impl_.scene_ = new ::ai::inworld::studio::v1alpha::Scene(*from._impl_.scene_);
  }
  if (from._internal_has_update_mask()) {
    _this->_impl_.update_mask_ = new ::PROTOBUF_NAMESPACE_ID::FieldMask(*from._impl_.update_mask_);
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.UpdateSceneRequest)
}

inline void UpdateSceneRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.scene_){nullptr}
    , decltype(_impl_.update_mask_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UpdateSceneRequest::~UpdateSceneRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.UpdateSceneRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateSceneRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.scene_;
  if (this != internal_default_instance()) delete _impl_.update_mask_;
}

void UpdateSceneRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UpdateSceneRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.UpdateSceneRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.scene_ != nullptr) {
    delete _impl_.scene_;
  }
  _impl_.scene_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.update_mask_ != nullptr) {
    delete _impl_.update_mask_;
  }
  _impl_.update_mask_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateSceneRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .ai.inworld.studio.v1alpha.Scene scene = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_scene(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_update_mask(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateSceneRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.UpdateSceneRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .ai.inworld.studio.v1alpha.Scene scene = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_scene()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::scene(this),
        _Internal::scene(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_update_mask()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::update_mask(this),
        _Internal::update_mask(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.UpdateSceneRequest)
  return target;
}

size_t UpdateSceneRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.UpdateSceneRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ai.inworld.studio.v1alpha.Scene scene = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_scene()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.scene_);
  }

  // .google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_update_mask()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.update_mask_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateSceneRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UpdateSceneRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateSceneRequest::GetClassData() const { return &_class_data_; }


void UpdateSceneRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UpdateSceneRequest*>(&to_msg);
  auto& from = static_cast<const UpdateSceneRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.UpdateSceneRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_scene()) {
    _this->_internal_mutable_scene()->::ai::inworld::studio::v1alpha::Scene::MergeFrom(
        from._internal_scene());
  }
  if (from._internal_has_update_mask()) {
    _this->_internal_mutable_update_mask()->::PROTOBUF_NAMESPACE_ID::FieldMask::MergeFrom(
        from._internal_update_mask());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateSceneRequest::CopyFrom(const UpdateSceneRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.UpdateSceneRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateSceneRequest::IsInitialized() const {
  return true;
}

void UpdateSceneRequest::InternalSwap(UpdateSceneRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateSceneRequest, _impl_.update_mask_)
      + sizeof(UpdateSceneRequest::_impl_.update_mask_)
      - PROTOBUF_FIELD_OFFSET(UpdateSceneRequest, _impl_.scene_)>(
          reinterpret_cast<char*>(&_impl_.scene_),
          reinterpret_cast<char*>(&other->_impl_.scene_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateSceneRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fscenes_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fscenes_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fscenes_2eproto[3]);
}

// ===================================================================

class DeleteSceneRequest::_Internal {
 public:
};

DeleteSceneRequest::DeleteSceneRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.DeleteSceneRequest)
}
DeleteSceneRequest::DeleteSceneRequest(const DeleteSceneRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeleteSceneRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.DeleteSceneRequest)
}

inline void DeleteSceneRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteSceneRequest::~DeleteSceneRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.DeleteSceneRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteSceneRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void DeleteSceneRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeleteSceneRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.DeleteSceneRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteSceneRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.DeleteSceneRequest.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteSceneRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.DeleteSceneRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.DeleteSceneRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.DeleteSceneRequest)
  return target;
}

size_t DeleteSceneRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.DeleteSceneRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteSceneRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeleteSceneRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteSceneRequest::GetClassData() const { return &_class_data_; }


void DeleteSceneRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeleteSceneRequest*>(&to_msg);
  auto& from = static_cast<const DeleteSceneRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.DeleteSceneRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteSceneRequest::CopyFrom(const DeleteSceneRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.DeleteSceneRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteSceneRequest::IsInitialized() const {
  return true;
}

void DeleteSceneRequest::InternalSwap(DeleteSceneRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteSceneRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fscenes_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fscenes_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fscenes_2eproto[4]);
}

// ===================================================================

class Scene_CharacterReference_Character_CharacterDescription::_Internal {
 public:
};

Scene_CharacterReference_Character_CharacterDescription::Scene_CharacterReference_Character_CharacterDescription(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.Scene.CharacterReference.Character.CharacterDescription)
}
Scene_CharacterReference_Character_CharacterDescription::Scene_CharacterReference_Character_CharacterDescription(const Scene_CharacterReference_Character_CharacterDescription& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Scene_CharacterReference_Character_CharacterDescription* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.given_name_){}
    , decltype(_impl_.description_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.given_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.given_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_given_name().empty()) {
    _this->_impl_.given_name_.Set(from._internal_given_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    _this->_impl_.description_.Set(from._internal_description(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.Scene.CharacterReference.Character.CharacterDescription)
}

inline void Scene_CharacterReference_Character_CharacterDescription::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.given_name_){}
    , decltype(_impl_.description_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.given_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.given_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Scene_CharacterReference_Character_CharacterDescription::~Scene_CharacterReference_Character_CharacterDescription() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.Scene.CharacterReference.Character.CharacterDescription)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Scene_CharacterReference_Character_CharacterDescription::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.given_name_.Destroy();
  _impl_.description_.Destroy();
}

void Scene_CharacterReference_Character_CharacterDescription::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Scene_CharacterReference_Character_CharacterDescription::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.Scene.CharacterReference.Character.CharacterDescription)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.given_name_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Scene_CharacterReference_Character_CharacterDescription::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string given_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_given_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Scene.CharacterReference.Character.CharacterDescription.given_name"));
        } else
          goto handle_unusual;
        continue;
      // string description = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_description();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Scene.CharacterReference.Character.CharacterDescription.description"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Scene_CharacterReference_Character_CharacterDescription::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.Scene.CharacterReference.Character.CharacterDescription)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string given_name = 1;
  if (!this->_internal_given_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_given_name().data(), static_cast<int>(this->_internal_given_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Scene.CharacterReference.Character.CharacterDescription.given_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_given_name(), target);
  }

  // string description = 2;
  if (!this->_internal_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Scene.CharacterReference.Character.CharacterDescription.description");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_description(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.Scene.CharacterReference.Character.CharacterDescription)
  return target;
}

size_t Scene_CharacterReference_Character_CharacterDescription::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.Scene.CharacterReference.Character.CharacterDescription)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string given_name = 1;
  if (!this->_internal_given_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_given_name());
  }

  // string description = 2;
  if (!this->_internal_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Scene_CharacterReference_Character_CharacterDescription::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Scene_CharacterReference_Character_CharacterDescription::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Scene_CharacterReference_Character_CharacterDescription::GetClassData() const { return &_class_data_; }


void Scene_CharacterReference_Character_CharacterDescription::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Scene_CharacterReference_Character_CharacterDescription*>(&to_msg);
  auto& from = static_cast<const Scene_CharacterReference_Character_CharacterDescription&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.Scene.CharacterReference.Character.CharacterDescription)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_given_name().empty()) {
    _this->_internal_set_given_name(from._internal_given_name());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Scene_CharacterReference_Character_CharacterDescription::CopyFrom(const Scene_CharacterReference_Character_CharacterDescription& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.Scene.CharacterReference.Character.CharacterDescription)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Scene_CharacterReference_Character_CharacterDescription::IsInitialized() const {
  return true;
}

void Scene_CharacterReference_Character_CharacterDescription::InternalSwap(Scene_CharacterReference_Character_CharacterDescription* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.given_name_, lhs_arena,
      &other->_impl_.given_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.description_, lhs_arena,
      &other->_impl_.description_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata Scene_CharacterReference_Character_CharacterDescription::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fscenes_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fscenes_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fscenes_2eproto[5]);
}

// ===================================================================

class Scene_CharacterReference_Character_CharacterAssets::_Internal {
 public:
};

Scene_CharacterReference_Character_CharacterAssets::Scene_CharacterReference_Character_CharacterAssets(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.Scene.CharacterReference.Character.CharacterAssets)
}
Scene_CharacterReference_Character_CharacterAssets::Scene_CharacterReference_Character_CharacterAssets(const Scene_CharacterReference_Character_CharacterAssets& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Scene_CharacterReference_Character_CharacterAssets* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.rpm_model_uri_){}
    , decltype(_impl_.rpm_image_uri_){}
    , decltype(_impl_.rpm_image_uri_portrait_){}
    , decltype(_impl_.rpm_image_uri_posture_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.rpm_model_uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.rpm_model_uri_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_rpm_model_uri().empty()) {
    _this->_impl_.rpm_model_uri_.Set(from._internal_rpm_model_uri(), 
      _this->GetArenaForAllocation());
  }
  _impl_.rpm_image_uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.rpm_image_uri_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_rpm_image_uri().empty()) {
    _this->_impl_.rpm_image_uri_.Set(from._internal_rpm_image_uri(), 
      _this->GetArenaForAllocation());
  }
  _impl_.rpm_image_uri_portrait_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.rpm_image_uri_portrait_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_rpm_image_uri_portrait().empty()) {
    _this->_impl_.rpm_image_uri_portrait_.Set(from._internal_rpm_image_uri_portrait(), 
      _this->GetArenaForAllocation());
  }
  _impl_.rpm_image_uri_posture_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.rpm_image_uri_posture_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_rpm_image_uri_posture().empty()) {
    _this->_impl_.rpm_image_uri_posture_.Set(from._internal_rpm_image_uri_posture(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.Scene.CharacterReference.Character.CharacterAssets)
}

inline void Scene_CharacterReference_Character_CharacterAssets::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.rpm_model_uri_){}
    , decltype(_impl_.rpm_image_uri_){}
    , decltype(_impl_.rpm_image_uri_portrait_){}
    , decltype(_impl_.rpm_image_uri_posture_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.rpm_model_uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.rpm_model_uri_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.rpm_image_uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.rpm_image_uri_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.rpm_image_uri_portrait_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.rpm_image_uri_portrait_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.rpm_image_uri_posture_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.rpm_image_uri_posture_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Scene_CharacterReference_Character_CharacterAssets::~Scene_CharacterReference_Character_CharacterAssets() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.Scene.CharacterReference.Character.CharacterAssets)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Scene_CharacterReference_Character_CharacterAssets::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.rpm_model_uri_.Destroy();
  _impl_.rpm_image_uri_.Destroy();
  _impl_.rpm_image_uri_portrait_.Destroy();
  _impl_.rpm_image_uri_posture_.Destroy();
}

void Scene_CharacterReference_Character_CharacterAssets::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Scene_CharacterReference_Character_CharacterAssets::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.Scene.CharacterReference.Character.CharacterAssets)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rpm_model_uri_.ClearToEmpty();
  _impl_.rpm_image_uri_.ClearToEmpty();
  _impl_.rpm_image_uri_portrait_.ClearToEmpty();
  _impl_.rpm_image_uri_posture_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Scene_CharacterReference_Character_CharacterAssets::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string rpm_model_uri = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_rpm_model_uri();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Scene.CharacterReference.Character.CharacterAssets.rpm_model_uri"));
        } else
          goto handle_unusual;
        continue;
      // string rpm_image_uri = 2 [deprecated = true, (.google.api.field_behavior) = OUTPUT_ONLY];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_rpm_image_uri();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Scene.CharacterReference.Character.CharacterAssets.rpm_image_uri"));
        } else
          goto handle_unusual;
        continue;
      // string rpm_image_uri_portrait = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_rpm_image_uri_portrait();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Scene.CharacterReference.Character.CharacterAssets.rpm_image_uri_portrait"));
        } else
          goto handle_unusual;
        continue;
      // string rpm_image_uri_posture = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_rpm_image_uri_posture();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Scene.CharacterReference.Character.CharacterAssets.rpm_image_uri_posture"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Scene_CharacterReference_Character_CharacterAssets::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.Scene.CharacterReference.Character.CharacterAssets)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string rpm_model_uri = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (!this->_internal_rpm_model_uri().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rpm_model_uri().data(), static_cast<int>(this->_internal_rpm_model_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Scene.CharacterReference.Character.CharacterAssets.rpm_model_uri");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_rpm_model_uri(), target);
  }

  // string rpm_image_uri = 2 [deprecated = true, (.google.api.field_behavior) = OUTPUT_ONLY];
  if (!this->_internal_rpm_image_uri().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rpm_image_uri().data(), static_cast<int>(this->_internal_rpm_image_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Scene.CharacterReference.Character.CharacterAssets.rpm_image_uri");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rpm_image_uri(), target);
  }

  // string rpm_image_uri_portrait = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (!this->_internal_rpm_image_uri_portrait().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rpm_image_uri_portrait().data(), static_cast<int>(this->_internal_rpm_image_uri_portrait().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Scene.CharacterReference.Character.CharacterAssets.rpm_image_uri_portrait");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_rpm_image_uri_portrait(), target);
  }

  // string rpm_image_uri_posture = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (!this->_internal_rpm_image_uri_posture().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rpm_image_uri_posture().data(), static_cast<int>(this->_internal_rpm_image_uri_posture().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Scene.CharacterReference.Character.CharacterAssets.rpm_image_uri_posture");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_rpm_image_uri_posture(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.Scene.CharacterReference.Character.CharacterAssets)
  return target;
}

size_t Scene_CharacterReference_Character_CharacterAssets::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.Scene.CharacterReference.Character.CharacterAssets)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string rpm_model_uri = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (!this->_internal_rpm_model_uri().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rpm_model_uri());
  }

  // string rpm_image_uri = 2 [deprecated = true, (.google.api.field_behavior) = OUTPUT_ONLY];
  if (!this->_internal_rpm_image_uri().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rpm_image_uri());
  }

  // string rpm_image_uri_portrait = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (!this->_internal_rpm_image_uri_portrait().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rpm_image_uri_portrait());
  }

  // string rpm_image_uri_posture = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (!this->_internal_rpm_image_uri_posture().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rpm_image_uri_posture());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Scene_CharacterReference_Character_CharacterAssets::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Scene_CharacterReference_Character_CharacterAssets::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Scene_CharacterReference_Character_CharacterAssets::GetClassData() const { return &_class_data_; }


void Scene_CharacterReference_Character_CharacterAssets::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Scene_CharacterReference_Character_CharacterAssets*>(&to_msg);
  auto& from = static_cast<const Scene_CharacterReference_Character_CharacterAssets&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.Scene.CharacterReference.Character.CharacterAssets)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_rpm_model_uri().empty()) {
    _this->_internal_set_rpm_model_uri(from._internal_rpm_model_uri());
  }
  if (!from._internal_rpm_image_uri().empty()) {
    _this->_internal_set_rpm_image_uri(from._internal_rpm_image_uri());
  }
  if (!from._internal_rpm_image_uri_portrait().empty()) {
    _this->_internal_set_rpm_image_uri_portrait(from._internal_rpm_image_uri_portrait());
  }
  if (!from._internal_rpm_image_uri_posture().empty()) {
    _this->_internal_set_rpm_image_uri_posture(from._internal_rpm_image_uri_posture());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Scene_CharacterReference_Character_CharacterAssets::CopyFrom(const Scene_CharacterReference_Character_CharacterAssets& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.Scene.CharacterReference.Character.CharacterAssets)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Scene_CharacterReference_Character_CharacterAssets::IsInitialized() const {
  return true;
}

void Scene_CharacterReference_Character_CharacterAssets::InternalSwap(Scene_CharacterReference_Character_CharacterAssets* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.rpm_model_uri_, lhs_arena,
      &other->_impl_.rpm_model_uri_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.rpm_image_uri_, lhs_arena,
      &other->_impl_.rpm_image_uri_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.rpm_image_uri_portrait_, lhs_arena,
      &other->_impl_.rpm_image_uri_portrait_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.rpm_image_uri_posture_, lhs_arena,
      &other->_impl_.rpm_image_uri_posture_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata Scene_CharacterReference_Character_CharacterAssets::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fscenes_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fscenes_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fscenes_2eproto[6]);
}

// ===================================================================

class Scene_CharacterReference_Character::_Internal {
 public:
  static const ::ai::inworld::studio::v1alpha::Scene_CharacterReference_Character_CharacterDescription& default_character_description(const Scene_CharacterReference_Character* msg);
  static const ::ai::inworld::studio::v1alpha::Scene_CharacterReference_Character_CharacterAssets& default_character_assets(const Scene_CharacterReference_Character* msg);
};

const ::ai::inworld::studio::v1alpha::Scene_CharacterReference_Character_CharacterDescription&
Scene_CharacterReference_Character::_Internal::default_character_description(const Scene_CharacterReference_Character* msg) {
  return *msg->_impl_.default_character_description_;
}
const ::ai::inworld::studio::v1alpha::Scene_CharacterReference_Character_CharacterAssets&
Scene_CharacterReference_Character::_Internal::default_character_assets(const Scene_CharacterReference_Character* msg) {
  return *msg->_impl_.default_character_assets_;
}
Scene_CharacterReference_Character::Scene_CharacterReference_Character(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.Scene.CharacterReference.Character)
}
Scene_CharacterReference_Character::Scene_CharacterReference_Character(const Scene_CharacterReference_Character& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Scene_CharacterReference_Character* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.default_character_description_){nullptr}
    , decltype(_impl_.default_character_assets_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_default_character_description()) {
    _this->_impl_.default_character_description_ = new ::ai::inworld::studio::v1alpha::Scene_CharacterReference_Character_CharacterDescription(*from._impl_.default_character_description_);
  }
  if (from._internal_has_default_character_assets()) {
    _this->_impl_.default_character_assets_ = new ::ai::inworld::studio::v1alpha::Scene_CharacterReference_Character_CharacterAssets(*from._impl_.default_character_assets_);
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.Scene.CharacterReference.Character)
}

inline void Scene_CharacterReference_Character::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.default_character_description_){nullptr}
    , decltype(_impl_.default_character_assets_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Scene_CharacterReference_Character::~Scene_CharacterReference_Character() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.Scene.CharacterReference.Character)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Scene_CharacterReference_Character::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.default_character_description_;
  if (this != internal_default_instance()) delete _impl_.default_character_assets_;
}

void Scene_CharacterReference_Character::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Scene_CharacterReference_Character::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.Scene.CharacterReference.Character)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.default_character_description_ != nullptr) {
    delete _impl_.default_character_description_;
  }
  _impl_.default_character_description_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.default_character_assets_ != nullptr) {
    delete _impl_.default_character_assets_;
  }
  _impl_.default_character_assets_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Scene_CharacterReference_Character::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .ai.inworld.studio.v1alpha.Scene.CharacterReference.Character.CharacterDescription default_character_description = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_character_description(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ai.inworld.studio.v1alpha.Scene.CharacterReference.Character.CharacterAssets default_character_assets = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_character_assets(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Scene_CharacterReference_Character::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.Scene.CharacterReference.Character)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .ai.inworld.studio.v1alpha.Scene.CharacterReference.Character.CharacterDescription default_character_description = 1;
  if (this->_internal_has_default_character_description()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::default_character_description(this),
        _Internal::default_character_description(this).GetCachedSize(), target, stream);
  }

  // .ai.inworld.studio.v1alpha.Scene.CharacterReference.Character.CharacterAssets default_character_assets = 2;
  if (this->_internal_has_default_character_assets()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::default_character_assets(this),
        _Internal::default_character_assets(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.Scene.CharacterReference.Character)
  return target;
}

size_t Scene_CharacterReference_Character::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.Scene.CharacterReference.Character)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ai.inworld.studio.v1alpha.Scene.CharacterReference.Character.CharacterDescription default_character_description = 1;
  if (this->_internal_has_default_character_description()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.default_character_description_);
  }

  // .ai.inworld.studio.v1alpha.Scene.CharacterReference.Character.CharacterAssets default_character_assets = 2;
  if (this->_internal_has_default_character_assets()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.default_character_assets_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Scene_CharacterReference_Character::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Scene_CharacterReference_Character::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Scene_CharacterReference_Character::GetClassData() const { return &_class_data_; }


void Scene_CharacterReference_Character::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Scene_CharacterReference_Character*>(&to_msg);
  auto& from = static_cast<const Scene_CharacterReference_Character&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.Scene.CharacterReference.Character)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_default_character_description()) {
    _this->_internal_mutable_default_character_description()->::ai::inworld::studio::v1alpha::Scene_CharacterReference_Character_CharacterDescription::MergeFrom(
        from._internal_default_character_description());
  }
  if (from._internal_has_default_character_assets()) {
    _this->_internal_mutable_default_character_assets()->::ai::inworld::studio::v1alpha::Scene_CharacterReference_Character_CharacterAssets::MergeFrom(
        from._internal_default_character_assets());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Scene_CharacterReference_Character::CopyFrom(const Scene_CharacterReference_Character& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.Scene.CharacterReference.Character)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Scene_CharacterReference_Character::IsInitialized() const {
  return true;
}

void Scene_CharacterReference_Character::InternalSwap(Scene_CharacterReference_Character* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Scene_CharacterReference_Character, _impl_.default_character_assets_)
      + sizeof(Scene_CharacterReference_Character::_impl_.default_character_assets_)
      - PROTOBUF_FIELD_OFFSET(Scene_CharacterReference_Character, _impl_.default_character_description_)>(
          reinterpret_cast<char*>(&_impl_.default_character_description_),
          reinterpret_cast<char*>(&other->_impl_.default_character_description_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Scene_CharacterReference_Character::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fscenes_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fscenes_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fscenes_2eproto[7]);
}

// ===================================================================

class Scene_CharacterReference::_Internal {
 public:
};

Scene_CharacterReference::Scene_CharacterReference(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.Scene.CharacterReference)
}
Scene_CharacterReference::Scene_CharacterReference(const Scene_CharacterReference& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Scene_CharacterReference* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.character_overloads_){from._impl_.character_overloads_}
    , decltype(_impl_.name_){}
    , decltype(_impl_.character_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.character_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.character_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_character().empty()) {
    _this->_impl_.character_.Set(from._internal_character(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.Scene.CharacterReference)
}

inline void Scene_CharacterReference::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.character_overloads_){arena}
    , decltype(_impl_.name_){}
    , decltype(_impl_.character_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.character_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.character_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Scene_CharacterReference::~Scene_CharacterReference() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.Scene.CharacterReference)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Scene_CharacterReference::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.character_overloads_.~RepeatedPtrField();
  _impl_.name_.Destroy();
  _impl_.character_.Destroy();
}

void Scene_CharacterReference::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Scene_CharacterReference::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.Scene.CharacterReference)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.character_overloads_.Clear();
  _impl_.name_.ClearToEmpty();
  _impl_.character_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Scene_CharacterReference::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = OPTIONAL];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Scene.CharacterReference.name"));
        } else
          goto handle_unusual;
        continue;
      // string character = 2 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_character();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Scene.CharacterReference.character"));
        } else
          goto handle_unusual;
        continue;
      // repeated .ai.inworld.studio.v1alpha.Scene.CharacterReference.Character character_overloads = 4 [(.google.api.field_behavior) = OPTIONAL];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_character_overloads(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Scene_CharacterReference::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.Scene.CharacterReference)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = OPTIONAL];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Scene.CharacterReference.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string character = 2 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_character().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_character().data(), static_cast<int>(this->_internal_character().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Scene.CharacterReference.character");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_character(), target);
  }

  // repeated .ai.inworld.studio.v1alpha.Scene.CharacterReference.Character character_overloads = 4 [(.google.api.field_behavior) = OPTIONAL];
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_character_overloads_size()); i < n; i++) {
    const auto& repfield = this->_internal_character_overloads(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.Scene.CharacterReference)
  return target;
}

size_t Scene_CharacterReference::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.Scene.CharacterReference)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ai.inworld.studio.v1alpha.Scene.CharacterReference.Character character_overloads = 4 [(.google.api.field_behavior) = OPTIONAL];
  total_size += 1UL * this->_internal_character_overloads_size();
  for (const auto& msg : this->_impl_.character_overloads_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string name = 1 [(.google.api.field_behavior) = OPTIONAL];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string character = 2 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_character().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_character());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Scene_CharacterReference::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Scene_CharacterReference::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Scene_CharacterReference::GetClassData() const { return &_class_data_; }


void Scene_CharacterReference::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Scene_CharacterReference*>(&to_msg);
  auto& from = static_cast<const Scene_CharacterReference&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.Scene.CharacterReference)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.character_overloads_.MergeFrom(from._impl_.character_overloads_);
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_character().empty()) {
    _this->_internal_set_character(from._internal_character());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Scene_CharacterReference::CopyFrom(const Scene_CharacterReference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.Scene.CharacterReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Scene_CharacterReference::IsInitialized() const {
  return true;
}

void Scene_CharacterReference::InternalSwap(Scene_CharacterReference* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.character_overloads_.InternalSwap(&other->_impl_.character_overloads_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.character_, lhs_arena,
      &other->_impl_.character_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata Scene_CharacterReference::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fscenes_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fscenes_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fscenes_2eproto[8]);
}

// ===================================================================

class Scene_SceneTrigger::_Internal {
 public:
};

Scene_SceneTrigger::Scene_SceneTrigger(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.Scene.SceneTrigger)
}
Scene_SceneTrigger::Scene_SceneTrigger(const Scene_SceneTrigger& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Scene_SceneTrigger* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.trigger_){}
    , decltype(_impl_.description_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.trigger_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.trigger_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_trigger().empty()) {
    _this->_impl_.trigger_.Set(from._internal_trigger(), 
      _this->GetArenaForAllocation());
  }
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    _this->_impl_.description_.Set(from._internal_description(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.Scene.SceneTrigger)
}

inline void Scene_SceneTrigger::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.trigger_){}
    , decltype(_impl_.description_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.trigger_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.trigger_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Scene_SceneTrigger::~Scene_SceneTrigger() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.Scene.SceneTrigger)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Scene_SceneTrigger::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.trigger_.Destroy();
  _impl_.description_.Destroy();
}

void Scene_SceneTrigger::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Scene_SceneTrigger::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.Scene.SceneTrigger)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.trigger_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Scene_SceneTrigger::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string trigger = 1 [(.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_trigger();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Scene.SceneTrigger.trigger"));
        } else
          goto handle_unusual;
        continue;
      // string description = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_description();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Scene.SceneTrigger.description"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Scene_SceneTrigger::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.Scene.SceneTrigger)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string trigger = 1 [(.google.api.resource_reference) = {
  if (!this->_internal_trigger().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_trigger().data(), static_cast<int>(this->_internal_trigger().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Scene.SceneTrigger.trigger");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_trigger(), target);
  }

  // string description = 2;
  if (!this->_internal_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Scene.SceneTrigger.description");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_description(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.Scene.SceneTrigger)
  return target;
}

size_t Scene_SceneTrigger::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.Scene.SceneTrigger)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string trigger = 1 [(.google.api.resource_reference) = {
  if (!this->_internal_trigger().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_trigger());
  }

  // string description = 2;
  if (!this->_internal_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Scene_SceneTrigger::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Scene_SceneTrigger::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Scene_SceneTrigger::GetClassData() const { return &_class_data_; }


void Scene_SceneTrigger::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Scene_SceneTrigger*>(&to_msg);
  auto& from = static_cast<const Scene_SceneTrigger&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.Scene.SceneTrigger)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_trigger().empty()) {
    _this->_internal_set_trigger(from._internal_trigger());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Scene_SceneTrigger::CopyFrom(const Scene_SceneTrigger& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.Scene.SceneTrigger)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Scene_SceneTrigger::IsInitialized() const {
  return true;
}

void Scene_SceneTrigger::InternalSwap(Scene_SceneTrigger* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.trigger_, lhs_arena,
      &other->_impl_.trigger_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.description_, lhs_arena,
      &other->_impl_.description_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata Scene_SceneTrigger::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fscenes_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fscenes_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fscenes_2eproto[9]);
}

// ===================================================================

class Scene_Meta::_Internal {
 public:
};

Scene_Meta::Scene_Meta(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.Scene.Meta)
}
Scene_Meta::Scene_Meta(const Scene_Meta& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Scene_Meta* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.total_triggers_){}
    , decltype(_impl_.total_characters_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.total_triggers_, &from._impl_.total_triggers_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.total_characters_) -
    reinterpret_cast<char*>(&_impl_.total_triggers_)) + sizeof(_impl_.total_characters_));
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.Scene.Meta)
}

inline void Scene_Meta::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.total_triggers_){0}
    , decltype(_impl_.total_characters_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Scene_Meta::~Scene_Meta() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.Scene.Meta)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Scene_Meta::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Scene_Meta::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Scene_Meta::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.Scene.Meta)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.total_triggers_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.total_characters_) -
      reinterpret_cast<char*>(&_impl_.total_triggers_)) + sizeof(_impl_.total_characters_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Scene_Meta::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 total_triggers = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.total_triggers_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 total_characters = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.total_characters_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Scene_Meta::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.Scene.Meta)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 total_triggers = 1;
  if (this->_internal_total_triggers() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_total_triggers(), target);
  }

  // int32 total_characters = 2;
  if (this->_internal_total_characters() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_total_characters(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.Scene.Meta)
  return target;
}

size_t Scene_Meta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.Scene.Meta)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 total_triggers = 1;
  if (this->_internal_total_triggers() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_total_triggers());
  }

  // int32 total_characters = 2;
  if (this->_internal_total_characters() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_total_characters());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Scene_Meta::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Scene_Meta::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Scene_Meta::GetClassData() const { return &_class_data_; }


void Scene_Meta::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Scene_Meta*>(&to_msg);
  auto& from = static_cast<const Scene_Meta&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.Scene.Meta)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_total_triggers() != 0) {
    _this->_internal_set_total_triggers(from._internal_total_triggers());
  }
  if (from._internal_total_characters() != 0) {
    _this->_internal_set_total_characters(from._internal_total_characters());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Scene_Meta::CopyFrom(const Scene_Meta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.Scene.Meta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Scene_Meta::IsInitialized() const {
  return true;
}

void Scene_Meta::InternalSwap(Scene_Meta* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Scene_Meta, _impl_.total_characters_)
      + sizeof(Scene_Meta::_impl_.total_characters_)
      - PROTOBUF_FIELD_OFFSET(Scene_Meta, _impl_.total_triggers_)>(
          reinterpret_cast<char*>(&_impl_.total_triggers_),
          reinterpret_cast<char*>(&other->_impl_.total_triggers_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Scene_Meta::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fscenes_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fscenes_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fscenes_2eproto[10]);
}

// ===================================================================

class Scene::_Internal {
 public:
  static const ::ai::inworld::studio::v1alpha::Scene_Meta& meta(const Scene* msg);
};

const ::ai::inworld::studio::v1alpha::Scene_Meta&
Scene::_Internal::meta(const Scene* msg) {
  return *msg->_impl_.meta_;
}
Scene::Scene(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.Scene)
}
Scene::Scene(const Scene& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Scene* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.scene_triggers_){from._impl_.scene_triggers_}
    , decltype(_impl_.character_references_){from._impl_.character_references_}
    , decltype(_impl_.name_){}
    , decltype(_impl_.description_){}
    , decltype(_impl_.display_name_){}
    , decltype(_impl_.meta_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    _this->_impl_.description_.Set(from._internal_description(), 
      _this->GetArenaForAllocation());
  }
  _impl_.display_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.display_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_display_name().empty()) {
    _this->_impl_.display_name_.Set(from._internal_display_name(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_meta()) {
    _this->_impl_.meta_ = new ::ai::inworld::studio::v1alpha::Scene_Meta(*from._impl_.meta_);
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.Scene)
}

inline void Scene::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.scene_triggers_){arena}
    , decltype(_impl_.character_references_){arena}
    , decltype(_impl_.name_){}
    , decltype(_impl_.description_){}
    , decltype(_impl_.display_name_){}
    , decltype(_impl_.meta_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.display_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.display_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Scene::~Scene() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.Scene)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Scene::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.scene_triggers_.~RepeatedPtrField();
  _impl_.character_references_.~RepeatedPtrField();
  _impl_.name_.Destroy();
  _impl_.description_.Destroy();
  _impl_.display_name_.Destroy();
  if (this != internal_default_instance()) delete _impl_.meta_;
}

void Scene::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Scene::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.Scene)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.scene_triggers_.Clear();
  _impl_.character_references_.Clear();
  _impl_.name_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  _impl_.display_name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.meta_ != nullptr) {
    delete _impl_.meta_;
  }
  _impl_.meta_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Scene::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Scene.name"));
        } else
          goto handle_unusual;
        continue;
      // string description = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_description();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Scene.description"));
        } else
          goto handle_unusual;
        continue;
      // repeated .ai.inworld.studio.v1alpha.Scene.SceneTrigger scene_triggers = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_scene_triggers(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .ai.inworld.studio.v1alpha.Scene.CharacterReference character_references = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_character_references(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string display_name = 5 [(.ai.inworld.options.examples) = {
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_display_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Scene.display_name"));
        } else
          goto handle_unusual;
        continue;
      // .ai.inworld.studio.v1alpha.Scene.Meta meta = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_meta(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Scene::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.Scene)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Scene.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string description = 2;
  if (!this->_internal_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Scene.description");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_description(), target);
  }

  // repeated .ai.inworld.studio.v1alpha.Scene.SceneTrigger scene_triggers = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_scene_triggers_size()); i < n; i++) {
    const auto& repfield = this->_internal_scene_triggers(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .ai.inworld.studio.v1alpha.Scene.CharacterReference character_references = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_character_references_size()); i < n; i++) {
    const auto& repfield = this->_internal_character_references(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string display_name = 5 [(.ai.inworld.options.examples) = {
  if (!this->_internal_display_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_display_name().data(), static_cast<int>(this->_internal_display_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Scene.display_name");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_display_name(), target);
  }

  // .ai.inworld.studio.v1alpha.Scene.Meta meta = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->_internal_has_meta()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::meta(this),
        _Internal::meta(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.Scene)
  return target;
}

size_t Scene::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.Scene)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ai.inworld.studio.v1alpha.Scene.SceneTrigger scene_triggers = 3;
  total_size += 1UL * this->_internal_scene_triggers_size();
  for (const auto& msg : this->_impl_.scene_triggers_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ai.inworld.studio.v1alpha.Scene.CharacterReference character_references = 4;
  total_size += 1UL * this->_internal_character_references_size();
  for (const auto& msg : this->_impl_.character_references_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string name = 1 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string description = 2;
  if (!this->_internal_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // string display_name = 5 [(.ai.inworld.options.examples) = {
  if (!this->_internal_display_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_display_name());
  }

  // .ai.inworld.studio.v1alpha.Scene.Meta meta = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->_internal_has_meta()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.meta_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Scene::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Scene::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Scene::GetClassData() const { return &_class_data_; }


void Scene::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Scene*>(&to_msg);
  auto& from = static_cast<const Scene&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.Scene)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.scene_triggers_.MergeFrom(from._impl_.scene_triggers_);
  _this->_impl_.character_references_.MergeFrom(from._impl_.character_references_);
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if (!from._internal_display_name().empty()) {
    _this->_internal_set_display_name(from._internal_display_name());
  }
  if (from._internal_has_meta()) {
    _this->_internal_mutable_meta()->::ai::inworld::studio::v1alpha::Scene_Meta::MergeFrom(
        from._internal_meta());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Scene::CopyFrom(const Scene& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.Scene)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Scene::IsInitialized() const {
  return true;
}

void Scene::InternalSwap(Scene* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.scene_triggers_.InternalSwap(&other->_impl_.scene_triggers_);
  _impl_.character_references_.InternalSwap(&other->_impl_.character_references_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.description_, lhs_arena,
      &other->_impl_.description_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.display_name_, lhs_arena,
      &other->_impl_.display_name_, rhs_arena
  );
  swap(_impl_.meta_, other->_impl_.meta_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Scene::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fscenes_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fscenes_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fscenes_2eproto[11]);
}

// ===================================================================

class ListScenesResponse::_Internal {
 public:
};

ListScenesResponse::ListScenesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.ListScenesResponse)
}
ListScenesResponse::ListScenesResponse(const ListScenesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ListScenesResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.scenes_){from._impl_.scenes_}
    , decltype(_impl_.next_page_token_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.next_page_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.next_page_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_next_page_token().empty()) {
    _this->_impl_.next_page_token_.Set(from._internal_next_page_token(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.ListScenesResponse)
}

inline void ListScenesResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.scenes_){arena}
    , decltype(_impl_.next_page_token_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.next_page_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.next_page_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ListScenesResponse::~ListScenesResponse() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.ListScenesResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListScenesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.scenes_.~RepeatedPtrField();
  _impl_.next_page_token_.Destroy();
}

void ListScenesResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ListScenesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.ListScenesResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.scenes_.Clear();
  _impl_.next_page_token_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListScenesResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .ai.inworld.studio.v1alpha.Scene scenes = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_scenes(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string next_page_token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_next_page_token();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.ListScenesResponse.next_page_token"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListScenesResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.ListScenesResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ai.inworld.studio.v1alpha.Scene scenes = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_scenes_size()); i < n; i++) {
    const auto& repfield = this->_internal_scenes(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string next_page_token = 2;
  if (!this->_internal_next_page_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_next_page_token().data(), static_cast<int>(this->_internal_next_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.ListScenesResponse.next_page_token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_next_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.ListScenesResponse)
  return target;
}

size_t ListScenesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.ListScenesResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ai.inworld.studio.v1alpha.Scene scenes = 1;
  total_size += 1UL * this->_internal_scenes_size();
  for (const auto& msg : this->_impl_.scenes_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string next_page_token = 2;
  if (!this->_internal_next_page_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_next_page_token());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListScenesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ListScenesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListScenesResponse::GetClassData() const { return &_class_data_; }


void ListScenesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ListScenesResponse*>(&to_msg);
  auto& from = static_cast<const ListScenesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.ListScenesResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.scenes_.MergeFrom(from._impl_.scenes_);
  if (!from._internal_next_page_token().empty()) {
    _this->_internal_set_next_page_token(from._internal_next_page_token());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListScenesResponse::CopyFrom(const ListScenesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.ListScenesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListScenesResponse::IsInitialized() const {
  return true;
}

void ListScenesResponse::InternalSwap(ListScenesResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.scenes_.InternalSwap(&other->_impl_.scenes_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.next_page_token_, lhs_arena,
      &other->_impl_.next_page_token_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ListScenesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fscenes_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fscenes_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fscenes_2eproto[12]);
}

// ===================================================================

class DeploySceneRequest::_Internal {
 public:
};

DeploySceneRequest::DeploySceneRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.DeploySceneRequest)
}
DeploySceneRequest::DeploySceneRequest(const DeploySceneRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeploySceneRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.DeploySceneRequest)
}

inline void DeploySceneRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeploySceneRequest::~DeploySceneRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.DeploySceneRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeploySceneRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void DeploySceneRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeploySceneRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.DeploySceneRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeploySceneRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.DeploySceneRequest.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeploySceneRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.DeploySceneRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.DeploySceneRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.DeploySceneRequest)
  return target;
}

size_t DeploySceneRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.DeploySceneRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeploySceneRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeploySceneRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeploySceneRequest::GetClassData() const { return &_class_data_; }


void DeploySceneRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeploySceneRequest*>(&to_msg);
  auto& from = static_cast<const DeploySceneRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.DeploySceneRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeploySceneRequest::CopyFrom(const DeploySceneRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.DeploySceneRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeploySceneRequest::IsInitialized() const {
  return true;
}

void DeploySceneRequest::InternalSwap(DeploySceneRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeploySceneRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fscenes_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fscenes_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fscenes_2eproto[13]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1alpha
}  // namespace studio
}  // namespace inworld
}  // namespace ai
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::GetSceneRequest*
Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::GetSceneRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::GetSceneRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::ListScenesRequest*
Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::ListScenesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::ListScenesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::CreateSceneRequest*
Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::CreateSceneRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::CreateSceneRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::UpdateSceneRequest*
Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::UpdateSceneRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::UpdateSceneRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::DeleteSceneRequest*
Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::DeleteSceneRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::DeleteSceneRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::Scene_CharacterReference_Character_CharacterDescription*
Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::Scene_CharacterReference_Character_CharacterDescription >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::Scene_CharacterReference_Character_CharacterDescription >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::Scene_CharacterReference_Character_CharacterAssets*
Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::Scene_CharacterReference_Character_CharacterAssets >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::Scene_CharacterReference_Character_CharacterAssets >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::Scene_CharacterReference_Character*
Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::Scene_CharacterReference_Character >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::Scene_CharacterReference_Character >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::Scene_CharacterReference*
Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::Scene_CharacterReference >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::Scene_CharacterReference >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::Scene_SceneTrigger*
Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::Scene_SceneTrigger >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::Scene_SceneTrigger >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::Scene_Meta*
Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::Scene_Meta >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::Scene_Meta >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::Scene*
Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::Scene >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::Scene >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::ListScenesResponse*
Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::ListScenesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::ListScenesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::DeploySceneRequest*
Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::DeploySceneRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::DeploySceneRequest >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
