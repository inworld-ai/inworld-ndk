// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: world-engine.proto

#include "ProtoDisableWarning.h"

#include "world-engine.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace ai {
namespace inworld {
namespace engine {
PROTOBUF_CONSTEXPR CapabilitiesRequest::CapabilitiesRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.audio_)*/false
  , /*decltype(_impl_.text_)*/false
  , /*decltype(_impl_.gestures_)*/false
  , /*decltype(_impl_.interruptions_)*/false
  , /*decltype(_impl_.triggers_)*/false
  , /*decltype(_impl_.emotions_)*/false
  , /*decltype(_impl_.animations_)*/false
  , /*decltype(_impl_.turn_based_stt_)*/false
  , /*decltype(_impl_.emotion_streaming_)*/false
  , /*decltype(_impl_.silence_events_)*/false
  , /*decltype(_impl_.phoneme_info_)*/false
  , /*decltype(_impl_.continuation_)*/false
  , /*decltype(_impl_.session_cancellation_)*/false
  , /*decltype(_impl_.narrated_actions_)*/false
  , /*decltype(_impl_.regenerate_response_)*/false
  , /*decltype(_impl_.load_scene_in_session_)*/false
  , /*decltype(_impl_.relations_)*/false
  , /*decltype(_impl_.debug_info_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CapabilitiesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CapabilitiesRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CapabilitiesRequestDefaultTypeInternal() {}
  union {
    CapabilitiesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CapabilitiesRequestDefaultTypeInternal _CapabilitiesRequest_default_instance_;
PROTOBUF_CONSTEXPR UserRequest::UserRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UserRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserRequestDefaultTypeInternal() {}
  union {
    UserRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserRequestDefaultTypeInternal _UserRequest_default_instance_;
PROTOBUF_CONSTEXPR ClientRequest::ClientRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.version_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ClientRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ClientRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ClientRequestDefaultTypeInternal() {}
  union {
    ClientRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ClientRequestDefaultTypeInternal _ClientRequest_default_instance_;
PROTOBUF_CONSTEXPR CreateWorldRequest_CreateAgentRequest::CreateWorldRequest_CreateAgentRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.brain_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.language_code_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.voice_preset_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CreateWorldRequest_CreateAgentRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateWorldRequest_CreateAgentRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateWorldRequest_CreateAgentRequestDefaultTypeInternal() {}
  union {
    CreateWorldRequest_CreateAgentRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateWorldRequest_CreateAgentRequestDefaultTypeInternal _CreateWorldRequest_CreateAgentRequest_default_instance_;
PROTOBUF_CONSTEXPR CreateWorldRequest_ClientRequest::CreateWorldRequest_ClientRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.version_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CreateWorldRequest_ClientRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateWorldRequest_ClientRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateWorldRequest_ClientRequestDefaultTypeInternal() {}
  union {
    CreateWorldRequest_ClientRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateWorldRequest_ClientRequestDefaultTypeInternal _CreateWorldRequest_ClientRequest_default_instance_;
PROTOBUF_CONSTEXPR CreateWorldRequest::CreateWorldRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.create_agent_requests_)*/{}
  , /*decltype(_impl_.proto_world_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.capabilities_)*/nullptr
  , /*decltype(_impl_.user_)*/nullptr
  , /*decltype(_impl_.client_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CreateWorldRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateWorldRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateWorldRequestDefaultTypeInternal() {}
  union {
    CreateWorldRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateWorldRequestDefaultTypeInternal _CreateWorldRequest_default_instance_;
PROTOBUF_CONSTEXPR CreateWorldResponse_Agent::CreateWorldResponse_Agent(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.agent_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.brain_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CreateWorldResponse_AgentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateWorldResponse_AgentDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateWorldResponse_AgentDefaultTypeInternal() {}
  union {
    CreateWorldResponse_Agent _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateWorldResponse_AgentDefaultTypeInternal _CreateWorldResponse_Agent_default_instance_;
PROTOBUF_CONSTEXPR CreateWorldResponse::CreateWorldResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.agents_)*/{}
  , /*decltype(_impl_.key_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CreateWorldResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateWorldResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateWorldResponseDefaultTypeInternal() {}
  union {
    CreateWorldResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateWorldResponseDefaultTypeInternal _CreateWorldResponse_default_instance_;
PROTOBUF_CONSTEXPR LoadSceneRequest::LoadSceneRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.capabilities_)*/nullptr
  , /*decltype(_impl_.user_)*/nullptr
  , /*decltype(_impl_.client_)*/nullptr
  , /*decltype(_impl_.audio_settings_)*/nullptr
  , /*decltype(_impl_.user_settings_)*/nullptr
  , /*decltype(_impl_.session_continuation_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct LoadSceneRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LoadSceneRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LoadSceneRequestDefaultTypeInternal() {}
  union {
    LoadSceneRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LoadSceneRequestDefaultTypeInternal _LoadSceneRequest_default_instance_;
PROTOBUF_CONSTEXPR AudioSettings::AudioSettings(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.stt_sample_rate_hertz_)*/0u
  , /*decltype(_impl_.tts_sample_rate_hertz_)*/0u
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AudioSettingsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AudioSettingsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AudioSettingsDefaultTypeInternal() {}
  union {
    AudioSettings _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AudioSettingsDefaultTypeInternal _AudioSettings_default_instance_;
PROTOBUF_CONSTEXPR UserSettings_PlayerProfile_PlayerField::UserSettings_PlayerProfile_PlayerField(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.field_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.field_value_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UserSettings_PlayerProfile_PlayerFieldDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserSettings_PlayerProfile_PlayerFieldDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserSettings_PlayerProfile_PlayerFieldDefaultTypeInternal() {}
  union {
    UserSettings_PlayerProfile_PlayerField _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserSettings_PlayerProfile_PlayerFieldDefaultTypeInternal _UserSettings_PlayerProfile_PlayerField_default_instance_;
PROTOBUF_CONSTEXPR UserSettings_PlayerProfile::UserSettings_PlayerProfile(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.fields_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UserSettings_PlayerProfileDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserSettings_PlayerProfileDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserSettings_PlayerProfileDefaultTypeInternal() {}
  union {
    UserSettings_PlayerProfile _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserSettings_PlayerProfileDefaultTypeInternal _UserSettings_PlayerProfile_default_instance_;
PROTOBUF_CONSTEXPR UserSettings::UserSettings(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.player_profile_)*/nullptr
  , /*decltype(_impl_.view_transcript_consent_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UserSettingsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserSettingsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserSettingsDefaultTypeInternal() {}
  union {
    UserSettings _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserSettingsDefaultTypeInternal _UserSettings_default_instance_;
PROTOBUF_CONSTEXPR SessionContinuation_ContinuationInfo::SessionContinuation_ContinuationInfo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.millis_passed_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SessionContinuation_ContinuationInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SessionContinuation_ContinuationInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SessionContinuation_ContinuationInfoDefaultTypeInternal() {}
  union {
    SessionContinuation_ContinuationInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SessionContinuation_ContinuationInfoDefaultTypeInternal _SessionContinuation_ContinuationInfo_default_instance_;
PROTOBUF_CONSTEXPR SessionContinuation::SessionContinuation(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.previous_state_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.continuation_info_)*/nullptr
  , /*decltype(_impl_.previous_dialog_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SessionContinuationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SessionContinuationDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SessionContinuationDefaultTypeInternal() {}
  union {
    SessionContinuation _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SessionContinuationDefaultTypeInternal _SessionContinuation_default_instance_;
PROTOBUF_CONSTEXPR PreviousDialog_Phrase::PreviousDialog_Phrase(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.phrase_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.talker_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PreviousDialog_PhraseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PreviousDialog_PhraseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PreviousDialog_PhraseDefaultTypeInternal() {}
  union {
    PreviousDialog_Phrase _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PreviousDialog_PhraseDefaultTypeInternal _PreviousDialog_Phrase_default_instance_;
PROTOBUF_CONSTEXPR PreviousDialog::PreviousDialog(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.phrases_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PreviousDialogDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PreviousDialogDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PreviousDialogDefaultTypeInternal() {}
  union {
    PreviousDialog _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PreviousDialogDefaultTypeInternal _PreviousDialog_default_instance_;
PROTOBUF_CONSTEXPR PreviousState_StateHolder::PreviousState_StateHolder(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.packets_)*/{}
  , /*decltype(_impl_.relations_to_actors_)*/{}
  , /*decltype(_impl_.brain_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.state_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.previous_dialog_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PreviousState_StateHolderDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PreviousState_StateHolderDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PreviousState_StateHolderDefaultTypeInternal() {}
  union {
    PreviousState_StateHolder _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PreviousState_StateHolderDefaultTypeInternal _PreviousState_StateHolder_default_instance_;
PROTOBUF_CONSTEXPR PreviousState::PreviousState(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.state_holders_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PreviousStateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PreviousStateDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PreviousStateDefaultTypeInternal() {}
  union {
    PreviousState _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PreviousStateDefaultTypeInternal _PreviousState_default_instance_;
PROTOBUF_CONSTEXPR LoadSceneResponse_Agent_CharacterAssets::LoadSceneResponse_Agent_CharacterAssets(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.rpm_model_uri_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.rpm_image_uri_portrait_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.rpm_image_uri_posture_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.avatar_img_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.avatar_img_original_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct LoadSceneResponse_Agent_CharacterAssetsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LoadSceneResponse_Agent_CharacterAssetsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LoadSceneResponse_Agent_CharacterAssetsDefaultTypeInternal() {}
  union {
    LoadSceneResponse_Agent_CharacterAssets _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LoadSceneResponse_Agent_CharacterAssetsDefaultTypeInternal _LoadSceneResponse_Agent_CharacterAssets_default_instance_;
PROTOBUF_CONSTEXPR LoadSceneResponse_Agent::LoadSceneResponse_Agent(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.agent_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.brain_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.given_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.character_assets_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct LoadSceneResponse_AgentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LoadSceneResponse_AgentDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LoadSceneResponse_AgentDefaultTypeInternal() {}
  union {
    LoadSceneResponse_Agent _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LoadSceneResponse_AgentDefaultTypeInternal _LoadSceneResponse_Agent_default_instance_;
PROTOBUF_CONSTEXPR LoadSceneResponse::LoadSceneResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.agents_)*/{}
  , /*decltype(_impl_.key_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.previous_state_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct LoadSceneResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LoadSceneResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LoadSceneResponseDefaultTypeInternal() {}
  union {
    LoadSceneResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LoadSceneResponseDefaultTypeInternal _LoadSceneResponse_default_instance_;
PROTOBUF_CONSTEXPR LogErrorRequest::LogErrorRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.key_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct LogErrorRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LogErrorRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LogErrorRequestDefaultTypeInternal() {}
  union {
    LogErrorRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LogErrorRequestDefaultTypeInternal _LogErrorRequest_default_instance_;
PROTOBUF_CONSTEXPR VoicePreviewRequest::VoicePreviewRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.text_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.emotions_)*/nullptr
  , /*decltype(_impl_.voice_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct VoicePreviewRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VoicePreviewRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~VoicePreviewRequestDefaultTypeInternal() {}
  union {
    VoicePreviewRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VoicePreviewRequestDefaultTypeInternal _VoicePreviewRequest_default_instance_;
PROTOBUF_CONSTEXPR VoicePreviewResponse::VoicePreviewResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.audio_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct VoicePreviewResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VoicePreviewResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~VoicePreviewResponseDefaultTypeInternal() {}
  union {
    VoicePreviewResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VoicePreviewResponseDefaultTypeInternal _VoicePreviewResponse_default_instance_;
PROTOBUF_CONSTEXPR ListBaseVoicesRequest::ListBaseVoicesRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.tts_types_)*/{}
  , /*decltype(_impl_._tts_types_cached_byte_size_)*/{0}
  , /*decltype(_impl_.language_code_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ListBaseVoicesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListBaseVoicesRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListBaseVoicesRequestDefaultTypeInternal() {}
  union {
    ListBaseVoicesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListBaseVoicesRequestDefaultTypeInternal _ListBaseVoicesRequest_default_instance_;
PROTOBUF_CONSTEXPR ListBaseVoicesResponce_BaseVoice::ListBaseVoicesResponce_BaseVoice(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.language_codes_)*/{}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.gender_)*/0
  , /*decltype(_impl_.naturalsampleratehertz_)*/0
  , /*decltype(_impl_.age_)*/0
  , /*decltype(_impl_.tts_metadata_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct ListBaseVoicesResponce_BaseVoiceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListBaseVoicesResponce_BaseVoiceDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListBaseVoicesResponce_BaseVoiceDefaultTypeInternal() {}
  union {
    ListBaseVoicesResponce_BaseVoice _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListBaseVoicesResponce_BaseVoiceDefaultTypeInternal _ListBaseVoicesResponce_BaseVoice_default_instance_;
PROTOBUF_CONSTEXPR ListBaseVoicesResponce::ListBaseVoicesResponce(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.googlevoices_)*/{}
  , /*decltype(_impl_.inworldvoices_)*/{}
  , /*decltype(_impl_.elevenlabsvoices_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ListBaseVoicesResponceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListBaseVoicesResponceDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListBaseVoicesResponceDefaultTypeInternal() {}
  union {
    ListBaseVoicesResponce _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListBaseVoicesResponceDefaultTypeInternal _ListBaseVoicesResponce_default_instance_;
PROTOBUF_CONSTEXPR AccessToken::AccessToken(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.token_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.type_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.session_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.expiration_time_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AccessTokenDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AccessTokenDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AccessTokenDefaultTypeInternal() {}
  union {
    AccessToken _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AccessTokenDefaultTypeInternal _AccessToken_default_instance_;
PROTOBUF_CONSTEXPR GenerateTokenRequest::GenerateTokenRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.resources_)*/{}
  , /*decltype(_impl_.key_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GenerateTokenRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GenerateTokenRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GenerateTokenRequestDefaultTypeInternal() {}
  union {
    GenerateTokenRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GenerateTokenRequestDefaultTypeInternal _GenerateTokenRequest_default_instance_;
PROTOBUF_CONSTEXPR ActorRelations_Relation::ActorRelations_Relation(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.type_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.label_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ActorRelations_RelationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ActorRelations_RelationDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ActorRelations_RelationDefaultTypeInternal() {}
  union {
    ActorRelations_Relation _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ActorRelations_RelationDefaultTypeInternal _ActorRelations_Relation_default_instance_;
PROTOBUF_CONSTEXPR ActorRelations::ActorRelations(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.relations_)*/{}
  , /*decltype(_impl_.actor_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ActorRelationsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ActorRelationsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ActorRelationsDefaultTypeInternal() {}
  union {
    ActorRelations _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ActorRelationsDefaultTypeInternal _ActorRelations_default_instance_;
}  // namespace engine
}  // namespace inworld
}  // namespace ai
static ::_pb::Metadata file_level_metadata_world_2dengine_2eproto[32];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_world_2dengine_2eproto[2];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_world_2dengine_2eproto = nullptr;

const uint32_t TableStruct_world_2dengine_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::CapabilitiesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::CapabilitiesRequest, _impl_.audio_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::CapabilitiesRequest, _impl_.text_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::CapabilitiesRequest, _impl_.gestures_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::CapabilitiesRequest, _impl_.interruptions_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::CapabilitiesRequest, _impl_.triggers_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::CapabilitiesRequest, _impl_.emotions_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::CapabilitiesRequest, _impl_.animations_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::CapabilitiesRequest, _impl_.turn_based_stt_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::CapabilitiesRequest, _impl_.emotion_streaming_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::CapabilitiesRequest, _impl_.silence_events_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::CapabilitiesRequest, _impl_.phoneme_info_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::CapabilitiesRequest, _impl_.continuation_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::CapabilitiesRequest, _impl_.session_cancellation_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::CapabilitiesRequest, _impl_.narrated_actions_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::CapabilitiesRequest, _impl_.regenerate_response_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::CapabilitiesRequest, _impl_.load_scene_in_session_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::CapabilitiesRequest, _impl_.relations_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::CapabilitiesRequest, _impl_.debug_info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::UserRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::UserRequest, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::UserRequest, _impl_.id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::ClientRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::ClientRequest, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::ClientRequest, _impl_.version_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::CreateWorldRequest_CreateAgentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::CreateWorldRequest_CreateAgentRequest, _impl_.brain_name_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::CreateWorldRequest_CreateAgentRequest, _impl_.language_code_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::CreateWorldRequest_CreateAgentRequest, _impl_.voice_preset_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::CreateWorldRequest_ClientRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::CreateWorldRequest_ClientRequest, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::CreateWorldRequest_ClientRequest, _impl_.version_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::CreateWorldRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::CreateWorldRequest, _impl_.proto_world_name_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::CreateWorldRequest, _impl_.create_agent_requests_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::CreateWorldRequest, _impl_.capabilities_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::CreateWorldRequest, _impl_.user_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::CreateWorldRequest, _impl_.client_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::CreateWorldResponse_Agent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::CreateWorldResponse_Agent, _impl_.agent_id_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::CreateWorldResponse_Agent, _impl_.brain_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::CreateWorldResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::CreateWorldResponse, _impl_.agents_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::CreateWorldResponse, _impl_.key_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::LoadSceneRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::LoadSceneRequest, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::LoadSceneRequest, _impl_.capabilities_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::LoadSceneRequest, _impl_.user_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::LoadSceneRequest, _impl_.client_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::LoadSceneRequest, _impl_.audio_settings_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::LoadSceneRequest, _impl_.user_settings_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::LoadSceneRequest, _impl_.session_continuation_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::AudioSettings, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::AudioSettings, _impl_.stt_sample_rate_hertz_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::AudioSettings, _impl_.tts_sample_rate_hertz_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::UserSettings_PlayerProfile_PlayerField, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::UserSettings_PlayerProfile_PlayerField, _impl_.field_id_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::UserSettings_PlayerProfile_PlayerField, _impl_.field_value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::UserSettings_PlayerProfile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::UserSettings_PlayerProfile, _impl_.fields_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::UserSettings, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::UserSettings, _impl_.view_transcript_consent_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::UserSettings, _impl_.player_profile_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::SessionContinuation_ContinuationInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::SessionContinuation_ContinuationInfo, _impl_.millis_passed_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::SessionContinuation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::SessionContinuation, _impl_.continuation_info_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::SessionContinuation, _impl_.previous_dialog_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::SessionContinuation, _impl_.previous_state_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::PreviousDialog_Phrase, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::PreviousDialog_Phrase, _impl_.talker_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::PreviousDialog_Phrase, _impl_.phrase_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::PreviousDialog, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::PreviousDialog, _impl_.phrases_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::PreviousState_StateHolder, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::PreviousState_StateHolder, _impl_.brain_name_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::PreviousState_StateHolder, _impl_.state_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::PreviousState_StateHolder, _impl_.previous_dialog_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::PreviousState_StateHolder, _impl_.packets_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::PreviousState_StateHolder, _impl_.relations_to_actors_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::PreviousState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::PreviousState, _impl_.state_holders_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::LoadSceneResponse_Agent_CharacterAssets, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::LoadSceneResponse_Agent_CharacterAssets, _impl_.rpm_model_uri_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::LoadSceneResponse_Agent_CharacterAssets, _impl_.rpm_image_uri_portrait_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::LoadSceneResponse_Agent_CharacterAssets, _impl_.rpm_image_uri_posture_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::LoadSceneResponse_Agent_CharacterAssets, _impl_.avatar_img_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::LoadSceneResponse_Agent_CharacterAssets, _impl_.avatar_img_original_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::LoadSceneResponse_Agent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::LoadSceneResponse_Agent, _impl_.agent_id_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::LoadSceneResponse_Agent, _impl_.brain_name_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::LoadSceneResponse_Agent, _impl_.given_name_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::LoadSceneResponse_Agent, _impl_.character_assets_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::LoadSceneResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::LoadSceneResponse, _impl_.agents_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::LoadSceneResponse, _impl_.key_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::LoadSceneResponse, _impl_.previous_state_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::LogErrorRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::LogErrorRequest, _impl_.key_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::LogErrorRequest, _impl_.message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::VoicePreviewRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::VoicePreviewRequest, _impl_.text_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::VoicePreviewRequest, _impl_.emotions_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::VoicePreviewRequest, _impl_.voice_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::VoicePreviewResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::VoicePreviewResponse, _impl_.audio_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::ListBaseVoicesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::ListBaseVoicesRequest, _impl_.language_code_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::ListBaseVoicesRequest, _impl_.tts_types_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::ListBaseVoicesResponce_BaseVoice, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::ListBaseVoicesResponce_BaseVoice, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::ListBaseVoicesResponce_BaseVoice, _impl_.language_codes_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::ListBaseVoicesResponce_BaseVoice, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::ListBaseVoicesResponce_BaseVoice, _impl_.gender_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::ListBaseVoicesResponce_BaseVoice, _impl_.naturalsampleratehertz_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::ListBaseVoicesResponce_BaseVoice, _impl_.age_),
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::ListBaseVoicesResponce_BaseVoice, _impl_.tts_metadata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::ListBaseVoicesResponce, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::ListBaseVoicesResponce, _impl_.googlevoices_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::ListBaseVoicesResponce, _impl_.inworldvoices_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::ListBaseVoicesResponce, _impl_.elevenlabsvoices_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::AccessToken, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::AccessToken, _impl_.token_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::AccessToken, _impl_.type_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::AccessToken, _impl_.expiration_time_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::AccessToken, _impl_.session_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::GenerateTokenRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::GenerateTokenRequest, _impl_.key_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::GenerateTokenRequest, _impl_.resources_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::ActorRelations_Relation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::ActorRelations_Relation, _impl_.type_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::ActorRelations_Relation, _impl_.label_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::ActorRelations, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::ActorRelations, _impl_.actor_id_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::ActorRelations, _impl_.relations_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::ai::inworld::engine::CapabilitiesRequest)},
  { 24, -1, -1, sizeof(::ai::inworld::engine::UserRequest)},
  { 32, -1, -1, sizeof(::ai::inworld::engine::ClientRequest)},
  { 40, -1, -1, sizeof(::ai::inworld::engine::CreateWorldRequest_CreateAgentRequest)},
  { 49, -1, -1, sizeof(::ai::inworld::engine::CreateWorldRequest_ClientRequest)},
  { 57, -1, -1, sizeof(::ai::inworld::engine::CreateWorldRequest)},
  { 68, -1, -1, sizeof(::ai::inworld::engine::CreateWorldResponse_Agent)},
  { 76, -1, -1, sizeof(::ai::inworld::engine::CreateWorldResponse)},
  { 84, -1, -1, sizeof(::ai::inworld::engine::LoadSceneRequest)},
  { 97, -1, -1, sizeof(::ai::inworld::engine::AudioSettings)},
  { 105, -1, -1, sizeof(::ai::inworld::engine::UserSettings_PlayerProfile_PlayerField)},
  { 113, -1, -1, sizeof(::ai::inworld::engine::UserSettings_PlayerProfile)},
  { 120, -1, -1, sizeof(::ai::inworld::engine::UserSettings)},
  { 128, -1, -1, sizeof(::ai::inworld::engine::SessionContinuation_ContinuationInfo)},
  { 135, -1, -1, sizeof(::ai::inworld::engine::SessionContinuation)},
  { 144, -1, -1, sizeof(::ai::inworld::engine::PreviousDialog_Phrase)},
  { 152, -1, -1, sizeof(::ai::inworld::engine::PreviousDialog)},
  { 159, -1, -1, sizeof(::ai::inworld::engine::PreviousState_StateHolder)},
  { 170, -1, -1, sizeof(::ai::inworld::engine::PreviousState)},
  { 177, -1, -1, sizeof(::ai::inworld::engine::LoadSceneResponse_Agent_CharacterAssets)},
  { 188, -1, -1, sizeof(::ai::inworld::engine::LoadSceneResponse_Agent)},
  { 198, -1, -1, sizeof(::ai::inworld::engine::LoadSceneResponse)},
  { 207, -1, -1, sizeof(::ai::inworld::engine::LogErrorRequest)},
  { 215, -1, -1, sizeof(::ai::inworld::engine::VoicePreviewRequest)},
  { 224, -1, -1, sizeof(::ai::inworld::engine::VoicePreviewResponse)},
  { 231, -1, -1, sizeof(::ai::inworld::engine::ListBaseVoicesRequest)},
  { 239, -1, -1, sizeof(::ai::inworld::engine::ListBaseVoicesResponce_BaseVoice)},
  { 252, -1, -1, sizeof(::ai::inworld::engine::ListBaseVoicesResponce)},
  { 261, -1, -1, sizeof(::ai::inworld::engine::AccessToken)},
  { 271, -1, -1, sizeof(::ai::inworld::engine::GenerateTokenRequest)},
  { 279, -1, -1, sizeof(::ai::inworld::engine::ActorRelations_Relation)},
  { 287, -1, -1, sizeof(::ai::inworld::engine::ActorRelations)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::ai::inworld::engine::_CapabilitiesRequest_default_instance_._instance,
  &::ai::inworld::engine::_UserRequest_default_instance_._instance,
  &::ai::inworld::engine::_ClientRequest_default_instance_._instance,
  &::ai::inworld::engine::_CreateWorldRequest_CreateAgentRequest_default_instance_._instance,
  &::ai::inworld::engine::_CreateWorldRequest_ClientRequest_default_instance_._instance,
  &::ai::inworld::engine::_CreateWorldRequest_default_instance_._instance,
  &::ai::inworld::engine::_CreateWorldResponse_Agent_default_instance_._instance,
  &::ai::inworld::engine::_CreateWorldResponse_default_instance_._instance,
  &::ai::inworld::engine::_LoadSceneRequest_default_instance_._instance,
  &::ai::inworld::engine::_AudioSettings_default_instance_._instance,
  &::ai::inworld::engine::_UserSettings_PlayerProfile_PlayerField_default_instance_._instance,
  &::ai::inworld::engine::_UserSettings_PlayerProfile_default_instance_._instance,
  &::ai::inworld::engine::_UserSettings_default_instance_._instance,
  &::ai::inworld::engine::_SessionContinuation_ContinuationInfo_default_instance_._instance,
  &::ai::inworld::engine::_SessionContinuation_default_instance_._instance,
  &::ai::inworld::engine::_PreviousDialog_Phrase_default_instance_._instance,
  &::ai::inworld::engine::_PreviousDialog_default_instance_._instance,
  &::ai::inworld::engine::_PreviousState_StateHolder_default_instance_._instance,
  &::ai::inworld::engine::_PreviousState_default_instance_._instance,
  &::ai::inworld::engine::_LoadSceneResponse_Agent_CharacterAssets_default_instance_._instance,
  &::ai::inworld::engine::_LoadSceneResponse_Agent_default_instance_._instance,
  &::ai::inworld::engine::_LoadSceneResponse_default_instance_._instance,
  &::ai::inworld::engine::_LogErrorRequest_default_instance_._instance,
  &::ai::inworld::engine::_VoicePreviewRequest_default_instance_._instance,
  &::ai::inworld::engine::_VoicePreviewResponse_default_instance_._instance,
  &::ai::inworld::engine::_ListBaseVoicesRequest_default_instance_._instance,
  &::ai::inworld::engine::_ListBaseVoicesResponce_BaseVoice_default_instance_._instance,
  &::ai::inworld::engine::_ListBaseVoicesResponce_default_instance_._instance,
  &::ai::inworld::engine::_AccessToken_default_instance_._instance,
  &::ai::inworld::engine::_GenerateTokenRequest_default_instance_._instance,
  &::ai::inworld::engine::_ActorRelations_Relation_default_instance_._instance,
  &::ai::inworld::engine::_ActorRelations_default_instance_._instance,
};

const char descriptor_table_protodef_world_2dengine_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\022world-engine.proto\022\021ai.inworld.engine\032"
  "\034google/api/annotations.proto\032\033google/pr"
  "otobuf/empty.proto\032\037google/protobuf/time"
  "stamp.proto\032\rpackets.proto\032\014voices.proto"
  "\"\245\003\n\023CapabilitiesRequest\022\r\n\005audio\030\001 \001(\010\022"
  "\014\n\004text\030\002 \001(\010\022\020\n\010gestures\030\003 \001(\010\022\025\n\rinter"
  "ruptions\030\004 \001(\010\022\020\n\010triggers\030\005 \001(\010\022\020\n\010emot"
  "ions\030\006 \001(\010\022\022\n\nanimations\030\007 \001(\010\022\026\n\016turn_b"
  "ased_stt\030\010 \001(\010\022\031\n\021emotion_streaming\030\t \001("
  "\010\022\026\n\016silence_events\030\n \001(\010\022\024\n\014phoneme_inf"
  "o\030\013 \001(\010\022\024\n\014continuation\030\014 \001(\010\022\034\n\024session"
  "_cancellation\030\r \001(\010\022\030\n\020narrated_actions\030"
  "\016 \001(\010\022\033\n\023regenerate_response\030\017 \001(\010\022\035\n\025lo"
  "ad_scene_in_session\030\020 \001(\010\022\021\n\trelations\030\021"
  " \001(\010\022\022\n\ndebug_info\030\022 \001(\010\"\'\n\013UserRequest\022"
  "\014\n\004name\030\001 \001(\t\022\n\n\002id\030\002 \001(\t\",\n\rClientReque"
  "st\022\n\n\002id\030\001 \001(\t\022\017\n\007version\030\002 \001(\t\"\341\003\n\022Crea"
  "teWorldRequest\022\030\n\020proto_world_name\030\001 \001(\t"
  "\022W\n\025create_agent_requests\030\002 \003(\01328.ai.inw"
  "orld.engine.CreateWorldRequest.CreateAge"
  "ntRequest\022<\n\014capabilities\030\003 \001(\0132&.ai.inw"
  "orld.engine.CapabilitiesRequest\022,\n\004user\030"
  "\004 \001(\0132\036.ai.inworld.engine.UserRequest\022C\n"
  "\006client\030\005 \001(\01323.ai.inworld.engine.Create"
  "WorldRequest.ClientRequest\032u\n\022CreateAgen"
  "tRequest\022\022\n\nbrain_name\030\001 \001(\t\022\025\n\rlanguage"
  "_code\030\002 \001(\t\0224\n\014voice_preset\030\003 \001(\0162\036.ai.i"
  "nworld.engine.VoicePreset\032,\n\rClientReque"
  "st\022\n\n\002id\030\001 \001(\t\022\017\n\007version\030\002 \001(\t:\002\030\001\"\217\001\n\023"
  "CreateWorldResponse\022<\n\006agents\030\001 \003(\0132,.ai"
  ".inworld.engine.CreateWorldResponse.Agen"
  "t\022\013\n\003key\030\003 \001(\t\032-\n\005Agent\022\020\n\010agent_id\030\001 \001("
  "\t\022\022\n\nbrain_name\030\002 \001(\t\"\366\002\n\020LoadSceneReque"
  "st\022\014\n\004name\030\001 \001(\t\022<\n\014capabilities\030\002 \001(\0132&"
  ".ai.inworld.engine.CapabilitiesRequest\022,"
  "\n\004user\030\003 \001(\0132\036.ai.inworld.engine.UserReq"
  "uest\0220\n\006client\030\004 \001(\0132 .ai.inworld.engine"
  ".ClientRequest\0228\n\016audio_settings\030\005 \001(\0132 "
  ".ai.inworld.engine.AudioSettings\0226\n\ruser"
  "_settings\030\006 \001(\0132\037.ai.inworld.engine.User"
  "Settings\022D\n\024session_continuation\030\007 \001(\0132&"
  ".ai.inworld.engine.SessionContinuation\"M"
  "\n\rAudioSettings\022\035\n\025stt_sample_rate_hertz"
  "\030\001 \001(\r\022\035\n\025tts_sample_rate_hertz\030\002 \001(\r\"\211\002"
  "\n\014UserSettings\022\037\n\027view_transcript_consen"
  "t\030\001 \001(\010\022E\n\016player_profile\030\002 \001(\0132-.ai.inw"
  "orld.engine.UserSettings.PlayerProfile\032\220"
  "\001\n\rPlayerProfile\022I\n\006fields\030\003 \003(\01329.ai.in"
  "world.engine.UserSettings.PlayerProfile."
  "PlayerField\0324\n\013PlayerField\022\020\n\010field_id\030\001"
  " \001(\t\022\023\n\013field_value\030\002 \001(\t\"\350\001\n\023SessionCon"
  "tinuation\022R\n\021continuation_info\030\001 \001(\01327.a"
  "i.inworld.engine.SessionContinuation.Con"
  "tinuationInfo\022:\n\017previous_dialog\030\002 \001(\0132!"
  ".ai.inworld.engine.PreviousDialog\022\026\n\016pre"
  "vious_state\030\003 \001(\014\032)\n\020ContinuationInfo\022\025\n"
  "\rmillis_passed\030\001 \001(\003\"\347\001\n\016PreviousDialog\022"
  "9\n\007phrases\030\001 \003(\0132(.ai.inworld.engine.Pre"
  "viousDialog.Phrase\032]\n\006Phrase\022C\n\006talker\030\001"
  " \001(\01623.ai.inworld.engine.PreviousDialog."
  "DialogParticipant\022\016\n\006phrase\030\002 \001(\t\";\n\021Dia"
  "logParticipant\022\013\n\007UNKNOWN\020\000\022\n\n\006PLAYER\020\001\022"
  "\r\n\tCHARACTER\020\002\"\273\002\n\rPreviousState\022C\n\rstat"
  "e_holders\030\001 \003(\0132,.ai.inworld.engine.Prev"
  "iousState.StateHolder\032\344\001\n\013StateHolder\022\022\n"
  "\nbrain_name\030\001 \001(\t\022\r\n\005state\030\002 \001(\014\022>\n\017prev"
  "ious_dialog\030\003 \001(\0132!.ai.inworld.engine.Pr"
  "eviousDialogB\002\030\001\0222\n\007packets\030\004 \003(\0132!.ai.i"
  "nworld.packets.InworldPacket\022>\n\023relation"
  "s_to_actors\030\005 \003(\0132!.ai.inworld.engine.Ac"
  "torRelations\"\313\003\n\021LoadSceneResponse\022:\n\006ag"
  "ents\030\001 \003(\0132*.ai.inworld.engine.LoadScene"
  "Response.Agent\022\013\n\003key\030\002 \001(\t\0228\n\016previous_"
  "state\030\003 \001(\0132 .ai.inworld.engine.Previous"
  "State\032\262\002\n\005Agent\022\020\n\010agent_id\030\001 \001(\t\022\022\n\nbra"
  "in_name\030\002 \001(\t\022\022\n\ngiven_name\030\003 \001(\t\022T\n\020cha"
  "racter_assets\030\004 \001(\0132:.ai.inworld.engine."
  "LoadSceneResponse.Agent.CharacterAssets\032"
  "\230\001\n\017CharacterAssets\022\025\n\rrpm_model_uri\030\001 \001"
  "(\t\022\036\n\026rpm_image_uri_portrait\030\002 \001(\t\022\035\n\025rp"
  "m_image_uri_posture\030\003 \001(\t\022\022\n\navatar_img\030"
  "\004 \001(\t\022\033\n\023avatar_img_original\030\005 \001(\t\"/\n\017Lo"
  "gErrorRequest\022\013\n\003key\030\001 \001(\t\022\017\n\007message\030\002 "
  "\001(\t\"\206\001\n\023VoicePreviewRequest\022\014\n\004text\030\001 \001("
  "\t\0222\n\010emotions\030\002 \001(\0132 .ai.inworld.packets"
  ".EmotionEvent\022\'\n\005voice\030\003 \001(\0132\030.ai.inworl"
  "d.voices.VoiceJ\004\010\004\020\005\"%\n\024VoicePreviewResp"
  "onse\022\r\n\005audio\030\001 \001(\014\"]\n\025ListBaseVoicesReq"
  "uest\022\025\n\rlanguage_code\030\001 \001(\t\022-\n\ttts_types"
  "\030\002 \003(\0162\032.ai.inworld.voices.TTSType\"\376\003\n\026L"
  "istBaseVoicesResponce\022I\n\014googleVoices\030\001 "
  "\003(\01323.ai.inworld.engine.ListBaseVoicesRe"
  "sponce.BaseVoice\022J\n\rinworldVoices\030\002 \003(\0132"
  "3.ai.inworld.engine.ListBaseVoicesRespon"
  "ce.BaseVoice\022M\n\020elevenLabsVoices\030\003 \003(\01323"
  ".ai.inworld.engine.ListBaseVoicesResponc"
  "e.BaseVoice\032\375\001\n\tBaseVoice\022\026\n\016language_co"
  "des\030\001 \003(\t\022\014\n\004name\030\002 \001(\t\022)\n\006gender\030\003 \001(\0162"
  "\031.ai.inworld.voices.Gender\022\036\n\026naturalSam"
  "pleRateHertz\030\004 \001(\005\022#\n\003age\030\005 \001(\0162\026.ai.inw"
  "orld.voices.Age\022J\n\023elevenlabs_metadata\030d"
  " \001(\0132+.ai.inworld.voices.Voice.ElevenLab"
  "sMetadataH\000B\016\n\014tts_metadata\"s\n\013AccessTok"
  "en\022\r\n\005token\030\001 \001(\t\022\014\n\004type\030\002 \001(\t\0223\n\017expir"
  "ation_time\030\003 \001(\0132\032.google.protobuf.Times"
  "tamp\022\022\n\nsession_id\030\004 \001(\t\"6\n\024GenerateToke"
  "nRequest\022\013\n\003key\030\001 \001(\t\022\021\n\tresources\030\002 \003(\t"
  "\"\212\001\n\016ActorRelations\022\020\n\010actor_id\030\001 \001(\t\022=\n"
  "\trelations\030\002 \003(\0132*.ai.inworld.engine.Act"
  "orRelations.Relation\032\'\n\010Relation\022\014\n\004type"
  "\030\001 \001(\t\022\r\n\005label\030\002 \001(\t*\251\t\n\013VoicePreset\022\034\n"
  "\030VOICE_PRESET_UNSPECIFIED\020\000\022\031\n\025VOICE_PRE"
  "SET_FEMALE_1\020\001\022\031\n\025VOICE_PRESET_FEMALE_2\020"
  "\002\022\031\n\025VOICE_PRESET_FEMALE_3\020\003\022\031\n\025VOICE_PR"
  "ESET_FEMALE_4\020\004\022\031\n\025VOICE_PRESET_FEMALE_5"
  "\020\005\022\027\n\023VOICE_PRESET_MALE_1\020\006\022\027\n\023VOICE_PRE"
  "SET_MALE_2\020\007\022\027\n\023VOICE_PRESET_MALE_3\020\010\022\027\n"
  "\023VOICE_PRESET_MALE_4\020\t\022\027\n\023VOICE_PRESET_M"
  "ALE_5\020\n\022\037\n\033INWORLD_VOICE_PRESET_MALE_1\020\013"
  "\022\037\n\033INWORLD_VOICE_PRESET_MALE_2\020\014\022!\n\035INW"
  "ORLD_VOICE_PRESET_FEMALE_1\020\r\022!\n\035INWORLD_"
  "VOICE_PRESET_FEMALE_2\020\016\022\037\n\033INWORLD_VOICE"
  "_PRESET_MALE_3\020\017\022\037\n\033INWORLD_VOICE_PRESET"
  "_MALE_4\020\020\022\037\n\033INWORLD_VOICE_PRESET_MALE_5"
  "\020\021\022!\n\035INWORLD_VOICE_PRESET_FEMALE_3\020\022\022!\n"
  "\035INWORLD_VOICE_PRESET_FEMALE_4\020\023\022%\n!INWO"
  "RLD_VOICE_PRESET_ROBOT_MALE_1\020\024\022%\n!INWOR"
  "LD_VOICE_PRESET_ROBOT_MALE_2\020\025\022%\n!INWORL"
  "D_VOICE_PRESET_ROBOT_MALE_3\020\026\022%\n!INWORLD"
  "_VOICE_PRESET_ROBOT_MALE_4\020\027\022%\n!INWORLD_"
  "VOICE_PRESET_ROBOT_MALE_5\020\030\022\'\n#INWORLD_V"
  "OICE_PRESET_ROBOT_FEMALE_1\020\031\022\'\n#INWORLD_"
  "VOICE_PRESET_ROBOT_FEMALE_2\020\032\022\'\n#INWORLD"
  "_VOICE_PRESET_ROBOT_FEMALE_3\020\033\022\'\n#INWORL"
  "D_VOICE_PRESET_ROBOT_FEMALE_4\020\034\022\036\n\032INWOR"
  "LD_VOICE_PRESET_SPIKE\020\035\022!\n\035INWORLD_VOICE"
  "_PRESET_TWILIGHT\020\036\022#\n\037INWORLD_VOICE_PRES"
  "ET_FLUTTERSHY\020\037\022$\n INWORLD_VOICE_PRESET_"
  "ROBOT_SPIKE\020 \022\'\n#INWORLD_VOICE_PRESET_RO"
  "BOT_TWILIGHT\020!\022)\n%INWORLD_VOICE_PRESET_R"
  "OBOT_FLUTTERSHY\020\"2\270\007\n\013WorldEngine\022\177\n\007Ses"
  "sion\022!.ai.inworld.packets.InworldPacket\032"
  "!.ai.inworld.packets.InworldPacket\"*\202\323\344\223"
  "\002$\022\023/v1/session/defaultZ\r\022\013/v1/session(\001"
  "0\001\022\206\001\n\013CreateWorld\022%.ai.inworld.engine.C"
  "reateWorldRequest\032&.ai.inworld.engine.Cr"
  "eateWorldResponse\"(\202\323\344\223\002\"\"\035/v1/worlds/{p"
  "roto_world_name}:\001*\022\270\001\n\tLoadScene\022#.ai.i"
  "nworld.engine.LoadSceneRequest\032$.ai.inwo"
  "rld.engine.LoadSceneResponse\"`\202\323\344\223\002Z\"%/v"
  "1/{name=workspaces/*/scenes/*}:load:\001*Z."
  "\")/v1/{name=workspaces/*/characters/*}:l"
  "oad:\001*\022`\n\010LogError\022\".ai.inworld.engine.L"
  "ogErrorRequest\032\026.google.protobuf.Empty\"\030"
  "\202\323\344\223\002\022\"\r/v1/log:error:\001*\022}\n\014VoicePreview"
  "\022&.ai.inworld.engine.VoicePreviewRequest"
  "\032\'.ai.inworld.engine.VoicePreviewRespons"
  "e\"\034\202\323\344\223\002\026\"\021/v1/voice:preview:\001*\022}\n\016ListB"
  "aseVoices\022(.ai.inworld.engine.ListBaseVo"
  "icesRequest\032).ai.inworld.engine.ListBase"
  "VoicesResponce\"\026\202\323\344\223\002\020\022\016/v1/voice:base\022\203"
  "\001\n\rGenerateToken\022\'.ai.inworld.engine.Gen"
  "erateTokenRequest\032\036.ai.inworld.engine.Ac"
  "cessToken\")\202\323\344\223\002#\"\036/auth/v1/tokens/token"
  ":generate:\001*B\210\001\n\017ai.inworld.grpcB\027WorldE"
  "ngineGrpcProtocolZMgithub.com/inworld-ai"
  "/inworld/serving/grpc-gateway/build/prot"
  "o/engine/v1alpha\252\002\014Inworld.Grpcb\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_world_2dengine_2eproto_deps[5] = {
  &::descriptor_table_google_2fapi_2fannotations_2eproto,
  &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
  &::descriptor_table_packets_2eproto,
  &::descriptor_table_voices_2eproto,
};
static ::_pbi::once_flag descriptor_table_world_2dengine_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_world_2dengine_2eproto = {
    false, false, 6719, descriptor_table_protodef_world_2dengine_2eproto,
    "world-engine.proto",
    &descriptor_table_world_2dengine_2eproto_once, descriptor_table_world_2dengine_2eproto_deps, 5, 32,
    schemas, file_default_instances, TableStruct_world_2dengine_2eproto::offsets,
    file_level_metadata_world_2dengine_2eproto, file_level_enum_descriptors_world_2dengine_2eproto,
    file_level_service_descriptors_world_2dengine_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_world_2dengine_2eproto_getter() {
  return &descriptor_table_world_2dengine_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_world_2dengine_2eproto(&descriptor_table_world_2dengine_2eproto);
namespace ai {
namespace inworld {
namespace engine {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PreviousDialog_DialogParticipant_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_world_2dengine_2eproto);
  return file_level_enum_descriptors_world_2dengine_2eproto[0];
}
bool PreviousDialog_DialogParticipant_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr PreviousDialog_DialogParticipant PreviousDialog::UNKNOWN;
constexpr PreviousDialog_DialogParticipant PreviousDialog::PLAYER;
constexpr PreviousDialog_DialogParticipant PreviousDialog::CHARACTER;
constexpr PreviousDialog_DialogParticipant PreviousDialog::DialogParticipant_MIN;
constexpr PreviousDialog_DialogParticipant PreviousDialog::DialogParticipant_MAX;
constexpr int PreviousDialog::DialogParticipant_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* VoicePreset_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_world_2dengine_2eproto);
  return file_level_enum_descriptors_world_2dengine_2eproto[1];
}
bool VoicePreset_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class CapabilitiesRequest::_Internal {
 public:
};

CapabilitiesRequest::CapabilitiesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.engine.CapabilitiesRequest)
}
CapabilitiesRequest::CapabilitiesRequest(const CapabilitiesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CapabilitiesRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.audio_){}
    , decltype(_impl_.text_){}
    , decltype(_impl_.gestures_){}
    , decltype(_impl_.interruptions_){}
    , decltype(_impl_.triggers_){}
    , decltype(_impl_.emotions_){}
    , decltype(_impl_.animations_){}
    , decltype(_impl_.turn_based_stt_){}
    , decltype(_impl_.emotion_streaming_){}
    , decltype(_impl_.silence_events_){}
    , decltype(_impl_.phoneme_info_){}
    , decltype(_impl_.continuation_){}
    , decltype(_impl_.session_cancellation_){}
    , decltype(_impl_.narrated_actions_){}
    , decltype(_impl_.regenerate_response_){}
    , decltype(_impl_.load_scene_in_session_){}
    , decltype(_impl_.relations_){}
    , decltype(_impl_.debug_info_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.audio_, &from._impl_.audio_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.debug_info_) -
    reinterpret_cast<char*>(&_impl_.audio_)) + sizeof(_impl_.debug_info_));
  // @@protoc_insertion_point(copy_constructor:ai.inworld.engine.CapabilitiesRequest)
}

inline void CapabilitiesRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.audio_){false}
    , decltype(_impl_.text_){false}
    , decltype(_impl_.gestures_){false}
    , decltype(_impl_.interruptions_){false}
    , decltype(_impl_.triggers_){false}
    , decltype(_impl_.emotions_){false}
    , decltype(_impl_.animations_){false}
    , decltype(_impl_.turn_based_stt_){false}
    , decltype(_impl_.emotion_streaming_){false}
    , decltype(_impl_.silence_events_){false}
    , decltype(_impl_.phoneme_info_){false}
    , decltype(_impl_.continuation_){false}
    , decltype(_impl_.session_cancellation_){false}
    , decltype(_impl_.narrated_actions_){false}
    , decltype(_impl_.regenerate_response_){false}
    , decltype(_impl_.load_scene_in_session_){false}
    , decltype(_impl_.relations_){false}
    , decltype(_impl_.debug_info_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CapabilitiesRequest::~CapabilitiesRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.engine.CapabilitiesRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CapabilitiesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CapabilitiesRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CapabilitiesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.engine.CapabilitiesRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.audio_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.debug_info_) -
      reinterpret_cast<char*>(&_impl_.audio_)) + sizeof(_impl_.debug_info_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CapabilitiesRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool audio = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.audio_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool text = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.text_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool gestures = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.gestures_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool interruptions = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.interruptions_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool triggers = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.triggers_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool emotions = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _impl_.emotions_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool animations = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _impl_.animations_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool turn_based_stt = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _impl_.turn_based_stt_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool emotion_streaming = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          _impl_.emotion_streaming_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool silence_events = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          _impl_.silence_events_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool phoneme_info = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 88)) {
          _impl_.phoneme_info_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool continuation = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          _impl_.continuation_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool session_cancellation = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 104)) {
          _impl_.session_cancellation_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool narrated_actions = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          _impl_.narrated_actions_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool regenerate_response = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 120)) {
          _impl_.regenerate_response_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool load_scene_in_session = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 128)) {
          _impl_.load_scene_in_session_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool relations = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 136)) {
          _impl_.relations_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool debug_info = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 144)) {
          _impl_.debug_info_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CapabilitiesRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.engine.CapabilitiesRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool audio = 1;
  if (this->_internal_audio() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_audio(), target);
  }

  // bool text = 2;
  if (this->_internal_text() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_text(), target);
  }

  // bool gestures = 3;
  if (this->_internal_gestures() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_gestures(), target);
  }

  // bool interruptions = 4;
  if (this->_internal_interruptions() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_interruptions(), target);
  }

  // bool triggers = 5;
  if (this->_internal_triggers() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(5, this->_internal_triggers(), target);
  }

  // bool emotions = 6;
  if (this->_internal_emotions() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(6, this->_internal_emotions(), target);
  }

  // bool animations = 7;
  if (this->_internal_animations() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(7, this->_internal_animations(), target);
  }

  // bool turn_based_stt = 8;
  if (this->_internal_turn_based_stt() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(8, this->_internal_turn_based_stt(), target);
  }

  // bool emotion_streaming = 9;
  if (this->_internal_emotion_streaming() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(9, this->_internal_emotion_streaming(), target);
  }

  // bool silence_events = 10;
  if (this->_internal_silence_events() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(10, this->_internal_silence_events(), target);
  }

  // bool phoneme_info = 11;
  if (this->_internal_phoneme_info() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(11, this->_internal_phoneme_info(), target);
  }

  // bool continuation = 12;
  if (this->_internal_continuation() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(12, this->_internal_continuation(), target);
  }

  // bool session_cancellation = 13;
  if (this->_internal_session_cancellation() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(13, this->_internal_session_cancellation(), target);
  }

  // bool narrated_actions = 14;
  if (this->_internal_narrated_actions() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(14, this->_internal_narrated_actions(), target);
  }

  // bool regenerate_response = 15;
  if (this->_internal_regenerate_response() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(15, this->_internal_regenerate_response(), target);
  }

  // bool load_scene_in_session = 16;
  if (this->_internal_load_scene_in_session() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(16, this->_internal_load_scene_in_session(), target);
  }

  // bool relations = 17;
  if (this->_internal_relations() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(17, this->_internal_relations(), target);
  }

  // bool debug_info = 18;
  if (this->_internal_debug_info() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(18, this->_internal_debug_info(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.engine.CapabilitiesRequest)
  return target;
}

size_t CapabilitiesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.engine.CapabilitiesRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool audio = 1;
  if (this->_internal_audio() != 0) {
    total_size += 1 + 1;
  }

  // bool text = 2;
  if (this->_internal_text() != 0) {
    total_size += 1 + 1;
  }

  // bool gestures = 3;
  if (this->_internal_gestures() != 0) {
    total_size += 1 + 1;
  }

  // bool interruptions = 4;
  if (this->_internal_interruptions() != 0) {
    total_size += 1 + 1;
  }

  // bool triggers = 5;
  if (this->_internal_triggers() != 0) {
    total_size += 1 + 1;
  }

  // bool emotions = 6;
  if (this->_internal_emotions() != 0) {
    total_size += 1 + 1;
  }

  // bool animations = 7;
  if (this->_internal_animations() != 0) {
    total_size += 1 + 1;
  }

  // bool turn_based_stt = 8;
  if (this->_internal_turn_based_stt() != 0) {
    total_size += 1 + 1;
  }

  // bool emotion_streaming = 9;
  if (this->_internal_emotion_streaming() != 0) {
    total_size += 1 + 1;
  }

  // bool silence_events = 10;
  if (this->_internal_silence_events() != 0) {
    total_size += 1 + 1;
  }

  // bool phoneme_info = 11;
  if (this->_internal_phoneme_info() != 0) {
    total_size += 1 + 1;
  }

  // bool continuation = 12;
  if (this->_internal_continuation() != 0) {
    total_size += 1 + 1;
  }

  // bool session_cancellation = 13;
  if (this->_internal_session_cancellation() != 0) {
    total_size += 1 + 1;
  }

  // bool narrated_actions = 14;
  if (this->_internal_narrated_actions() != 0) {
    total_size += 1 + 1;
  }

  // bool regenerate_response = 15;
  if (this->_internal_regenerate_response() != 0) {
    total_size += 1 + 1;
  }

  // bool load_scene_in_session = 16;
  if (this->_internal_load_scene_in_session() != 0) {
    total_size += 2 + 1;
  }

  // bool relations = 17;
  if (this->_internal_relations() != 0) {
    total_size += 2 + 1;
  }

  // bool debug_info = 18;
  if (this->_internal_debug_info() != 0) {
    total_size += 2 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CapabilitiesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CapabilitiesRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CapabilitiesRequest::GetClassData() const { return &_class_data_; }


void CapabilitiesRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CapabilitiesRequest*>(&to_msg);
  auto& from = static_cast<const CapabilitiesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.engine.CapabilitiesRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_audio() != 0) {
    _this->_internal_set_audio(from._internal_audio());
  }
  if (from._internal_text() != 0) {
    _this->_internal_set_text(from._internal_text());
  }
  if (from._internal_gestures() != 0) {
    _this->_internal_set_gestures(from._internal_gestures());
  }
  if (from._internal_interruptions() != 0) {
    _this->_internal_set_interruptions(from._internal_interruptions());
  }
  if (from._internal_triggers() != 0) {
    _this->_internal_set_triggers(from._internal_triggers());
  }
  if (from._internal_emotions() != 0) {
    _this->_internal_set_emotions(from._internal_emotions());
  }
  if (from._internal_animations() != 0) {
    _this->_internal_set_animations(from._internal_animations());
  }
  if (from._internal_turn_based_stt() != 0) {
    _this->_internal_set_turn_based_stt(from._internal_turn_based_stt());
  }
  if (from._internal_emotion_streaming() != 0) {
    _this->_internal_set_emotion_streaming(from._internal_emotion_streaming());
  }
  if (from._internal_silence_events() != 0) {
    _this->_internal_set_silence_events(from._internal_silence_events());
  }
  if (from._internal_phoneme_info() != 0) {
    _this->_internal_set_phoneme_info(from._internal_phoneme_info());
  }
  if (from._internal_continuation() != 0) {
    _this->_internal_set_continuation(from._internal_continuation());
  }
  if (from._internal_session_cancellation() != 0) {
    _this->_internal_set_session_cancellation(from._internal_session_cancellation());
  }
  if (from._internal_narrated_actions() != 0) {
    _this->_internal_set_narrated_actions(from._internal_narrated_actions());
  }
  if (from._internal_regenerate_response() != 0) {
    _this->_internal_set_regenerate_response(from._internal_regenerate_response());
  }
  if (from._internal_load_scene_in_session() != 0) {
    _this->_internal_set_load_scene_in_session(from._internal_load_scene_in_session());
  }
  if (from._internal_relations() != 0) {
    _this->_internal_set_relations(from._internal_relations());
  }
  if (from._internal_debug_info() != 0) {
    _this->_internal_set_debug_info(from._internal_debug_info());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CapabilitiesRequest::CopyFrom(const CapabilitiesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.engine.CapabilitiesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CapabilitiesRequest::IsInitialized() const {
  return true;
}

void CapabilitiesRequest::InternalSwap(CapabilitiesRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CapabilitiesRequest, _impl_.debug_info_)
      + sizeof(CapabilitiesRequest::_impl_.debug_info_)
      - PROTOBUF_FIELD_OFFSET(CapabilitiesRequest, _impl_.audio_)>(
          reinterpret_cast<char*>(&_impl_.audio_),
          reinterpret_cast<char*>(&other->_impl_.audio_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CapabilitiesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_world_2dengine_2eproto_getter, &descriptor_table_world_2dengine_2eproto_once,
      file_level_metadata_world_2dengine_2eproto[0]);
}

// ===================================================================

class UserRequest::_Internal {
 public:
};

UserRequest::UserRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.engine.UserRequest)
}
UserRequest::UserRequest(const UserRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UserRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    _this->_impl_.id_.Set(from._internal_id(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.engine.UserRequest)
}

inline void UserRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.id_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UserRequest::~UserRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.engine.UserRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UserRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.id_.Destroy();
}

void UserRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UserRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.engine.UserRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UserRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.engine.UserRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // string id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.engine.UserRequest.id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UserRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.engine.UserRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.UserRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string id = 2;
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.UserRequest.id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.engine.UserRequest)
  return target;
}

size_t UserRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.engine.UserRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string id = 2;
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UserRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UserRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UserRequest::GetClassData() const { return &_class_data_; }


void UserRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UserRequest*>(&to_msg);
  auto& from = static_cast<const UserRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.engine.UserRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UserRequest::CopyFrom(const UserRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.engine.UserRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserRequest::IsInitialized() const {
  return true;
}

void UserRequest::InternalSwap(UserRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.id_, lhs_arena,
      &other->_impl_.id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata UserRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_world_2dengine_2eproto_getter, &descriptor_table_world_2dengine_2eproto_once,
      file_level_metadata_world_2dengine_2eproto[1]);
}

// ===================================================================

class ClientRequest::_Internal {
 public:
};

ClientRequest::ClientRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.engine.ClientRequest)
}
ClientRequest::ClientRequest(const ClientRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ClientRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , decltype(_impl_.version_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    _this->_impl_.id_.Set(from._internal_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_version().empty()) {
    _this->_impl_.version_.Set(from._internal_version(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.engine.ClientRequest)
}

inline void ClientRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , decltype(_impl_.version_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ClientRequest::~ClientRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.engine.ClientRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ClientRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.id_.Destroy();
  _impl_.version_.Destroy();
}

void ClientRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ClientRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.engine.ClientRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _impl_.version_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ClientRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.engine.ClientRequest.id"));
        } else
          goto handle_unusual;
        continue;
      // string version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.engine.ClientRequest.version"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ClientRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.engine.ClientRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.ClientRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string version = 2;
  if (!this->_internal_version().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.ClientRequest.version");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.engine.ClientRequest)
  return target;
}

size_t ClientRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.engine.ClientRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string version = 2;
  if (!this->_internal_version().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ClientRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ClientRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ClientRequest::GetClassData() const { return &_class_data_; }


void ClientRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ClientRequest*>(&to_msg);
  auto& from = static_cast<const ClientRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.engine.ClientRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_version().empty()) {
    _this->_internal_set_version(from._internal_version());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ClientRequest::CopyFrom(const ClientRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.engine.ClientRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientRequest::IsInitialized() const {
  return true;
}

void ClientRequest::InternalSwap(ClientRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.id_, lhs_arena,
      &other->_impl_.id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.version_, lhs_arena,
      &other->_impl_.version_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ClientRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_world_2dengine_2eproto_getter, &descriptor_table_world_2dengine_2eproto_once,
      file_level_metadata_world_2dengine_2eproto[2]);
}

// ===================================================================

class CreateWorldRequest_CreateAgentRequest::_Internal {
 public:
};

CreateWorldRequest_CreateAgentRequest::CreateWorldRequest_CreateAgentRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.engine.CreateWorldRequest.CreateAgentRequest)
}
CreateWorldRequest_CreateAgentRequest::CreateWorldRequest_CreateAgentRequest(const CreateWorldRequest_CreateAgentRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CreateWorldRequest_CreateAgentRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.brain_name_){}
    , decltype(_impl_.language_code_){}
    , decltype(_impl_.voice_preset_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.brain_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.brain_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_brain_name().empty()) {
    _this->_impl_.brain_name_.Set(from._internal_brain_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.language_code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.language_code_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_language_code().empty()) {
    _this->_impl_.language_code_.Set(from._internal_language_code(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.voice_preset_ = from._impl_.voice_preset_;
  // @@protoc_insertion_point(copy_constructor:ai.inworld.engine.CreateWorldRequest.CreateAgentRequest)
}

inline void CreateWorldRequest_CreateAgentRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.brain_name_){}
    , decltype(_impl_.language_code_){}
    , decltype(_impl_.voice_preset_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.brain_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.brain_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.language_code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.language_code_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CreateWorldRequest_CreateAgentRequest::~CreateWorldRequest_CreateAgentRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.engine.CreateWorldRequest.CreateAgentRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateWorldRequest_CreateAgentRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.brain_name_.Destroy();
  _impl_.language_code_.Destroy();
}

void CreateWorldRequest_CreateAgentRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CreateWorldRequest_CreateAgentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.engine.CreateWorldRequest.CreateAgentRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.brain_name_.ClearToEmpty();
  _impl_.language_code_.ClearToEmpty();
  _impl_.voice_preset_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateWorldRequest_CreateAgentRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string brain_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_brain_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.engine.CreateWorldRequest.CreateAgentRequest.brain_name"));
        } else
          goto handle_unusual;
        continue;
      // string language_code = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_language_code();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.engine.CreateWorldRequest.CreateAgentRequest.language_code"));
        } else
          goto handle_unusual;
        continue;
      // .ai.inworld.engine.VoicePreset voice_preset = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_voice_preset(static_cast<::ai::inworld::engine::VoicePreset>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateWorldRequest_CreateAgentRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.engine.CreateWorldRequest.CreateAgentRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string brain_name = 1;
  if (!this->_internal_brain_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_brain_name().data(), static_cast<int>(this->_internal_brain_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.CreateWorldRequest.CreateAgentRequest.brain_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_brain_name(), target);
  }

  // string language_code = 2;
  if (!this->_internal_language_code().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_language_code().data(), static_cast<int>(this->_internal_language_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.CreateWorldRequest.CreateAgentRequest.language_code");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_language_code(), target);
  }

  // .ai.inworld.engine.VoicePreset voice_preset = 3;
  if (this->_internal_voice_preset() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      3, this->_internal_voice_preset(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.engine.CreateWorldRequest.CreateAgentRequest)
  return target;
}

size_t CreateWorldRequest_CreateAgentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.engine.CreateWorldRequest.CreateAgentRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string brain_name = 1;
  if (!this->_internal_brain_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_brain_name());
  }

  // string language_code = 2;
  if (!this->_internal_language_code().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_language_code());
  }

  // .ai.inworld.engine.VoicePreset voice_preset = 3;
  if (this->_internal_voice_preset() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_voice_preset());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateWorldRequest_CreateAgentRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CreateWorldRequest_CreateAgentRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateWorldRequest_CreateAgentRequest::GetClassData() const { return &_class_data_; }


void CreateWorldRequest_CreateAgentRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CreateWorldRequest_CreateAgentRequest*>(&to_msg);
  auto& from = static_cast<const CreateWorldRequest_CreateAgentRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.engine.CreateWorldRequest.CreateAgentRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_brain_name().empty()) {
    _this->_internal_set_brain_name(from._internal_brain_name());
  }
  if (!from._internal_language_code().empty()) {
    _this->_internal_set_language_code(from._internal_language_code());
  }
  if (from._internal_voice_preset() != 0) {
    _this->_internal_set_voice_preset(from._internal_voice_preset());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateWorldRequest_CreateAgentRequest::CopyFrom(const CreateWorldRequest_CreateAgentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.engine.CreateWorldRequest.CreateAgentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateWorldRequest_CreateAgentRequest::IsInitialized() const {
  return true;
}

void CreateWorldRequest_CreateAgentRequest::InternalSwap(CreateWorldRequest_CreateAgentRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.brain_name_, lhs_arena,
      &other->_impl_.brain_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.language_code_, lhs_arena,
      &other->_impl_.language_code_, rhs_arena
  );
  swap(_impl_.voice_preset_, other->_impl_.voice_preset_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateWorldRequest_CreateAgentRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_world_2dengine_2eproto_getter, &descriptor_table_world_2dengine_2eproto_once,
      file_level_metadata_world_2dengine_2eproto[3]);
}

// ===================================================================

class CreateWorldRequest_ClientRequest::_Internal {
 public:
};

CreateWorldRequest_ClientRequest::CreateWorldRequest_ClientRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.engine.CreateWorldRequest.ClientRequest)
}
CreateWorldRequest_ClientRequest::CreateWorldRequest_ClientRequest(const CreateWorldRequest_ClientRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CreateWorldRequest_ClientRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , decltype(_impl_.version_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    _this->_impl_.id_.Set(from._internal_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_version().empty()) {
    _this->_impl_.version_.Set(from._internal_version(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.engine.CreateWorldRequest.ClientRequest)
}

inline void CreateWorldRequest_ClientRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , decltype(_impl_.version_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CreateWorldRequest_ClientRequest::~CreateWorldRequest_ClientRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.engine.CreateWorldRequest.ClientRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateWorldRequest_ClientRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.id_.Destroy();
  _impl_.version_.Destroy();
}

void CreateWorldRequest_ClientRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CreateWorldRequest_ClientRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.engine.CreateWorldRequest.ClientRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _impl_.version_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateWorldRequest_ClientRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.engine.CreateWorldRequest.ClientRequest.id"));
        } else
          goto handle_unusual;
        continue;
      // string version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.engine.CreateWorldRequest.ClientRequest.version"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateWorldRequest_ClientRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.engine.CreateWorldRequest.ClientRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.CreateWorldRequest.ClientRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string version = 2;
  if (!this->_internal_version().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.CreateWorldRequest.ClientRequest.version");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.engine.CreateWorldRequest.ClientRequest)
  return target;
}

size_t CreateWorldRequest_ClientRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.engine.CreateWorldRequest.ClientRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string version = 2;
  if (!this->_internal_version().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateWorldRequest_ClientRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CreateWorldRequest_ClientRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateWorldRequest_ClientRequest::GetClassData() const { return &_class_data_; }


void CreateWorldRequest_ClientRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CreateWorldRequest_ClientRequest*>(&to_msg);
  auto& from = static_cast<const CreateWorldRequest_ClientRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.engine.CreateWorldRequest.ClientRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_version().empty()) {
    _this->_internal_set_version(from._internal_version());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateWorldRequest_ClientRequest::CopyFrom(const CreateWorldRequest_ClientRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.engine.CreateWorldRequest.ClientRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateWorldRequest_ClientRequest::IsInitialized() const {
  return true;
}

void CreateWorldRequest_ClientRequest::InternalSwap(CreateWorldRequest_ClientRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.id_, lhs_arena,
      &other->_impl_.id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.version_, lhs_arena,
      &other->_impl_.version_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateWorldRequest_ClientRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_world_2dengine_2eproto_getter, &descriptor_table_world_2dengine_2eproto_once,
      file_level_metadata_world_2dengine_2eproto[4]);
}

// ===================================================================

class CreateWorldRequest::_Internal {
 public:
  static const ::ai::inworld::engine::CapabilitiesRequest& capabilities(const CreateWorldRequest* msg);
  static const ::ai::inworld::engine::UserRequest& user(const CreateWorldRequest* msg);
  static const ::ai::inworld::engine::CreateWorldRequest_ClientRequest& client(const CreateWorldRequest* msg);
};

const ::ai::inworld::engine::CapabilitiesRequest&
CreateWorldRequest::_Internal::capabilities(const CreateWorldRequest* msg) {
  return *msg->_impl_.capabilities_;
}
const ::ai::inworld::engine::UserRequest&
CreateWorldRequest::_Internal::user(const CreateWorldRequest* msg) {
  return *msg->_impl_.user_;
}
const ::ai::inworld::engine::CreateWorldRequest_ClientRequest&
CreateWorldRequest::_Internal::client(const CreateWorldRequest* msg) {
  return *msg->_impl_.client_;
}
CreateWorldRequest::CreateWorldRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.engine.CreateWorldRequest)
}
CreateWorldRequest::CreateWorldRequest(const CreateWorldRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CreateWorldRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.create_agent_requests_){from._impl_.create_agent_requests_}
    , decltype(_impl_.proto_world_name_){}
    , decltype(_impl_.capabilities_){nullptr}
    , decltype(_impl_.user_){nullptr}
    , decltype(_impl_.client_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.proto_world_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.proto_world_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_proto_world_name().empty()) {
    _this->_impl_.proto_world_name_.Set(from._internal_proto_world_name(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_capabilities()) {
    _this->_impl_.capabilities_ = new ::ai::inworld::engine::CapabilitiesRequest(*from._impl_.capabilities_);
  }
  if (from._internal_has_user()) {
    _this->_impl_.user_ = new ::ai::inworld::engine::UserRequest(*from._impl_.user_);
  }
  if (from._internal_has_client()) {
    _this->_impl_.client_ = new ::ai::inworld::engine::CreateWorldRequest_ClientRequest(*from._impl_.client_);
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.engine.CreateWorldRequest)
}

inline void CreateWorldRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.create_agent_requests_){arena}
    , decltype(_impl_.proto_world_name_){}
    , decltype(_impl_.capabilities_){nullptr}
    , decltype(_impl_.user_){nullptr}
    , decltype(_impl_.client_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.proto_world_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.proto_world_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CreateWorldRequest::~CreateWorldRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.engine.CreateWorldRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateWorldRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.create_agent_requests_.~RepeatedPtrField();
  _impl_.proto_world_name_.Destroy();
  if (this != internal_default_instance()) delete _impl_.capabilities_;
  if (this != internal_default_instance()) delete _impl_.user_;
  if (this != internal_default_instance()) delete _impl_.client_;
}

void CreateWorldRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CreateWorldRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.engine.CreateWorldRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.create_agent_requests_.Clear();
  _impl_.proto_world_name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.capabilities_ != nullptr) {
    delete _impl_.capabilities_;
  }
  _impl_.capabilities_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.user_ != nullptr) {
    delete _impl_.user_;
  }
  _impl_.user_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.client_ != nullptr) {
    delete _impl_.client_;
  }
  _impl_.client_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateWorldRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string proto_world_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_proto_world_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.engine.CreateWorldRequest.proto_world_name"));
        } else
          goto handle_unusual;
        continue;
      // repeated .ai.inworld.engine.CreateWorldRequest.CreateAgentRequest create_agent_requests = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_create_agent_requests(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .ai.inworld.engine.CapabilitiesRequest capabilities = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_capabilities(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ai.inworld.engine.UserRequest user = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_user(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ai.inworld.engine.CreateWorldRequest.ClientRequest client = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_client(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateWorldRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.engine.CreateWorldRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string proto_world_name = 1;
  if (!this->_internal_proto_world_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_proto_world_name().data(), static_cast<int>(this->_internal_proto_world_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.CreateWorldRequest.proto_world_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_proto_world_name(), target);
  }

  // repeated .ai.inworld.engine.CreateWorldRequest.CreateAgentRequest create_agent_requests = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_create_agent_requests_size()); i < n; i++) {
    const auto& repfield = this->_internal_create_agent_requests(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // .ai.inworld.engine.CapabilitiesRequest capabilities = 3;
  if (this->_internal_has_capabilities()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::capabilities(this),
        _Internal::capabilities(this).GetCachedSize(), target, stream);
  }

  // .ai.inworld.engine.UserRequest user = 4;
  if (this->_internal_has_user()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::user(this),
        _Internal::user(this).GetCachedSize(), target, stream);
  }

  // .ai.inworld.engine.CreateWorldRequest.ClientRequest client = 5;
  if (this->_internal_has_client()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::client(this),
        _Internal::client(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.engine.CreateWorldRequest)
  return target;
}

size_t CreateWorldRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.engine.CreateWorldRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ai.inworld.engine.CreateWorldRequest.CreateAgentRequest create_agent_requests = 2;
  total_size += 1UL * this->_internal_create_agent_requests_size();
  for (const auto& msg : this->_impl_.create_agent_requests_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string proto_world_name = 1;
  if (!this->_internal_proto_world_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_proto_world_name());
  }

  // .ai.inworld.engine.CapabilitiesRequest capabilities = 3;
  if (this->_internal_has_capabilities()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.capabilities_);
  }

  // .ai.inworld.engine.UserRequest user = 4;
  if (this->_internal_has_user()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.user_);
  }

  // .ai.inworld.engine.CreateWorldRequest.ClientRequest client = 5;
  if (this->_internal_has_client()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.client_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateWorldRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CreateWorldRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateWorldRequest::GetClassData() const { return &_class_data_; }


void CreateWorldRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CreateWorldRequest*>(&to_msg);
  auto& from = static_cast<const CreateWorldRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.engine.CreateWorldRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.create_agent_requests_.MergeFrom(from._impl_.create_agent_requests_);
  if (!from._internal_proto_world_name().empty()) {
    _this->_internal_set_proto_world_name(from._internal_proto_world_name());
  }
  if (from._internal_has_capabilities()) {
    _this->_internal_mutable_capabilities()->::ai::inworld::engine::CapabilitiesRequest::MergeFrom(
        from._internal_capabilities());
  }
  if (from._internal_has_user()) {
    _this->_internal_mutable_user()->::ai::inworld::engine::UserRequest::MergeFrom(
        from._internal_user());
  }
  if (from._internal_has_client()) {
    _this->_internal_mutable_client()->::ai::inworld::engine::CreateWorldRequest_ClientRequest::MergeFrom(
        from._internal_client());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateWorldRequest::CopyFrom(const CreateWorldRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.engine.CreateWorldRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateWorldRequest::IsInitialized() const {
  return true;
}

void CreateWorldRequest::InternalSwap(CreateWorldRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.create_agent_requests_.InternalSwap(&other->_impl_.create_agent_requests_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.proto_world_name_, lhs_arena,
      &other->_impl_.proto_world_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreateWorldRequest, _impl_.client_)
      + sizeof(CreateWorldRequest::_impl_.client_)
      - PROTOBUF_FIELD_OFFSET(CreateWorldRequest, _impl_.capabilities_)>(
          reinterpret_cast<char*>(&_impl_.capabilities_),
          reinterpret_cast<char*>(&other->_impl_.capabilities_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateWorldRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_world_2dengine_2eproto_getter, &descriptor_table_world_2dengine_2eproto_once,
      file_level_metadata_world_2dengine_2eproto[5]);
}

// ===================================================================

class CreateWorldResponse_Agent::_Internal {
 public:
};

CreateWorldResponse_Agent::CreateWorldResponse_Agent(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.engine.CreateWorldResponse.Agent)
}
CreateWorldResponse_Agent::CreateWorldResponse_Agent(const CreateWorldResponse_Agent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CreateWorldResponse_Agent* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.agent_id_){}
    , decltype(_impl_.brain_name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.agent_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.agent_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_agent_id().empty()) {
    _this->_impl_.agent_id_.Set(from._internal_agent_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.brain_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.brain_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_brain_name().empty()) {
    _this->_impl_.brain_name_.Set(from._internal_brain_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.engine.CreateWorldResponse.Agent)
}

inline void CreateWorldResponse_Agent::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.agent_id_){}
    , decltype(_impl_.brain_name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.agent_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.agent_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.brain_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.brain_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CreateWorldResponse_Agent::~CreateWorldResponse_Agent() {
  // @@protoc_insertion_point(destructor:ai.inworld.engine.CreateWorldResponse.Agent)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateWorldResponse_Agent::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.agent_id_.Destroy();
  _impl_.brain_name_.Destroy();
}

void CreateWorldResponse_Agent::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CreateWorldResponse_Agent::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.engine.CreateWorldResponse.Agent)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.agent_id_.ClearToEmpty();
  _impl_.brain_name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateWorldResponse_Agent::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string agent_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_agent_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.engine.CreateWorldResponse.Agent.agent_id"));
        } else
          goto handle_unusual;
        continue;
      // string brain_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_brain_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.engine.CreateWorldResponse.Agent.brain_name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateWorldResponse_Agent::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.engine.CreateWorldResponse.Agent)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string agent_id = 1;
  if (!this->_internal_agent_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_agent_id().data(), static_cast<int>(this->_internal_agent_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.CreateWorldResponse.Agent.agent_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_agent_id(), target);
  }

  // string brain_name = 2;
  if (!this->_internal_brain_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_brain_name().data(), static_cast<int>(this->_internal_brain_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.CreateWorldResponse.Agent.brain_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_brain_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.engine.CreateWorldResponse.Agent)
  return target;
}

size_t CreateWorldResponse_Agent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.engine.CreateWorldResponse.Agent)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string agent_id = 1;
  if (!this->_internal_agent_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_agent_id());
  }

  // string brain_name = 2;
  if (!this->_internal_brain_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_brain_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateWorldResponse_Agent::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CreateWorldResponse_Agent::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateWorldResponse_Agent::GetClassData() const { return &_class_data_; }


void CreateWorldResponse_Agent::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CreateWorldResponse_Agent*>(&to_msg);
  auto& from = static_cast<const CreateWorldResponse_Agent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.engine.CreateWorldResponse.Agent)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_agent_id().empty()) {
    _this->_internal_set_agent_id(from._internal_agent_id());
  }
  if (!from._internal_brain_name().empty()) {
    _this->_internal_set_brain_name(from._internal_brain_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateWorldResponse_Agent::CopyFrom(const CreateWorldResponse_Agent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.engine.CreateWorldResponse.Agent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateWorldResponse_Agent::IsInitialized() const {
  return true;
}

void CreateWorldResponse_Agent::InternalSwap(CreateWorldResponse_Agent* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.agent_id_, lhs_arena,
      &other->_impl_.agent_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.brain_name_, lhs_arena,
      &other->_impl_.brain_name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateWorldResponse_Agent::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_world_2dengine_2eproto_getter, &descriptor_table_world_2dengine_2eproto_once,
      file_level_metadata_world_2dengine_2eproto[6]);
}

// ===================================================================

class CreateWorldResponse::_Internal {
 public:
};

CreateWorldResponse::CreateWorldResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.engine.CreateWorldResponse)
}
CreateWorldResponse::CreateWorldResponse(const CreateWorldResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CreateWorldResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.agents_){from._impl_.agents_}
    , decltype(_impl_.key_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.key_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.key_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_key().empty()) {
    _this->_impl_.key_.Set(from._internal_key(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.engine.CreateWorldResponse)
}

inline void CreateWorldResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.agents_){arena}
    , decltype(_impl_.key_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.key_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.key_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CreateWorldResponse::~CreateWorldResponse() {
  // @@protoc_insertion_point(destructor:ai.inworld.engine.CreateWorldResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateWorldResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.agents_.~RepeatedPtrField();
  _impl_.key_.Destroy();
}

void CreateWorldResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CreateWorldResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.engine.CreateWorldResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.agents_.Clear();
  _impl_.key_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateWorldResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .ai.inworld.engine.CreateWorldResponse.Agent agents = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_agents(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string key = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_key();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.engine.CreateWorldResponse.key"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateWorldResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.engine.CreateWorldResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ai.inworld.engine.CreateWorldResponse.Agent agents = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_agents_size()); i < n; i++) {
    const auto& repfield = this->_internal_agents(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string key = 3;
  if (!this->_internal_key().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key().data(), static_cast<int>(this->_internal_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.CreateWorldResponse.key");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_key(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.engine.CreateWorldResponse)
  return target;
}

size_t CreateWorldResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.engine.CreateWorldResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ai.inworld.engine.CreateWorldResponse.Agent agents = 1;
  total_size += 1UL * this->_internal_agents_size();
  for (const auto& msg : this->_impl_.agents_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string key = 3;
  if (!this->_internal_key().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateWorldResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CreateWorldResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateWorldResponse::GetClassData() const { return &_class_data_; }


void CreateWorldResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CreateWorldResponse*>(&to_msg);
  auto& from = static_cast<const CreateWorldResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.engine.CreateWorldResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.agents_.MergeFrom(from._impl_.agents_);
  if (!from._internal_key().empty()) {
    _this->_internal_set_key(from._internal_key());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateWorldResponse::CopyFrom(const CreateWorldResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.engine.CreateWorldResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateWorldResponse::IsInitialized() const {
  return true;
}

void CreateWorldResponse::InternalSwap(CreateWorldResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.agents_.InternalSwap(&other->_impl_.agents_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.key_, lhs_arena,
      &other->_impl_.key_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateWorldResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_world_2dengine_2eproto_getter, &descriptor_table_world_2dengine_2eproto_once,
      file_level_metadata_world_2dengine_2eproto[7]);
}

// ===================================================================

class LoadSceneRequest::_Internal {
 public:
  static const ::ai::inworld::engine::CapabilitiesRequest& capabilities(const LoadSceneRequest* msg);
  static const ::ai::inworld::engine::UserRequest& user(const LoadSceneRequest* msg);
  static const ::ai::inworld::engine::ClientRequest& client(const LoadSceneRequest* msg);
  static const ::ai::inworld::engine::AudioSettings& audio_settings(const LoadSceneRequest* msg);
  static const ::ai::inworld::engine::UserSettings& user_settings(const LoadSceneRequest* msg);
  static const ::ai::inworld::engine::SessionContinuation& session_continuation(const LoadSceneRequest* msg);
};

const ::ai::inworld::engine::CapabilitiesRequest&
LoadSceneRequest::_Internal::capabilities(const LoadSceneRequest* msg) {
  return *msg->_impl_.capabilities_;
}
const ::ai::inworld::engine::UserRequest&
LoadSceneRequest::_Internal::user(const LoadSceneRequest* msg) {
  return *msg->_impl_.user_;
}
const ::ai::inworld::engine::ClientRequest&
LoadSceneRequest::_Internal::client(const LoadSceneRequest* msg) {
  return *msg->_impl_.client_;
}
const ::ai::inworld::engine::AudioSettings&
LoadSceneRequest::_Internal::audio_settings(const LoadSceneRequest* msg) {
  return *msg->_impl_.audio_settings_;
}
const ::ai::inworld::engine::UserSettings&
LoadSceneRequest::_Internal::user_settings(const LoadSceneRequest* msg) {
  return *msg->_impl_.user_settings_;
}
const ::ai::inworld::engine::SessionContinuation&
LoadSceneRequest::_Internal::session_continuation(const LoadSceneRequest* msg) {
  return *msg->_impl_.session_continuation_;
}
LoadSceneRequest::LoadSceneRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.engine.LoadSceneRequest)
}
LoadSceneRequest::LoadSceneRequest(const LoadSceneRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LoadSceneRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.capabilities_){nullptr}
    , decltype(_impl_.user_){nullptr}
    , decltype(_impl_.client_){nullptr}
    , decltype(_impl_.audio_settings_){nullptr}
    , decltype(_impl_.user_settings_){nullptr}
    , decltype(_impl_.session_continuation_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_capabilities()) {
    _this->_impl_.capabilities_ = new ::ai::inworld::engine::CapabilitiesRequest(*from._impl_.capabilities_);
  }
  if (from._internal_has_user()) {
    _this->_impl_.user_ = new ::ai::inworld::engine::UserRequest(*from._impl_.user_);
  }
  if (from._internal_has_client()) {
    _this->_impl_.client_ = new ::ai::inworld::engine::ClientRequest(*from._impl_.client_);
  }
  if (from._internal_has_audio_settings()) {
    _this->_impl_.audio_settings_ = new ::ai::inworld::engine::AudioSettings(*from._impl_.audio_settings_);
  }
  if (from._internal_has_user_settings()) {
    _this->_impl_.user_settings_ = new ::ai::inworld::engine::UserSettings(*from._impl_.user_settings_);
  }
  if (from._internal_has_session_continuation()) {
    _this->_impl_.session_continuation_ = new ::ai::inworld::engine::SessionContinuation(*from._impl_.session_continuation_);
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.engine.LoadSceneRequest)
}

inline void LoadSceneRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.capabilities_){nullptr}
    , decltype(_impl_.user_){nullptr}
    , decltype(_impl_.client_){nullptr}
    , decltype(_impl_.audio_settings_){nullptr}
    , decltype(_impl_.user_settings_){nullptr}
    , decltype(_impl_.session_continuation_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

LoadSceneRequest::~LoadSceneRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.engine.LoadSceneRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LoadSceneRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  if (this != internal_default_instance()) delete _impl_.capabilities_;
  if (this != internal_default_instance()) delete _impl_.user_;
  if (this != internal_default_instance()) delete _impl_.client_;
  if (this != internal_default_instance()) delete _impl_.audio_settings_;
  if (this != internal_default_instance()) delete _impl_.user_settings_;
  if (this != internal_default_instance()) delete _impl_.session_continuation_;
}

void LoadSceneRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LoadSceneRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.engine.LoadSceneRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.capabilities_ != nullptr) {
    delete _impl_.capabilities_;
  }
  _impl_.capabilities_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.user_ != nullptr) {
    delete _impl_.user_;
  }
  _impl_.user_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.client_ != nullptr) {
    delete _impl_.client_;
  }
  _impl_.client_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.audio_settings_ != nullptr) {
    delete _impl_.audio_settings_;
  }
  _impl_.audio_settings_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.user_settings_ != nullptr) {
    delete _impl_.user_settings_;
  }
  _impl_.user_settings_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.session_continuation_ != nullptr) {
    delete _impl_.session_continuation_;
  }
  _impl_.session_continuation_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LoadSceneRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.engine.LoadSceneRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // .ai.inworld.engine.CapabilitiesRequest capabilities = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_capabilities(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ai.inworld.engine.UserRequest user = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_user(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ai.inworld.engine.ClientRequest client = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_client(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ai.inworld.engine.AudioSettings audio_settings = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_audio_settings(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ai.inworld.engine.UserSettings user_settings = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_user_settings(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ai.inworld.engine.SessionContinuation session_continuation = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_session_continuation(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LoadSceneRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.engine.LoadSceneRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.LoadSceneRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // .ai.inworld.engine.CapabilitiesRequest capabilities = 2;
  if (this->_internal_has_capabilities()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::capabilities(this),
        _Internal::capabilities(this).GetCachedSize(), target, stream);
  }

  // .ai.inworld.engine.UserRequest user = 3;
  if (this->_internal_has_user()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::user(this),
        _Internal::user(this).GetCachedSize(), target, stream);
  }

  // .ai.inworld.engine.ClientRequest client = 4;
  if (this->_internal_has_client()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::client(this),
        _Internal::client(this).GetCachedSize(), target, stream);
  }

  // .ai.inworld.engine.AudioSettings audio_settings = 5;
  if (this->_internal_has_audio_settings()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::audio_settings(this),
        _Internal::audio_settings(this).GetCachedSize(), target, stream);
  }

  // .ai.inworld.engine.UserSettings user_settings = 6;
  if (this->_internal_has_user_settings()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::user_settings(this),
        _Internal::user_settings(this).GetCachedSize(), target, stream);
  }

  // .ai.inworld.engine.SessionContinuation session_continuation = 7;
  if (this->_internal_has_session_continuation()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::session_continuation(this),
        _Internal::session_continuation(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.engine.LoadSceneRequest)
  return target;
}

size_t LoadSceneRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.engine.LoadSceneRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .ai.inworld.engine.CapabilitiesRequest capabilities = 2;
  if (this->_internal_has_capabilities()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.capabilities_);
  }

  // .ai.inworld.engine.UserRequest user = 3;
  if (this->_internal_has_user()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.user_);
  }

  // .ai.inworld.engine.ClientRequest client = 4;
  if (this->_internal_has_client()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.client_);
  }

  // .ai.inworld.engine.AudioSettings audio_settings = 5;
  if (this->_internal_has_audio_settings()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.audio_settings_);
  }

  // .ai.inworld.engine.UserSettings user_settings = 6;
  if (this->_internal_has_user_settings()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.user_settings_);
  }

  // .ai.inworld.engine.SessionContinuation session_continuation = 7;
  if (this->_internal_has_session_continuation()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.session_continuation_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LoadSceneRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LoadSceneRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LoadSceneRequest::GetClassData() const { return &_class_data_; }


void LoadSceneRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LoadSceneRequest*>(&to_msg);
  auto& from = static_cast<const LoadSceneRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.engine.LoadSceneRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_has_capabilities()) {
    _this->_internal_mutable_capabilities()->::ai::inworld::engine::CapabilitiesRequest::MergeFrom(
        from._internal_capabilities());
  }
  if (from._internal_has_user()) {
    _this->_internal_mutable_user()->::ai::inworld::engine::UserRequest::MergeFrom(
        from._internal_user());
  }
  if (from._internal_has_client()) {
    _this->_internal_mutable_client()->::ai::inworld::engine::ClientRequest::MergeFrom(
        from._internal_client());
  }
  if (from._internal_has_audio_settings()) {
    _this->_internal_mutable_audio_settings()->::ai::inworld::engine::AudioSettings::MergeFrom(
        from._internal_audio_settings());
  }
  if (from._internal_has_user_settings()) {
    _this->_internal_mutable_user_settings()->::ai::inworld::engine::UserSettings::MergeFrom(
        from._internal_user_settings());
  }
  if (from._internal_has_session_continuation()) {
    _this->_internal_mutable_session_continuation()->::ai::inworld::engine::SessionContinuation::MergeFrom(
        from._internal_session_continuation());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LoadSceneRequest::CopyFrom(const LoadSceneRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.engine.LoadSceneRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoadSceneRequest::IsInitialized() const {
  return true;
}

void LoadSceneRequest::InternalSwap(LoadSceneRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LoadSceneRequest, _impl_.session_continuation_)
      + sizeof(LoadSceneRequest::_impl_.session_continuation_)
      - PROTOBUF_FIELD_OFFSET(LoadSceneRequest, _impl_.capabilities_)>(
          reinterpret_cast<char*>(&_impl_.capabilities_),
          reinterpret_cast<char*>(&other->_impl_.capabilities_));
}

::PROTOBUF_NAMESPACE_ID::Metadata LoadSceneRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_world_2dengine_2eproto_getter, &descriptor_table_world_2dengine_2eproto_once,
      file_level_metadata_world_2dengine_2eproto[8]);
}

// ===================================================================

class AudioSettings::_Internal {
 public:
};

AudioSettings::AudioSettings(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.engine.AudioSettings)
}
AudioSettings::AudioSettings(const AudioSettings& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AudioSettings* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.stt_sample_rate_hertz_){}
    , decltype(_impl_.tts_sample_rate_hertz_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.stt_sample_rate_hertz_, &from._impl_.stt_sample_rate_hertz_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.tts_sample_rate_hertz_) -
    reinterpret_cast<char*>(&_impl_.stt_sample_rate_hertz_)) + sizeof(_impl_.tts_sample_rate_hertz_));
  // @@protoc_insertion_point(copy_constructor:ai.inworld.engine.AudioSettings)
}

inline void AudioSettings::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.stt_sample_rate_hertz_){0u}
    , decltype(_impl_.tts_sample_rate_hertz_){0u}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

AudioSettings::~AudioSettings() {
  // @@protoc_insertion_point(destructor:ai.inworld.engine.AudioSettings)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AudioSettings::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void AudioSettings::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AudioSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.engine.AudioSettings)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.stt_sample_rate_hertz_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.tts_sample_rate_hertz_) -
      reinterpret_cast<char*>(&_impl_.stt_sample_rate_hertz_)) + sizeof(_impl_.tts_sample_rate_hertz_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AudioSettings::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 stt_sample_rate_hertz = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.stt_sample_rate_hertz_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 tts_sample_rate_hertz = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.tts_sample_rate_hertz_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AudioSettings::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.engine.AudioSettings)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 stt_sample_rate_hertz = 1;
  if (this->_internal_stt_sample_rate_hertz() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_stt_sample_rate_hertz(), target);
  }

  // uint32 tts_sample_rate_hertz = 2;
  if (this->_internal_tts_sample_rate_hertz() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_tts_sample_rate_hertz(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.engine.AudioSettings)
  return target;
}

size_t AudioSettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.engine.AudioSettings)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 stt_sample_rate_hertz = 1;
  if (this->_internal_stt_sample_rate_hertz() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_stt_sample_rate_hertz());
  }

  // uint32 tts_sample_rate_hertz = 2;
  if (this->_internal_tts_sample_rate_hertz() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_tts_sample_rate_hertz());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AudioSettings::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AudioSettings::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AudioSettings::GetClassData() const { return &_class_data_; }


void AudioSettings::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AudioSettings*>(&to_msg);
  auto& from = static_cast<const AudioSettings&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.engine.AudioSettings)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_stt_sample_rate_hertz() != 0) {
    _this->_internal_set_stt_sample_rate_hertz(from._internal_stt_sample_rate_hertz());
  }
  if (from._internal_tts_sample_rate_hertz() != 0) {
    _this->_internal_set_tts_sample_rate_hertz(from._internal_tts_sample_rate_hertz());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AudioSettings::CopyFrom(const AudioSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.engine.AudioSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AudioSettings::IsInitialized() const {
  return true;
}

void AudioSettings::InternalSwap(AudioSettings* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AudioSettings, _impl_.tts_sample_rate_hertz_)
      + sizeof(AudioSettings::_impl_.tts_sample_rate_hertz_)
      - PROTOBUF_FIELD_OFFSET(AudioSettings, _impl_.stt_sample_rate_hertz_)>(
          reinterpret_cast<char*>(&_impl_.stt_sample_rate_hertz_),
          reinterpret_cast<char*>(&other->_impl_.stt_sample_rate_hertz_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AudioSettings::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_world_2dengine_2eproto_getter, &descriptor_table_world_2dengine_2eproto_once,
      file_level_metadata_world_2dengine_2eproto[9]);
}

// ===================================================================

class UserSettings_PlayerProfile_PlayerField::_Internal {
 public:
};

UserSettings_PlayerProfile_PlayerField::UserSettings_PlayerProfile_PlayerField(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.engine.UserSettings.PlayerProfile.PlayerField)
}
UserSettings_PlayerProfile_PlayerField::UserSettings_PlayerProfile_PlayerField(const UserSettings_PlayerProfile_PlayerField& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UserSettings_PlayerProfile_PlayerField* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.field_id_){}
    , decltype(_impl_.field_value_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.field_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.field_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_field_id().empty()) {
    _this->_impl_.field_id_.Set(from._internal_field_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.field_value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.field_value_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_field_value().empty()) {
    _this->_impl_.field_value_.Set(from._internal_field_value(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.engine.UserSettings.PlayerProfile.PlayerField)
}

inline void UserSettings_PlayerProfile_PlayerField::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.field_id_){}
    , decltype(_impl_.field_value_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.field_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.field_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.field_value_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.field_value_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UserSettings_PlayerProfile_PlayerField::~UserSettings_PlayerProfile_PlayerField() {
  // @@protoc_insertion_point(destructor:ai.inworld.engine.UserSettings.PlayerProfile.PlayerField)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UserSettings_PlayerProfile_PlayerField::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.field_id_.Destroy();
  _impl_.field_value_.Destroy();
}

void UserSettings_PlayerProfile_PlayerField::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UserSettings_PlayerProfile_PlayerField::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.engine.UserSettings.PlayerProfile.PlayerField)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.field_id_.ClearToEmpty();
  _impl_.field_value_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UserSettings_PlayerProfile_PlayerField::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string field_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_field_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.engine.UserSettings.PlayerProfile.PlayerField.field_id"));
        } else
          goto handle_unusual;
        continue;
      // string field_value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_field_value();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.engine.UserSettings.PlayerProfile.PlayerField.field_value"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UserSettings_PlayerProfile_PlayerField::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.engine.UserSettings.PlayerProfile.PlayerField)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string field_id = 1;
  if (!this->_internal_field_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_field_id().data(), static_cast<int>(this->_internal_field_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.UserSettings.PlayerProfile.PlayerField.field_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_field_id(), target);
  }

  // string field_value = 2;
  if (!this->_internal_field_value().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_field_value().data(), static_cast<int>(this->_internal_field_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.UserSettings.PlayerProfile.PlayerField.field_value");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_field_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.engine.UserSettings.PlayerProfile.PlayerField)
  return target;
}

size_t UserSettings_PlayerProfile_PlayerField::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.engine.UserSettings.PlayerProfile.PlayerField)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string field_id = 1;
  if (!this->_internal_field_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_field_id());
  }

  // string field_value = 2;
  if (!this->_internal_field_value().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_field_value());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UserSettings_PlayerProfile_PlayerField::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UserSettings_PlayerProfile_PlayerField::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UserSettings_PlayerProfile_PlayerField::GetClassData() const { return &_class_data_; }


void UserSettings_PlayerProfile_PlayerField::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UserSettings_PlayerProfile_PlayerField*>(&to_msg);
  auto& from = static_cast<const UserSettings_PlayerProfile_PlayerField&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.engine.UserSettings.PlayerProfile.PlayerField)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_field_id().empty()) {
    _this->_internal_set_field_id(from._internal_field_id());
  }
  if (!from._internal_field_value().empty()) {
    _this->_internal_set_field_value(from._internal_field_value());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UserSettings_PlayerProfile_PlayerField::CopyFrom(const UserSettings_PlayerProfile_PlayerField& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.engine.UserSettings.PlayerProfile.PlayerField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserSettings_PlayerProfile_PlayerField::IsInitialized() const {
  return true;
}

void UserSettings_PlayerProfile_PlayerField::InternalSwap(UserSettings_PlayerProfile_PlayerField* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.field_id_, lhs_arena,
      &other->_impl_.field_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.field_value_, lhs_arena,
      &other->_impl_.field_value_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata UserSettings_PlayerProfile_PlayerField::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_world_2dengine_2eproto_getter, &descriptor_table_world_2dengine_2eproto_once,
      file_level_metadata_world_2dengine_2eproto[10]);
}

// ===================================================================

class UserSettings_PlayerProfile::_Internal {
 public:
};

UserSettings_PlayerProfile::UserSettings_PlayerProfile(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.engine.UserSettings.PlayerProfile)
}
UserSettings_PlayerProfile::UserSettings_PlayerProfile(const UserSettings_PlayerProfile& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UserSettings_PlayerProfile* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.fields_){from._impl_.fields_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ai.inworld.engine.UserSettings.PlayerProfile)
}

inline void UserSettings_PlayerProfile::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.fields_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UserSettings_PlayerProfile::~UserSettings_PlayerProfile() {
  // @@protoc_insertion_point(destructor:ai.inworld.engine.UserSettings.PlayerProfile)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UserSettings_PlayerProfile::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.fields_.~RepeatedPtrField();
}

void UserSettings_PlayerProfile::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UserSettings_PlayerProfile::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.engine.UserSettings.PlayerProfile)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.fields_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UserSettings_PlayerProfile::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .ai.inworld.engine.UserSettings.PlayerProfile.PlayerField fields = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_fields(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UserSettings_PlayerProfile::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.engine.UserSettings.PlayerProfile)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ai.inworld.engine.UserSettings.PlayerProfile.PlayerField fields = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_fields_size()); i < n; i++) {
    const auto& repfield = this->_internal_fields(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.engine.UserSettings.PlayerProfile)
  return target;
}

size_t UserSettings_PlayerProfile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.engine.UserSettings.PlayerProfile)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ai.inworld.engine.UserSettings.PlayerProfile.PlayerField fields = 3;
  total_size += 1UL * this->_internal_fields_size();
  for (const auto& msg : this->_impl_.fields_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UserSettings_PlayerProfile::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UserSettings_PlayerProfile::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UserSettings_PlayerProfile::GetClassData() const { return &_class_data_; }


void UserSettings_PlayerProfile::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UserSettings_PlayerProfile*>(&to_msg);
  auto& from = static_cast<const UserSettings_PlayerProfile&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.engine.UserSettings.PlayerProfile)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.fields_.MergeFrom(from._impl_.fields_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UserSettings_PlayerProfile::CopyFrom(const UserSettings_PlayerProfile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.engine.UserSettings.PlayerProfile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserSettings_PlayerProfile::IsInitialized() const {
  return true;
}

void UserSettings_PlayerProfile::InternalSwap(UserSettings_PlayerProfile* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.fields_.InternalSwap(&other->_impl_.fields_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UserSettings_PlayerProfile::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_world_2dengine_2eproto_getter, &descriptor_table_world_2dengine_2eproto_once,
      file_level_metadata_world_2dengine_2eproto[11]);
}

// ===================================================================

class UserSettings::_Internal {
 public:
  static const ::ai::inworld::engine::UserSettings_PlayerProfile& player_profile(const UserSettings* msg);
};

const ::ai::inworld::engine::UserSettings_PlayerProfile&
UserSettings::_Internal::player_profile(const UserSettings* msg) {
  return *msg->_impl_.player_profile_;
}
UserSettings::UserSettings(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.engine.UserSettings)
}
UserSettings::UserSettings(const UserSettings& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UserSettings* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.player_profile_){nullptr}
    , decltype(_impl_.view_transcript_consent_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_player_profile()) {
    _this->_impl_.player_profile_ = new ::ai::inworld::engine::UserSettings_PlayerProfile(*from._impl_.player_profile_);
  }
  _this->_impl_.view_transcript_consent_ = from._impl_.view_transcript_consent_;
  // @@protoc_insertion_point(copy_constructor:ai.inworld.engine.UserSettings)
}

inline void UserSettings::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.player_profile_){nullptr}
    , decltype(_impl_.view_transcript_consent_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UserSettings::~UserSettings() {
  // @@protoc_insertion_point(destructor:ai.inworld.engine.UserSettings)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UserSettings::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.player_profile_;
}

void UserSettings::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UserSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.engine.UserSettings)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.player_profile_ != nullptr) {
    delete _impl_.player_profile_;
  }
  _impl_.player_profile_ = nullptr;
  _impl_.view_transcript_consent_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UserSettings::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool view_transcript_consent = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.view_transcript_consent_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ai.inworld.engine.UserSettings.PlayerProfile player_profile = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_player_profile(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UserSettings::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.engine.UserSettings)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool view_transcript_consent = 1;
  if (this->_internal_view_transcript_consent() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_view_transcript_consent(), target);
  }

  // .ai.inworld.engine.UserSettings.PlayerProfile player_profile = 2;
  if (this->_internal_has_player_profile()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::player_profile(this),
        _Internal::player_profile(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.engine.UserSettings)
  return target;
}

size_t UserSettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.engine.UserSettings)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ai.inworld.engine.UserSettings.PlayerProfile player_profile = 2;
  if (this->_internal_has_player_profile()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.player_profile_);
  }

  // bool view_transcript_consent = 1;
  if (this->_internal_view_transcript_consent() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UserSettings::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UserSettings::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UserSettings::GetClassData() const { return &_class_data_; }


void UserSettings::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UserSettings*>(&to_msg);
  auto& from = static_cast<const UserSettings&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.engine.UserSettings)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_player_profile()) {
    _this->_internal_mutable_player_profile()->::ai::inworld::engine::UserSettings_PlayerProfile::MergeFrom(
        from._internal_player_profile());
  }
  if (from._internal_view_transcript_consent() != 0) {
    _this->_internal_set_view_transcript_consent(from._internal_view_transcript_consent());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UserSettings::CopyFrom(const UserSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.engine.UserSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserSettings::IsInitialized() const {
  return true;
}

void UserSettings::InternalSwap(UserSettings* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UserSettings, _impl_.view_transcript_consent_)
      + sizeof(UserSettings::_impl_.view_transcript_consent_)
      - PROTOBUF_FIELD_OFFSET(UserSettings, _impl_.player_profile_)>(
          reinterpret_cast<char*>(&_impl_.player_profile_),
          reinterpret_cast<char*>(&other->_impl_.player_profile_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UserSettings::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_world_2dengine_2eproto_getter, &descriptor_table_world_2dengine_2eproto_once,
      file_level_metadata_world_2dengine_2eproto[12]);
}

// ===================================================================

class SessionContinuation_ContinuationInfo::_Internal {
 public:
};

SessionContinuation_ContinuationInfo::SessionContinuation_ContinuationInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.engine.SessionContinuation.ContinuationInfo)
}
SessionContinuation_ContinuationInfo::SessionContinuation_ContinuationInfo(const SessionContinuation_ContinuationInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SessionContinuation_ContinuationInfo* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.millis_passed_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.millis_passed_ = from._impl_.millis_passed_;
  // @@protoc_insertion_point(copy_constructor:ai.inworld.engine.SessionContinuation.ContinuationInfo)
}

inline void SessionContinuation_ContinuationInfo::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.millis_passed_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SessionContinuation_ContinuationInfo::~SessionContinuation_ContinuationInfo() {
  // @@protoc_insertion_point(destructor:ai.inworld.engine.SessionContinuation.ContinuationInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SessionContinuation_ContinuationInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SessionContinuation_ContinuationInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SessionContinuation_ContinuationInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.engine.SessionContinuation.ContinuationInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.millis_passed_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SessionContinuation_ContinuationInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 millis_passed = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.millis_passed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SessionContinuation_ContinuationInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.engine.SessionContinuation.ContinuationInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 millis_passed = 1;
  if (this->_internal_millis_passed() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_millis_passed(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.engine.SessionContinuation.ContinuationInfo)
  return target;
}

size_t SessionContinuation_ContinuationInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.engine.SessionContinuation.ContinuationInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 millis_passed = 1;
  if (this->_internal_millis_passed() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_millis_passed());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SessionContinuation_ContinuationInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SessionContinuation_ContinuationInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SessionContinuation_ContinuationInfo::GetClassData() const { return &_class_data_; }


void SessionContinuation_ContinuationInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SessionContinuation_ContinuationInfo*>(&to_msg);
  auto& from = static_cast<const SessionContinuation_ContinuationInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.engine.SessionContinuation.ContinuationInfo)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_millis_passed() != 0) {
    _this->_internal_set_millis_passed(from._internal_millis_passed());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SessionContinuation_ContinuationInfo::CopyFrom(const SessionContinuation_ContinuationInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.engine.SessionContinuation.ContinuationInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SessionContinuation_ContinuationInfo::IsInitialized() const {
  return true;
}

void SessionContinuation_ContinuationInfo::InternalSwap(SessionContinuation_ContinuationInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.millis_passed_, other->_impl_.millis_passed_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SessionContinuation_ContinuationInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_world_2dengine_2eproto_getter, &descriptor_table_world_2dengine_2eproto_once,
      file_level_metadata_world_2dengine_2eproto[13]);
}

// ===================================================================

class SessionContinuation::_Internal {
 public:
  static const ::ai::inworld::engine::SessionContinuation_ContinuationInfo& continuation_info(const SessionContinuation* msg);
  static const ::ai::inworld::engine::PreviousDialog& previous_dialog(const SessionContinuation* msg);
};

const ::ai::inworld::engine::SessionContinuation_ContinuationInfo&
SessionContinuation::_Internal::continuation_info(const SessionContinuation* msg) {
  return *msg->_impl_.continuation_info_;
}
const ::ai::inworld::engine::PreviousDialog&
SessionContinuation::_Internal::previous_dialog(const SessionContinuation* msg) {
  return *msg->_impl_.previous_dialog_;
}
SessionContinuation::SessionContinuation(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.engine.SessionContinuation)
}
SessionContinuation::SessionContinuation(const SessionContinuation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SessionContinuation* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.previous_state_){}
    , decltype(_impl_.continuation_info_){nullptr}
    , decltype(_impl_.previous_dialog_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.previous_state_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.previous_state_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_previous_state().empty()) {
    _this->_impl_.previous_state_.Set(from._internal_previous_state(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_continuation_info()) {
    _this->_impl_.continuation_info_ = new ::ai::inworld::engine::SessionContinuation_ContinuationInfo(*from._impl_.continuation_info_);
  }
  if (from._internal_has_previous_dialog()) {
    _this->_impl_.previous_dialog_ = new ::ai::inworld::engine::PreviousDialog(*from._impl_.previous_dialog_);
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.engine.SessionContinuation)
}

inline void SessionContinuation::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.previous_state_){}
    , decltype(_impl_.continuation_info_){nullptr}
    , decltype(_impl_.previous_dialog_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.previous_state_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.previous_state_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SessionContinuation::~SessionContinuation() {
  // @@protoc_insertion_point(destructor:ai.inworld.engine.SessionContinuation)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SessionContinuation::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.previous_state_.Destroy();
  if (this != internal_default_instance()) delete _impl_.continuation_info_;
  if (this != internal_default_instance()) delete _impl_.previous_dialog_;
}

void SessionContinuation::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SessionContinuation::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.engine.SessionContinuation)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.previous_state_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.continuation_info_ != nullptr) {
    delete _impl_.continuation_info_;
  }
  _impl_.continuation_info_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.previous_dialog_ != nullptr) {
    delete _impl_.previous_dialog_;
  }
  _impl_.previous_dialog_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SessionContinuation::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .ai.inworld.engine.SessionContinuation.ContinuationInfo continuation_info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_continuation_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ai.inworld.engine.PreviousDialog previous_dialog = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_previous_dialog(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes previous_state = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_previous_state();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SessionContinuation::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.engine.SessionContinuation)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .ai.inworld.engine.SessionContinuation.ContinuationInfo continuation_info = 1;
  if (this->_internal_has_continuation_info()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::continuation_info(this),
        _Internal::continuation_info(this).GetCachedSize(), target, stream);
  }

  // .ai.inworld.engine.PreviousDialog previous_dialog = 2;
  if (this->_internal_has_previous_dialog()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::previous_dialog(this),
        _Internal::previous_dialog(this).GetCachedSize(), target, stream);
  }

  // bytes previous_state = 3;
  if (!this->_internal_previous_state().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_previous_state(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.engine.SessionContinuation)
  return target;
}

size_t SessionContinuation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.engine.SessionContinuation)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes previous_state = 3;
  if (!this->_internal_previous_state().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_previous_state());
  }

  // .ai.inworld.engine.SessionContinuation.ContinuationInfo continuation_info = 1;
  if (this->_internal_has_continuation_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.continuation_info_);
  }

  // .ai.inworld.engine.PreviousDialog previous_dialog = 2;
  if (this->_internal_has_previous_dialog()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.previous_dialog_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SessionContinuation::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SessionContinuation::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SessionContinuation::GetClassData() const { return &_class_data_; }


void SessionContinuation::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SessionContinuation*>(&to_msg);
  auto& from = static_cast<const SessionContinuation&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.engine.SessionContinuation)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_previous_state().empty()) {
    _this->_internal_set_previous_state(from._internal_previous_state());
  }
  if (from._internal_has_continuation_info()) {
    _this->_internal_mutable_continuation_info()->::ai::inworld::engine::SessionContinuation_ContinuationInfo::MergeFrom(
        from._internal_continuation_info());
  }
  if (from._internal_has_previous_dialog()) {
    _this->_internal_mutable_previous_dialog()->::ai::inworld::engine::PreviousDialog::MergeFrom(
        from._internal_previous_dialog());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SessionContinuation::CopyFrom(const SessionContinuation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.engine.SessionContinuation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SessionContinuation::IsInitialized() const {
  return true;
}

void SessionContinuation::InternalSwap(SessionContinuation* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.previous_state_, lhs_arena,
      &other->_impl_.previous_state_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SessionContinuation, _impl_.previous_dialog_)
      + sizeof(SessionContinuation::_impl_.previous_dialog_)
      - PROTOBUF_FIELD_OFFSET(SessionContinuation, _impl_.continuation_info_)>(
          reinterpret_cast<char*>(&_impl_.continuation_info_),
          reinterpret_cast<char*>(&other->_impl_.continuation_info_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SessionContinuation::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_world_2dengine_2eproto_getter, &descriptor_table_world_2dengine_2eproto_once,
      file_level_metadata_world_2dengine_2eproto[14]);
}

// ===================================================================

class PreviousDialog_Phrase::_Internal {
 public:
};

PreviousDialog_Phrase::PreviousDialog_Phrase(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.engine.PreviousDialog.Phrase)
}
PreviousDialog_Phrase::PreviousDialog_Phrase(const PreviousDialog_Phrase& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PreviousDialog_Phrase* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.phrase_){}
    , decltype(_impl_.talker_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.phrase_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.phrase_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_phrase().empty()) {
    _this->_impl_.phrase_.Set(from._internal_phrase(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.talker_ = from._impl_.talker_;
  // @@protoc_insertion_point(copy_constructor:ai.inworld.engine.PreviousDialog.Phrase)
}

inline void PreviousDialog_Phrase::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.phrase_){}
    , decltype(_impl_.talker_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.phrase_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.phrase_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

PreviousDialog_Phrase::~PreviousDialog_Phrase() {
  // @@protoc_insertion_point(destructor:ai.inworld.engine.PreviousDialog.Phrase)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PreviousDialog_Phrase::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.phrase_.Destroy();
}

void PreviousDialog_Phrase::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PreviousDialog_Phrase::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.engine.PreviousDialog.Phrase)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.phrase_.ClearToEmpty();
  _impl_.talker_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PreviousDialog_Phrase::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .ai.inworld.engine.PreviousDialog.DialogParticipant talker = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_talker(static_cast<::ai::inworld::engine::PreviousDialog_DialogParticipant>(val));
        } else
          goto handle_unusual;
        continue;
      // string phrase = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_phrase();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.engine.PreviousDialog.Phrase.phrase"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PreviousDialog_Phrase::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.engine.PreviousDialog.Phrase)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .ai.inworld.engine.PreviousDialog.DialogParticipant talker = 1;
  if (this->_internal_talker() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_talker(), target);
  }

  // string phrase = 2;
  if (!this->_internal_phrase().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_phrase().data(), static_cast<int>(this->_internal_phrase().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.PreviousDialog.Phrase.phrase");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_phrase(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.engine.PreviousDialog.Phrase)
  return target;
}

size_t PreviousDialog_Phrase::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.engine.PreviousDialog.Phrase)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string phrase = 2;
  if (!this->_internal_phrase().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_phrase());
  }

  // .ai.inworld.engine.PreviousDialog.DialogParticipant talker = 1;
  if (this->_internal_talker() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_talker());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PreviousDialog_Phrase::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PreviousDialog_Phrase::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PreviousDialog_Phrase::GetClassData() const { return &_class_data_; }


void PreviousDialog_Phrase::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PreviousDialog_Phrase*>(&to_msg);
  auto& from = static_cast<const PreviousDialog_Phrase&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.engine.PreviousDialog.Phrase)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_phrase().empty()) {
    _this->_internal_set_phrase(from._internal_phrase());
  }
  if (from._internal_talker() != 0) {
    _this->_internal_set_talker(from._internal_talker());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PreviousDialog_Phrase::CopyFrom(const PreviousDialog_Phrase& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.engine.PreviousDialog.Phrase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PreviousDialog_Phrase::IsInitialized() const {
  return true;
}

void PreviousDialog_Phrase::InternalSwap(PreviousDialog_Phrase* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.phrase_, lhs_arena,
      &other->_impl_.phrase_, rhs_arena
  );
  swap(_impl_.talker_, other->_impl_.talker_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PreviousDialog_Phrase::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_world_2dengine_2eproto_getter, &descriptor_table_world_2dengine_2eproto_once,
      file_level_metadata_world_2dengine_2eproto[15]);
}

// ===================================================================

class PreviousDialog::_Internal {
 public:
};

PreviousDialog::PreviousDialog(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.engine.PreviousDialog)
}
PreviousDialog::PreviousDialog(const PreviousDialog& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PreviousDialog* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.phrases_){from._impl_.phrases_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ai.inworld.engine.PreviousDialog)
}

inline void PreviousDialog::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.phrases_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

PreviousDialog::~PreviousDialog() {
  // @@protoc_insertion_point(destructor:ai.inworld.engine.PreviousDialog)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PreviousDialog::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.phrases_.~RepeatedPtrField();
}

void PreviousDialog::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PreviousDialog::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.engine.PreviousDialog)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.phrases_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PreviousDialog::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .ai.inworld.engine.PreviousDialog.Phrase phrases = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_phrases(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PreviousDialog::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.engine.PreviousDialog)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ai.inworld.engine.PreviousDialog.Phrase phrases = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_phrases_size()); i < n; i++) {
    const auto& repfield = this->_internal_phrases(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.engine.PreviousDialog)
  return target;
}

size_t PreviousDialog::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.engine.PreviousDialog)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ai.inworld.engine.PreviousDialog.Phrase phrases = 1;
  total_size += 1UL * this->_internal_phrases_size();
  for (const auto& msg : this->_impl_.phrases_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PreviousDialog::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PreviousDialog::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PreviousDialog::GetClassData() const { return &_class_data_; }


void PreviousDialog::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PreviousDialog*>(&to_msg);
  auto& from = static_cast<const PreviousDialog&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.engine.PreviousDialog)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.phrases_.MergeFrom(from._impl_.phrases_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PreviousDialog::CopyFrom(const PreviousDialog& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.engine.PreviousDialog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PreviousDialog::IsInitialized() const {
  return true;
}

void PreviousDialog::InternalSwap(PreviousDialog* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.phrases_.InternalSwap(&other->_impl_.phrases_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PreviousDialog::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_world_2dengine_2eproto_getter, &descriptor_table_world_2dengine_2eproto_once,
      file_level_metadata_world_2dengine_2eproto[16]);
}

// ===================================================================

class PreviousState_StateHolder::_Internal {
 public:
  static const ::ai::inworld::engine::PreviousDialog& previous_dialog(const PreviousState_StateHolder* msg);
};

const ::ai::inworld::engine::PreviousDialog&
PreviousState_StateHolder::_Internal::previous_dialog(const PreviousState_StateHolder* msg) {
  return *msg->_impl_.previous_dialog_;
}
void PreviousState_StateHolder::clear_packets() {
  _impl_.packets_.Clear();
}
PreviousState_StateHolder::PreviousState_StateHolder(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.engine.PreviousState.StateHolder)
}
PreviousState_StateHolder::PreviousState_StateHolder(const PreviousState_StateHolder& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PreviousState_StateHolder* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.packets_){from._impl_.packets_}
    , decltype(_impl_.relations_to_actors_){from._impl_.relations_to_actors_}
    , decltype(_impl_.brain_name_){}
    , decltype(_impl_.state_){}
    , decltype(_impl_.previous_dialog_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.brain_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.brain_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_brain_name().empty()) {
    _this->_impl_.brain_name_.Set(from._internal_brain_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.state_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.state_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_state().empty()) {
    _this->_impl_.state_.Set(from._internal_state(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_previous_dialog()) {
    _this->_impl_.previous_dialog_ = new ::ai::inworld::engine::PreviousDialog(*from._impl_.previous_dialog_);
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.engine.PreviousState.StateHolder)
}

inline void PreviousState_StateHolder::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.packets_){arena}
    , decltype(_impl_.relations_to_actors_){arena}
    , decltype(_impl_.brain_name_){}
    , decltype(_impl_.state_){}
    , decltype(_impl_.previous_dialog_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.brain_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.brain_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.state_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.state_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

PreviousState_StateHolder::~PreviousState_StateHolder() {
  // @@protoc_insertion_point(destructor:ai.inworld.engine.PreviousState.StateHolder)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PreviousState_StateHolder::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.packets_.~RepeatedPtrField();
  _impl_.relations_to_actors_.~RepeatedPtrField();
  _impl_.brain_name_.Destroy();
  _impl_.state_.Destroy();
  if (this != internal_default_instance()) delete _impl_.previous_dialog_;
}

void PreviousState_StateHolder::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PreviousState_StateHolder::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.engine.PreviousState.StateHolder)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.packets_.Clear();
  _impl_.relations_to_actors_.Clear();
  _impl_.brain_name_.ClearToEmpty();
  _impl_.state_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.previous_dialog_ != nullptr) {
    delete _impl_.previous_dialog_;
  }
  _impl_.previous_dialog_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PreviousState_StateHolder::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string brain_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_brain_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.engine.PreviousState.StateHolder.brain_name"));
        } else
          goto handle_unusual;
        continue;
      // bytes state = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_state();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ai.inworld.engine.PreviousDialog previous_dialog = 3 [deprecated = true];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_previous_dialog(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .ai.inworld.packets.InworldPacket packets = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_packets(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .ai.inworld.engine.ActorRelations relations_to_actors = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_relations_to_actors(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PreviousState_StateHolder::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.engine.PreviousState.StateHolder)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string brain_name = 1;
  if (!this->_internal_brain_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_brain_name().data(), static_cast<int>(this->_internal_brain_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.PreviousState.StateHolder.brain_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_brain_name(), target);
  }

  // bytes state = 2;
  if (!this->_internal_state().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_state(), target);
  }

  // .ai.inworld.engine.PreviousDialog previous_dialog = 3 [deprecated = true];
  if (this->_internal_has_previous_dialog()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::previous_dialog(this),
        _Internal::previous_dialog(this).GetCachedSize(), target, stream);
  }

  // repeated .ai.inworld.packets.InworldPacket packets = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_packets_size()); i < n; i++) {
    const auto& repfield = this->_internal_packets(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .ai.inworld.engine.ActorRelations relations_to_actors = 5;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_relations_to_actors_size()); i < n; i++) {
    const auto& repfield = this->_internal_relations_to_actors(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.engine.PreviousState.StateHolder)
  return target;
}

size_t PreviousState_StateHolder::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.engine.PreviousState.StateHolder)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ai.inworld.packets.InworldPacket packets = 4;
  total_size += 1UL * this->_internal_packets_size();
  for (const auto& msg : this->_impl_.packets_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ai.inworld.engine.ActorRelations relations_to_actors = 5;
  total_size += 1UL * this->_internal_relations_to_actors_size();
  for (const auto& msg : this->_impl_.relations_to_actors_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string brain_name = 1;
  if (!this->_internal_brain_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_brain_name());
  }

  // bytes state = 2;
  if (!this->_internal_state().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_state());
  }

  // .ai.inworld.engine.PreviousDialog previous_dialog = 3 [deprecated = true];
  if (this->_internal_has_previous_dialog()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.previous_dialog_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PreviousState_StateHolder::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PreviousState_StateHolder::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PreviousState_StateHolder::GetClassData() const { return &_class_data_; }


void PreviousState_StateHolder::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PreviousState_StateHolder*>(&to_msg);
  auto& from = static_cast<const PreviousState_StateHolder&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.engine.PreviousState.StateHolder)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.packets_.MergeFrom(from._impl_.packets_);
  _this->_impl_.relations_to_actors_.MergeFrom(from._impl_.relations_to_actors_);
  if (!from._internal_brain_name().empty()) {
    _this->_internal_set_brain_name(from._internal_brain_name());
  }
  if (!from._internal_state().empty()) {
    _this->_internal_set_state(from._internal_state());
  }
  if (from._internal_has_previous_dialog()) {
    _this->_internal_mutable_previous_dialog()->::ai::inworld::engine::PreviousDialog::MergeFrom(
        from._internal_previous_dialog());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PreviousState_StateHolder::CopyFrom(const PreviousState_StateHolder& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.engine.PreviousState.StateHolder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PreviousState_StateHolder::IsInitialized() const {
  return true;
}

void PreviousState_StateHolder::InternalSwap(PreviousState_StateHolder* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.packets_.InternalSwap(&other->_impl_.packets_);
  _impl_.relations_to_actors_.InternalSwap(&other->_impl_.relations_to_actors_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.brain_name_, lhs_arena,
      &other->_impl_.brain_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.state_, lhs_arena,
      &other->_impl_.state_, rhs_arena
  );
  swap(_impl_.previous_dialog_, other->_impl_.previous_dialog_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PreviousState_StateHolder::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_world_2dengine_2eproto_getter, &descriptor_table_world_2dengine_2eproto_once,
      file_level_metadata_world_2dengine_2eproto[17]);
}

// ===================================================================

class PreviousState::_Internal {
 public:
};

PreviousState::PreviousState(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.engine.PreviousState)
}
PreviousState::PreviousState(const PreviousState& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PreviousState* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.state_holders_){from._impl_.state_holders_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ai.inworld.engine.PreviousState)
}

inline void PreviousState::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.state_holders_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

PreviousState::~PreviousState() {
  // @@protoc_insertion_point(destructor:ai.inworld.engine.PreviousState)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PreviousState::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.state_holders_.~RepeatedPtrField();
}

void PreviousState::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PreviousState::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.engine.PreviousState)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.state_holders_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PreviousState::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .ai.inworld.engine.PreviousState.StateHolder state_holders = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_state_holders(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PreviousState::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.engine.PreviousState)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ai.inworld.engine.PreviousState.StateHolder state_holders = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_state_holders_size()); i < n; i++) {
    const auto& repfield = this->_internal_state_holders(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.engine.PreviousState)
  return target;
}

size_t PreviousState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.engine.PreviousState)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ai.inworld.engine.PreviousState.StateHolder state_holders = 1;
  total_size += 1UL * this->_internal_state_holders_size();
  for (const auto& msg : this->_impl_.state_holders_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PreviousState::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PreviousState::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PreviousState::GetClassData() const { return &_class_data_; }


void PreviousState::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PreviousState*>(&to_msg);
  auto& from = static_cast<const PreviousState&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.engine.PreviousState)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.state_holders_.MergeFrom(from._impl_.state_holders_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PreviousState::CopyFrom(const PreviousState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.engine.PreviousState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PreviousState::IsInitialized() const {
  return true;
}

void PreviousState::InternalSwap(PreviousState* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.state_holders_.InternalSwap(&other->_impl_.state_holders_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PreviousState::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_world_2dengine_2eproto_getter, &descriptor_table_world_2dengine_2eproto_once,
      file_level_metadata_world_2dengine_2eproto[18]);
}

// ===================================================================

class LoadSceneResponse_Agent_CharacterAssets::_Internal {
 public:
};

LoadSceneResponse_Agent_CharacterAssets::LoadSceneResponse_Agent_CharacterAssets(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.engine.LoadSceneResponse.Agent.CharacterAssets)
}
LoadSceneResponse_Agent_CharacterAssets::LoadSceneResponse_Agent_CharacterAssets(const LoadSceneResponse_Agent_CharacterAssets& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LoadSceneResponse_Agent_CharacterAssets* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.rpm_model_uri_){}
    , decltype(_impl_.rpm_image_uri_portrait_){}
    , decltype(_impl_.rpm_image_uri_posture_){}
    , decltype(_impl_.avatar_img_){}
    , decltype(_impl_.avatar_img_original_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.rpm_model_uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.rpm_model_uri_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_rpm_model_uri().empty()) {
    _this->_impl_.rpm_model_uri_.Set(from._internal_rpm_model_uri(), 
      _this->GetArenaForAllocation());
  }
  _impl_.rpm_image_uri_portrait_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.rpm_image_uri_portrait_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_rpm_image_uri_portrait().empty()) {
    _this->_impl_.rpm_image_uri_portrait_.Set(from._internal_rpm_image_uri_portrait(), 
      _this->GetArenaForAllocation());
  }
  _impl_.rpm_image_uri_posture_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.rpm_image_uri_posture_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_rpm_image_uri_posture().empty()) {
    _this->_impl_.rpm_image_uri_posture_.Set(from._internal_rpm_image_uri_posture(), 
      _this->GetArenaForAllocation());
  }
  _impl_.avatar_img_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.avatar_img_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_avatar_img().empty()) {
    _this->_impl_.avatar_img_.Set(from._internal_avatar_img(), 
      _this->GetArenaForAllocation());
  }
  _impl_.avatar_img_original_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.avatar_img_original_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_avatar_img_original().empty()) {
    _this->_impl_.avatar_img_original_.Set(from._internal_avatar_img_original(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.engine.LoadSceneResponse.Agent.CharacterAssets)
}

inline void LoadSceneResponse_Agent_CharacterAssets::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.rpm_model_uri_){}
    , decltype(_impl_.rpm_image_uri_portrait_){}
    , decltype(_impl_.rpm_image_uri_posture_){}
    , decltype(_impl_.avatar_img_){}
    , decltype(_impl_.avatar_img_original_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.rpm_model_uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.rpm_model_uri_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.rpm_image_uri_portrait_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.rpm_image_uri_portrait_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.rpm_image_uri_posture_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.rpm_image_uri_posture_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.avatar_img_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.avatar_img_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.avatar_img_original_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.avatar_img_original_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

LoadSceneResponse_Agent_CharacterAssets::~LoadSceneResponse_Agent_CharacterAssets() {
  // @@protoc_insertion_point(destructor:ai.inworld.engine.LoadSceneResponse.Agent.CharacterAssets)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LoadSceneResponse_Agent_CharacterAssets::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.rpm_model_uri_.Destroy();
  _impl_.rpm_image_uri_portrait_.Destroy();
  _impl_.rpm_image_uri_posture_.Destroy();
  _impl_.avatar_img_.Destroy();
  _impl_.avatar_img_original_.Destroy();
}

void LoadSceneResponse_Agent_CharacterAssets::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LoadSceneResponse_Agent_CharacterAssets::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.engine.LoadSceneResponse.Agent.CharacterAssets)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rpm_model_uri_.ClearToEmpty();
  _impl_.rpm_image_uri_portrait_.ClearToEmpty();
  _impl_.rpm_image_uri_posture_.ClearToEmpty();
  _impl_.avatar_img_.ClearToEmpty();
  _impl_.avatar_img_original_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LoadSceneResponse_Agent_CharacterAssets::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string rpm_model_uri = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_rpm_model_uri();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.engine.LoadSceneResponse.Agent.CharacterAssets.rpm_model_uri"));
        } else
          goto handle_unusual;
        continue;
      // string rpm_image_uri_portrait = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_rpm_image_uri_portrait();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.engine.LoadSceneResponse.Agent.CharacterAssets.rpm_image_uri_portrait"));
        } else
          goto handle_unusual;
        continue;
      // string rpm_image_uri_posture = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_rpm_image_uri_posture();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.engine.LoadSceneResponse.Agent.CharacterAssets.rpm_image_uri_posture"));
        } else
          goto handle_unusual;
        continue;
      // string avatar_img = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_avatar_img();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.engine.LoadSceneResponse.Agent.CharacterAssets.avatar_img"));
        } else
          goto handle_unusual;
        continue;
      // string avatar_img_original = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_avatar_img_original();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.engine.LoadSceneResponse.Agent.CharacterAssets.avatar_img_original"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LoadSceneResponse_Agent_CharacterAssets::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.engine.LoadSceneResponse.Agent.CharacterAssets)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string rpm_model_uri = 1;
  if (!this->_internal_rpm_model_uri().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rpm_model_uri().data(), static_cast<int>(this->_internal_rpm_model_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.LoadSceneResponse.Agent.CharacterAssets.rpm_model_uri");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_rpm_model_uri(), target);
  }

  // string rpm_image_uri_portrait = 2;
  if (!this->_internal_rpm_image_uri_portrait().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rpm_image_uri_portrait().data(), static_cast<int>(this->_internal_rpm_image_uri_portrait().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.LoadSceneResponse.Agent.CharacterAssets.rpm_image_uri_portrait");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rpm_image_uri_portrait(), target);
  }

  // string rpm_image_uri_posture = 3;
  if (!this->_internal_rpm_image_uri_posture().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rpm_image_uri_posture().data(), static_cast<int>(this->_internal_rpm_image_uri_posture().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.LoadSceneResponse.Agent.CharacterAssets.rpm_image_uri_posture");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_rpm_image_uri_posture(), target);
  }

  // string avatar_img = 4;
  if (!this->_internal_avatar_img().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_avatar_img().data(), static_cast<int>(this->_internal_avatar_img().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.LoadSceneResponse.Agent.CharacterAssets.avatar_img");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_avatar_img(), target);
  }

  // string avatar_img_original = 5;
  if (!this->_internal_avatar_img_original().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_avatar_img_original().data(), static_cast<int>(this->_internal_avatar_img_original().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.LoadSceneResponse.Agent.CharacterAssets.avatar_img_original");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_avatar_img_original(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.engine.LoadSceneResponse.Agent.CharacterAssets)
  return target;
}

size_t LoadSceneResponse_Agent_CharacterAssets::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.engine.LoadSceneResponse.Agent.CharacterAssets)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string rpm_model_uri = 1;
  if (!this->_internal_rpm_model_uri().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rpm_model_uri());
  }

  // string rpm_image_uri_portrait = 2;
  if (!this->_internal_rpm_image_uri_portrait().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rpm_image_uri_portrait());
  }

  // string rpm_image_uri_posture = 3;
  if (!this->_internal_rpm_image_uri_posture().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rpm_image_uri_posture());
  }

  // string avatar_img = 4;
  if (!this->_internal_avatar_img().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_avatar_img());
  }

  // string avatar_img_original = 5;
  if (!this->_internal_avatar_img_original().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_avatar_img_original());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LoadSceneResponse_Agent_CharacterAssets::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LoadSceneResponse_Agent_CharacterAssets::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LoadSceneResponse_Agent_CharacterAssets::GetClassData() const { return &_class_data_; }


void LoadSceneResponse_Agent_CharacterAssets::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LoadSceneResponse_Agent_CharacterAssets*>(&to_msg);
  auto& from = static_cast<const LoadSceneResponse_Agent_CharacterAssets&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.engine.LoadSceneResponse.Agent.CharacterAssets)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_rpm_model_uri().empty()) {
    _this->_internal_set_rpm_model_uri(from._internal_rpm_model_uri());
  }
  if (!from._internal_rpm_image_uri_portrait().empty()) {
    _this->_internal_set_rpm_image_uri_portrait(from._internal_rpm_image_uri_portrait());
  }
  if (!from._internal_rpm_image_uri_posture().empty()) {
    _this->_internal_set_rpm_image_uri_posture(from._internal_rpm_image_uri_posture());
  }
  if (!from._internal_avatar_img().empty()) {
    _this->_internal_set_avatar_img(from._internal_avatar_img());
  }
  if (!from._internal_avatar_img_original().empty()) {
    _this->_internal_set_avatar_img_original(from._internal_avatar_img_original());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LoadSceneResponse_Agent_CharacterAssets::CopyFrom(const LoadSceneResponse_Agent_CharacterAssets& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.engine.LoadSceneResponse.Agent.CharacterAssets)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoadSceneResponse_Agent_CharacterAssets::IsInitialized() const {
  return true;
}

void LoadSceneResponse_Agent_CharacterAssets::InternalSwap(LoadSceneResponse_Agent_CharacterAssets* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.rpm_model_uri_, lhs_arena,
      &other->_impl_.rpm_model_uri_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.rpm_image_uri_portrait_, lhs_arena,
      &other->_impl_.rpm_image_uri_portrait_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.rpm_image_uri_posture_, lhs_arena,
      &other->_impl_.rpm_image_uri_posture_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.avatar_img_, lhs_arena,
      &other->_impl_.avatar_img_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.avatar_img_original_, lhs_arena,
      &other->_impl_.avatar_img_original_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata LoadSceneResponse_Agent_CharacterAssets::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_world_2dengine_2eproto_getter, &descriptor_table_world_2dengine_2eproto_once,
      file_level_metadata_world_2dengine_2eproto[19]);
}

// ===================================================================

class LoadSceneResponse_Agent::_Internal {
 public:
  static const ::ai::inworld::engine::LoadSceneResponse_Agent_CharacterAssets& character_assets(const LoadSceneResponse_Agent* msg);
};

const ::ai::inworld::engine::LoadSceneResponse_Agent_CharacterAssets&
LoadSceneResponse_Agent::_Internal::character_assets(const LoadSceneResponse_Agent* msg) {
  return *msg->_impl_.character_assets_;
}
LoadSceneResponse_Agent::LoadSceneResponse_Agent(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.engine.LoadSceneResponse.Agent)
}
LoadSceneResponse_Agent::LoadSceneResponse_Agent(const LoadSceneResponse_Agent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LoadSceneResponse_Agent* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.agent_id_){}
    , decltype(_impl_.brain_name_){}
    , decltype(_impl_.given_name_){}
    , decltype(_impl_.character_assets_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.agent_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.agent_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_agent_id().empty()) {
    _this->_impl_.agent_id_.Set(from._internal_agent_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.brain_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.brain_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_brain_name().empty()) {
    _this->_impl_.brain_name_.Set(from._internal_brain_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.given_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.given_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_given_name().empty()) {
    _this->_impl_.given_name_.Set(from._internal_given_name(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_character_assets()) {
    _this->_impl_.character_assets_ = new ::ai::inworld::engine::LoadSceneResponse_Agent_CharacterAssets(*from._impl_.character_assets_);
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.engine.LoadSceneResponse.Agent)
}

inline void LoadSceneResponse_Agent::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.agent_id_){}
    , decltype(_impl_.brain_name_){}
    , decltype(_impl_.given_name_){}
    , decltype(_impl_.character_assets_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.agent_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.agent_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.brain_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.brain_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.given_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.given_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

LoadSceneResponse_Agent::~LoadSceneResponse_Agent() {
  // @@protoc_insertion_point(destructor:ai.inworld.engine.LoadSceneResponse.Agent)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LoadSceneResponse_Agent::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.agent_id_.Destroy();
  _impl_.brain_name_.Destroy();
  _impl_.given_name_.Destroy();
  if (this != internal_default_instance()) delete _impl_.character_assets_;
}

void LoadSceneResponse_Agent::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LoadSceneResponse_Agent::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.engine.LoadSceneResponse.Agent)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.agent_id_.ClearToEmpty();
  _impl_.brain_name_.ClearToEmpty();
  _impl_.given_name_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.character_assets_ != nullptr) {
    delete _impl_.character_assets_;
  }
  _impl_.character_assets_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LoadSceneResponse_Agent::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string agent_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_agent_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.engine.LoadSceneResponse.Agent.agent_id"));
        } else
          goto handle_unusual;
        continue;
      // string brain_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_brain_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.engine.LoadSceneResponse.Agent.brain_name"));
        } else
          goto handle_unusual;
        continue;
      // string given_name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_given_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.engine.LoadSceneResponse.Agent.given_name"));
        } else
          goto handle_unusual;
        continue;
      // .ai.inworld.engine.LoadSceneResponse.Agent.CharacterAssets character_assets = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_character_assets(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LoadSceneResponse_Agent::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.engine.LoadSceneResponse.Agent)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string agent_id = 1;
  if (!this->_internal_agent_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_agent_id().data(), static_cast<int>(this->_internal_agent_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.LoadSceneResponse.Agent.agent_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_agent_id(), target);
  }

  // string brain_name = 2;
  if (!this->_internal_brain_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_brain_name().data(), static_cast<int>(this->_internal_brain_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.LoadSceneResponse.Agent.brain_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_brain_name(), target);
  }

  // string given_name = 3;
  if (!this->_internal_given_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_given_name().data(), static_cast<int>(this->_internal_given_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.LoadSceneResponse.Agent.given_name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_given_name(), target);
  }

  // .ai.inworld.engine.LoadSceneResponse.Agent.CharacterAssets character_assets = 4;
  if (this->_internal_has_character_assets()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::character_assets(this),
        _Internal::character_assets(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.engine.LoadSceneResponse.Agent)
  return target;
}

size_t LoadSceneResponse_Agent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.engine.LoadSceneResponse.Agent)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string agent_id = 1;
  if (!this->_internal_agent_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_agent_id());
  }

  // string brain_name = 2;
  if (!this->_internal_brain_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_brain_name());
  }

  // string given_name = 3;
  if (!this->_internal_given_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_given_name());
  }

  // .ai.inworld.engine.LoadSceneResponse.Agent.CharacterAssets character_assets = 4;
  if (this->_internal_has_character_assets()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.character_assets_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LoadSceneResponse_Agent::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LoadSceneResponse_Agent::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LoadSceneResponse_Agent::GetClassData() const { return &_class_data_; }


void LoadSceneResponse_Agent::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LoadSceneResponse_Agent*>(&to_msg);
  auto& from = static_cast<const LoadSceneResponse_Agent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.engine.LoadSceneResponse.Agent)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_agent_id().empty()) {
    _this->_internal_set_agent_id(from._internal_agent_id());
  }
  if (!from._internal_brain_name().empty()) {
    _this->_internal_set_brain_name(from._internal_brain_name());
  }
  if (!from._internal_given_name().empty()) {
    _this->_internal_set_given_name(from._internal_given_name());
  }
  if (from._internal_has_character_assets()) {
    _this->_internal_mutable_character_assets()->::ai::inworld::engine::LoadSceneResponse_Agent_CharacterAssets::MergeFrom(
        from._internal_character_assets());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LoadSceneResponse_Agent::CopyFrom(const LoadSceneResponse_Agent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.engine.LoadSceneResponse.Agent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoadSceneResponse_Agent::IsInitialized() const {
  return true;
}

void LoadSceneResponse_Agent::InternalSwap(LoadSceneResponse_Agent* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.agent_id_, lhs_arena,
      &other->_impl_.agent_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.brain_name_, lhs_arena,
      &other->_impl_.brain_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.given_name_, lhs_arena,
      &other->_impl_.given_name_, rhs_arena
  );
  swap(_impl_.character_assets_, other->_impl_.character_assets_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LoadSceneResponse_Agent::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_world_2dengine_2eproto_getter, &descriptor_table_world_2dengine_2eproto_once,
      file_level_metadata_world_2dengine_2eproto[20]);
}

// ===================================================================

class LoadSceneResponse::_Internal {
 public:
  static const ::ai::inworld::engine::PreviousState& previous_state(const LoadSceneResponse* msg);
};

const ::ai::inworld::engine::PreviousState&
LoadSceneResponse::_Internal::previous_state(const LoadSceneResponse* msg) {
  return *msg->_impl_.previous_state_;
}
LoadSceneResponse::LoadSceneResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.engine.LoadSceneResponse)
}
LoadSceneResponse::LoadSceneResponse(const LoadSceneResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LoadSceneResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.agents_){from._impl_.agents_}
    , decltype(_impl_.key_){}
    , decltype(_impl_.previous_state_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.key_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.key_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_key().empty()) {
    _this->_impl_.key_.Set(from._internal_key(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_previous_state()) {
    _this->_impl_.previous_state_ = new ::ai::inworld::engine::PreviousState(*from._impl_.previous_state_);
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.engine.LoadSceneResponse)
}

inline void LoadSceneResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.agents_){arena}
    , decltype(_impl_.key_){}
    , decltype(_impl_.previous_state_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.key_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.key_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

LoadSceneResponse::~LoadSceneResponse() {
  // @@protoc_insertion_point(destructor:ai.inworld.engine.LoadSceneResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LoadSceneResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.agents_.~RepeatedPtrField();
  _impl_.key_.Destroy();
  if (this != internal_default_instance()) delete _impl_.previous_state_;
}

void LoadSceneResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LoadSceneResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.engine.LoadSceneResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.agents_.Clear();
  _impl_.key_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.previous_state_ != nullptr) {
    delete _impl_.previous_state_;
  }
  _impl_.previous_state_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LoadSceneResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .ai.inworld.engine.LoadSceneResponse.Agent agents = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_agents(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string key = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_key();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.engine.LoadSceneResponse.key"));
        } else
          goto handle_unusual;
        continue;
      // .ai.inworld.engine.PreviousState previous_state = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_previous_state(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LoadSceneResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.engine.LoadSceneResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ai.inworld.engine.LoadSceneResponse.Agent agents = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_agents_size()); i < n; i++) {
    const auto& repfield = this->_internal_agents(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string key = 2;
  if (!this->_internal_key().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key().data(), static_cast<int>(this->_internal_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.LoadSceneResponse.key");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_key(), target);
  }

  // .ai.inworld.engine.PreviousState previous_state = 3;
  if (this->_internal_has_previous_state()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::previous_state(this),
        _Internal::previous_state(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.engine.LoadSceneResponse)
  return target;
}

size_t LoadSceneResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.engine.LoadSceneResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ai.inworld.engine.LoadSceneResponse.Agent agents = 1;
  total_size += 1UL * this->_internal_agents_size();
  for (const auto& msg : this->_impl_.agents_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string key = 2;
  if (!this->_internal_key().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key());
  }

  // .ai.inworld.engine.PreviousState previous_state = 3;
  if (this->_internal_has_previous_state()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.previous_state_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LoadSceneResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LoadSceneResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LoadSceneResponse::GetClassData() const { return &_class_data_; }


void LoadSceneResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LoadSceneResponse*>(&to_msg);
  auto& from = static_cast<const LoadSceneResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.engine.LoadSceneResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.agents_.MergeFrom(from._impl_.agents_);
  if (!from._internal_key().empty()) {
    _this->_internal_set_key(from._internal_key());
  }
  if (from._internal_has_previous_state()) {
    _this->_internal_mutable_previous_state()->::ai::inworld::engine::PreviousState::MergeFrom(
        from._internal_previous_state());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LoadSceneResponse::CopyFrom(const LoadSceneResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.engine.LoadSceneResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoadSceneResponse::IsInitialized() const {
  return true;
}

void LoadSceneResponse::InternalSwap(LoadSceneResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.agents_.InternalSwap(&other->_impl_.agents_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.key_, lhs_arena,
      &other->_impl_.key_, rhs_arena
  );
  swap(_impl_.previous_state_, other->_impl_.previous_state_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LoadSceneResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_world_2dengine_2eproto_getter, &descriptor_table_world_2dengine_2eproto_once,
      file_level_metadata_world_2dengine_2eproto[21]);
}

// ===================================================================

class LogErrorRequest::_Internal {
 public:
};

LogErrorRequest::LogErrorRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.engine.LogErrorRequest)
}
LogErrorRequest::LogErrorRequest(const LogErrorRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LogErrorRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.key_){}
    , decltype(_impl_.message_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.key_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.key_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_key().empty()) {
    _this->_impl_.key_.Set(from._internal_key(), 
      _this->GetArenaForAllocation());
  }
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.engine.LogErrorRequest)
}

inline void LogErrorRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.key_){}
    , decltype(_impl_.message_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.key_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.key_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

LogErrorRequest::~LogErrorRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.engine.LogErrorRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LogErrorRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.key_.Destroy();
  _impl_.message_.Destroy();
}

void LogErrorRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LogErrorRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.engine.LogErrorRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.key_.ClearToEmpty();
  _impl_.message_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LogErrorRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_key();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.engine.LogErrorRequest.key"));
        } else
          goto handle_unusual;
        continue;
      // string message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.engine.LogErrorRequest.message"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LogErrorRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.engine.LogErrorRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (!this->_internal_key().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key().data(), static_cast<int>(this->_internal_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.LogErrorRequest.key");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_key(), target);
  }

  // string message = 2;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.LogErrorRequest.message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.engine.LogErrorRequest)
  return target;
}

size_t LogErrorRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.engine.LogErrorRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string key = 1;
  if (!this->_internal_key().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key());
  }

  // string message = 2;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LogErrorRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LogErrorRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LogErrorRequest::GetClassData() const { return &_class_data_; }


void LogErrorRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LogErrorRequest*>(&to_msg);
  auto& from = static_cast<const LogErrorRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.engine.LogErrorRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_key().empty()) {
    _this->_internal_set_key(from._internal_key());
  }
  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LogErrorRequest::CopyFrom(const LogErrorRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.engine.LogErrorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogErrorRequest::IsInitialized() const {
  return true;
}

void LogErrorRequest::InternalSwap(LogErrorRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.key_, lhs_arena,
      &other->_impl_.key_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata LogErrorRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_world_2dengine_2eproto_getter, &descriptor_table_world_2dengine_2eproto_once,
      file_level_metadata_world_2dengine_2eproto[22]);
}

// ===================================================================

class VoicePreviewRequest::_Internal {
 public:
  static const ::ai::inworld::packets::EmotionEvent& emotions(const VoicePreviewRequest* msg);
  static const ::ai::inworld::voices::Voice& voice(const VoicePreviewRequest* msg);
};

const ::ai::inworld::packets::EmotionEvent&
VoicePreviewRequest::_Internal::emotions(const VoicePreviewRequest* msg) {
  return *msg->_impl_.emotions_;
}
const ::ai::inworld::voices::Voice&
VoicePreviewRequest::_Internal::voice(const VoicePreviewRequest* msg) {
  return *msg->_impl_.voice_;
}
void VoicePreviewRequest::clear_emotions() {
  if (GetArenaForAllocation() == nullptr && _impl_.emotions_ != nullptr) {
    delete _impl_.emotions_;
  }
  _impl_.emotions_ = nullptr;
}
void VoicePreviewRequest::clear_voice() {
  if (GetArenaForAllocation() == nullptr && _impl_.voice_ != nullptr) {
    delete _impl_.voice_;
  }
  _impl_.voice_ = nullptr;
}
VoicePreviewRequest::VoicePreviewRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.engine.VoicePreviewRequest)
}
VoicePreviewRequest::VoicePreviewRequest(const VoicePreviewRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  VoicePreviewRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.text_){}
    , decltype(_impl_.emotions_){nullptr}
    , decltype(_impl_.voice_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.text_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.text_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_text().empty()) {
    _this->_impl_.text_.Set(from._internal_text(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_emotions()) {
    _this->_impl_.emotions_ = new ::ai::inworld::packets::EmotionEvent(*from._impl_.emotions_);
  }
  if (from._internal_has_voice()) {
    _this->_impl_.voice_ = new ::ai::inworld::voices::Voice(*from._impl_.voice_);
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.engine.VoicePreviewRequest)
}

inline void VoicePreviewRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.text_){}
    , decltype(_impl_.emotions_){nullptr}
    , decltype(_impl_.voice_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.text_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.text_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

VoicePreviewRequest::~VoicePreviewRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.engine.VoicePreviewRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void VoicePreviewRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.text_.Destroy();
  if (this != internal_default_instance()) delete _impl_.emotions_;
  if (this != internal_default_instance()) delete _impl_.voice_;
}

void VoicePreviewRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void VoicePreviewRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.engine.VoicePreviewRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.text_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.emotions_ != nullptr) {
    delete _impl_.emotions_;
  }
  _impl_.emotions_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.voice_ != nullptr) {
    delete _impl_.voice_;
  }
  _impl_.voice_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VoicePreviewRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string text = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_text();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.engine.VoicePreviewRequest.text"));
        } else
          goto handle_unusual;
        continue;
      // .ai.inworld.packets.EmotionEvent emotions = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_emotions(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ai.inworld.voices.Voice voice = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_voice(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* VoicePreviewRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.engine.VoicePreviewRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1;
  if (!this->_internal_text().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_text().data(), static_cast<int>(this->_internal_text().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.VoicePreviewRequest.text");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_text(), target);
  }

  // .ai.inworld.packets.EmotionEvent emotions = 2;
  if (this->_internal_has_emotions()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::emotions(this),
        _Internal::emotions(this).GetCachedSize(), target, stream);
  }

  // .ai.inworld.voices.Voice voice = 3;
  if (this->_internal_has_voice()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::voice(this),
        _Internal::voice(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.engine.VoicePreviewRequest)
  return target;
}

size_t VoicePreviewRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.engine.VoicePreviewRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string text = 1;
  if (!this->_internal_text().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_text());
  }

  // .ai.inworld.packets.EmotionEvent emotions = 2;
  if (this->_internal_has_emotions()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.emotions_);
  }

  // .ai.inworld.voices.Voice voice = 3;
  if (this->_internal_has_voice()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.voice_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData VoicePreviewRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    VoicePreviewRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*VoicePreviewRequest::GetClassData() const { return &_class_data_; }


void VoicePreviewRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<VoicePreviewRequest*>(&to_msg);
  auto& from = static_cast<const VoicePreviewRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.engine.VoicePreviewRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_text().empty()) {
    _this->_internal_set_text(from._internal_text());
  }
  if (from._internal_has_emotions()) {
    _this->_internal_mutable_emotions()->::ai::inworld::packets::EmotionEvent::MergeFrom(
        from._internal_emotions());
  }
  if (from._internal_has_voice()) {
    _this->_internal_mutable_voice()->::ai::inworld::voices::Voice::MergeFrom(
        from._internal_voice());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void VoicePreviewRequest::CopyFrom(const VoicePreviewRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.engine.VoicePreviewRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VoicePreviewRequest::IsInitialized() const {
  return true;
}

void VoicePreviewRequest::InternalSwap(VoicePreviewRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.text_, lhs_arena,
      &other->_impl_.text_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(VoicePreviewRequest, _impl_.voice_)
      + sizeof(VoicePreviewRequest::_impl_.voice_)
      - PROTOBUF_FIELD_OFFSET(VoicePreviewRequest, _impl_.emotions_)>(
          reinterpret_cast<char*>(&_impl_.emotions_),
          reinterpret_cast<char*>(&other->_impl_.emotions_));
}

::PROTOBUF_NAMESPACE_ID::Metadata VoicePreviewRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_world_2dengine_2eproto_getter, &descriptor_table_world_2dengine_2eproto_once,
      file_level_metadata_world_2dengine_2eproto[23]);
}

// ===================================================================

class VoicePreviewResponse::_Internal {
 public:
};

VoicePreviewResponse::VoicePreviewResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.engine.VoicePreviewResponse)
}
VoicePreviewResponse::VoicePreviewResponse(const VoicePreviewResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  VoicePreviewResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.audio_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.audio_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.audio_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_audio().empty()) {
    _this->_impl_.audio_.Set(from._internal_audio(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.engine.VoicePreviewResponse)
}

inline void VoicePreviewResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.audio_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.audio_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.audio_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

VoicePreviewResponse::~VoicePreviewResponse() {
  // @@protoc_insertion_point(destructor:ai.inworld.engine.VoicePreviewResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void VoicePreviewResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.audio_.Destroy();
}

void VoicePreviewResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void VoicePreviewResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.engine.VoicePreviewResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.audio_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VoicePreviewResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes audio = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_audio();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* VoicePreviewResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.engine.VoicePreviewResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes audio = 1;
  if (!this->_internal_audio().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_audio(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.engine.VoicePreviewResponse)
  return target;
}

size_t VoicePreviewResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.engine.VoicePreviewResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes audio = 1;
  if (!this->_internal_audio().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_audio());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData VoicePreviewResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    VoicePreviewResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*VoicePreviewResponse::GetClassData() const { return &_class_data_; }


void VoicePreviewResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<VoicePreviewResponse*>(&to_msg);
  auto& from = static_cast<const VoicePreviewResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.engine.VoicePreviewResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_audio().empty()) {
    _this->_internal_set_audio(from._internal_audio());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void VoicePreviewResponse::CopyFrom(const VoicePreviewResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.engine.VoicePreviewResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VoicePreviewResponse::IsInitialized() const {
  return true;
}

void VoicePreviewResponse::InternalSwap(VoicePreviewResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.audio_, lhs_arena,
      &other->_impl_.audio_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata VoicePreviewResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_world_2dengine_2eproto_getter, &descriptor_table_world_2dengine_2eproto_once,
      file_level_metadata_world_2dengine_2eproto[24]);
}

// ===================================================================

class ListBaseVoicesRequest::_Internal {
 public:
};

ListBaseVoicesRequest::ListBaseVoicesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.engine.ListBaseVoicesRequest)
}
ListBaseVoicesRequest::ListBaseVoicesRequest(const ListBaseVoicesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ListBaseVoicesRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.tts_types_){from._impl_.tts_types_}
    , /*decltype(_impl_._tts_types_cached_byte_size_)*/{0}
    , decltype(_impl_.language_code_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.language_code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.language_code_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_language_code().empty()) {
    _this->_impl_.language_code_.Set(from._internal_language_code(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.engine.ListBaseVoicesRequest)
}

inline void ListBaseVoicesRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.tts_types_){arena}
    , /*decltype(_impl_._tts_types_cached_byte_size_)*/{0}
    , decltype(_impl_.language_code_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.language_code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.language_code_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ListBaseVoicesRequest::~ListBaseVoicesRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.engine.ListBaseVoicesRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListBaseVoicesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.tts_types_.~RepeatedField();
  _impl_.language_code_.Destroy();
}

void ListBaseVoicesRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ListBaseVoicesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.engine.ListBaseVoicesRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tts_types_.Clear();
  _impl_.language_code_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListBaseVoicesRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string language_code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_language_code();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.engine.ListBaseVoicesRequest.language_code"));
        } else
          goto handle_unusual;
        continue;
      // repeated .ai.inworld.voices.TTSType tts_types = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedEnumParser(_internal_mutable_tts_types(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 16) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_add_tts_types(static_cast<::ai::inworld::voices::TTSType>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListBaseVoicesRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.engine.ListBaseVoicesRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string language_code = 1;
  if (!this->_internal_language_code().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_language_code().data(), static_cast<int>(this->_internal_language_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.ListBaseVoicesRequest.language_code");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_language_code(), target);
  }

  // repeated .ai.inworld.voices.TTSType tts_types = 2;
  {
    int byte_size = _impl_._tts_types_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          2, _impl_.tts_types_, byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.engine.ListBaseVoicesRequest)
  return target;
}

size_t ListBaseVoicesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.engine.ListBaseVoicesRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ai.inworld.voices.TTSType tts_types = 2;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->_internal_tts_types_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
        this->_internal_tts_types(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._tts_types_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // string language_code = 1;
  if (!this->_internal_language_code().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_language_code());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListBaseVoicesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ListBaseVoicesRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListBaseVoicesRequest::GetClassData() const { return &_class_data_; }


void ListBaseVoicesRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ListBaseVoicesRequest*>(&to_msg);
  auto& from = static_cast<const ListBaseVoicesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.engine.ListBaseVoicesRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.tts_types_.MergeFrom(from._impl_.tts_types_);
  if (!from._internal_language_code().empty()) {
    _this->_internal_set_language_code(from._internal_language_code());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListBaseVoicesRequest::CopyFrom(const ListBaseVoicesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.engine.ListBaseVoicesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListBaseVoicesRequest::IsInitialized() const {
  return true;
}

void ListBaseVoicesRequest::InternalSwap(ListBaseVoicesRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.tts_types_.InternalSwap(&other->_impl_.tts_types_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.language_code_, lhs_arena,
      &other->_impl_.language_code_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ListBaseVoicesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_world_2dengine_2eproto_getter, &descriptor_table_world_2dengine_2eproto_once,
      file_level_metadata_world_2dengine_2eproto[25]);
}

// ===================================================================

class ListBaseVoicesResponce_BaseVoice::_Internal {
 public:
  static const ::ai::inworld::voices::Voice_ElevenLabsMetadata& elevenlabs_metadata(const ListBaseVoicesResponce_BaseVoice* msg);
};

const ::ai::inworld::voices::Voice_ElevenLabsMetadata&
ListBaseVoicesResponce_BaseVoice::_Internal::elevenlabs_metadata(const ListBaseVoicesResponce_BaseVoice* msg) {
  return *msg->_impl_.tts_metadata_.elevenlabs_metadata_;
}
void ListBaseVoicesResponce_BaseVoice::set_allocated_elevenlabs_metadata(::ai::inworld::voices::Voice_ElevenLabsMetadata* elevenlabs_metadata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_tts_metadata();
  if (elevenlabs_metadata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(elevenlabs_metadata));
    if (message_arena != submessage_arena) {
      elevenlabs_metadata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, elevenlabs_metadata, submessage_arena);
    }
    set_has_elevenlabs_metadata();
    _impl_.tts_metadata_.elevenlabs_metadata_ = elevenlabs_metadata;
  }
  // @@protoc_insertion_point(field_set_allocated:ai.inworld.engine.ListBaseVoicesResponce.BaseVoice.elevenlabs_metadata)
}
void ListBaseVoicesResponce_BaseVoice::clear_elevenlabs_metadata() {
  if (_internal_has_elevenlabs_metadata()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.tts_metadata_.elevenlabs_metadata_;
    }
    clear_has_tts_metadata();
  }
}
ListBaseVoicesResponce_BaseVoice::ListBaseVoicesResponce_BaseVoice(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.engine.ListBaseVoicesResponce.BaseVoice)
}
ListBaseVoicesResponce_BaseVoice::ListBaseVoicesResponce_BaseVoice(const ListBaseVoicesResponce_BaseVoice& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ListBaseVoicesResponce_BaseVoice* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.language_codes_){from._impl_.language_codes_}
    , decltype(_impl_.name_){}
    , decltype(_impl_.gender_){}
    , decltype(_impl_.naturalsampleratehertz_){}
    , decltype(_impl_.age_){}
    , decltype(_impl_.tts_metadata_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.gender_, &from._impl_.gender_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.age_) -
    reinterpret_cast<char*>(&_impl_.gender_)) + sizeof(_impl_.age_));
  clear_has_tts_metadata();
  switch (from.tts_metadata_case()) {
    case kElevenlabsMetadata: {
      _this->_internal_mutable_elevenlabs_metadata()->::ai::inworld::voices::Voice_ElevenLabsMetadata::MergeFrom(
          from._internal_elevenlabs_metadata());
      break;
    }
    case TTS_METADATA_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.engine.ListBaseVoicesResponce.BaseVoice)
}

inline void ListBaseVoicesResponce_BaseVoice::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.language_codes_){arena}
    , decltype(_impl_.name_){}
    , decltype(_impl_.gender_){0}
    , decltype(_impl_.naturalsampleratehertz_){0}
    , decltype(_impl_.age_){0}
    , decltype(_impl_.tts_metadata_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  clear_has_tts_metadata();
}

ListBaseVoicesResponce_BaseVoice::~ListBaseVoicesResponce_BaseVoice() {
  // @@protoc_insertion_point(destructor:ai.inworld.engine.ListBaseVoicesResponce.BaseVoice)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListBaseVoicesResponce_BaseVoice::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.language_codes_.~RepeatedPtrField();
  _impl_.name_.Destroy();
  if (has_tts_metadata()) {
    clear_tts_metadata();
  }
}

void ListBaseVoicesResponce_BaseVoice::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ListBaseVoicesResponce_BaseVoice::clear_tts_metadata() {
// @@protoc_insertion_point(one_of_clear_start:ai.inworld.engine.ListBaseVoicesResponce.BaseVoice)
  switch (tts_metadata_case()) {
    case kElevenlabsMetadata: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.tts_metadata_.elevenlabs_metadata_;
      }
      break;
    }
    case TTS_METADATA_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = TTS_METADATA_NOT_SET;
}


void ListBaseVoicesResponce_BaseVoice::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.engine.ListBaseVoicesResponce.BaseVoice)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.language_codes_.Clear();
  _impl_.name_.ClearToEmpty();
  ::memset(&_impl_.gender_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.age_) -
      reinterpret_cast<char*>(&_impl_.gender_)) + sizeof(_impl_.age_));
  clear_tts_metadata();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListBaseVoicesResponce_BaseVoice::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string language_codes = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_language_codes();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.engine.ListBaseVoicesResponce.BaseVoice.language_codes"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.engine.ListBaseVoicesResponce.BaseVoice.name"));
        } else
          goto handle_unusual;
        continue;
      // .ai.inworld.voices.Gender gender = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_gender(static_cast<::ai::inworld::voices::Gender>(val));
        } else
          goto handle_unusual;
        continue;
      // int32 naturalSampleRateHertz = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.naturalsampleratehertz_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ai.inworld.voices.Age age = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_age(static_cast<::ai::inworld::voices::Age>(val));
        } else
          goto handle_unusual;
        continue;
      // .ai.inworld.voices.Voice.ElevenLabsMetadata elevenlabs_metadata = 100;
      case 100:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_elevenlabs_metadata(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListBaseVoicesResponce_BaseVoice::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.engine.ListBaseVoicesResponce.BaseVoice)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string language_codes = 1;
  for (int i = 0, n = this->_internal_language_codes_size(); i < n; i++) {
    const auto& s = this->_internal_language_codes(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.ListBaseVoicesResponce.BaseVoice.language_codes");
    target = stream->WriteString(1, s, target);
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.ListBaseVoicesResponce.BaseVoice.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // .ai.inworld.voices.Gender gender = 3;
  if (this->_internal_gender() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      3, this->_internal_gender(), target);
  }

  // int32 naturalSampleRateHertz = 4;
  if (this->_internal_naturalsampleratehertz() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_naturalsampleratehertz(), target);
  }

  // .ai.inworld.voices.Age age = 5;
  if (this->_internal_age() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      5, this->_internal_age(), target);
  }

  // .ai.inworld.voices.Voice.ElevenLabsMetadata elevenlabs_metadata = 100;
  if (_internal_has_elevenlabs_metadata()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(100, _Internal::elevenlabs_metadata(this),
        _Internal::elevenlabs_metadata(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.engine.ListBaseVoicesResponce.BaseVoice)
  return target;
}

size_t ListBaseVoicesResponce_BaseVoice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.engine.ListBaseVoicesResponce.BaseVoice)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string language_codes = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.language_codes_.size());
  for (int i = 0, n = _impl_.language_codes_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.language_codes_.Get(i));
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .ai.inworld.voices.Gender gender = 3;
  if (this->_internal_gender() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_gender());
  }

  // int32 naturalSampleRateHertz = 4;
  if (this->_internal_naturalsampleratehertz() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_naturalsampleratehertz());
  }

  // .ai.inworld.voices.Age age = 5;
  if (this->_internal_age() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_age());
  }

  switch (tts_metadata_case()) {
    // .ai.inworld.voices.Voice.ElevenLabsMetadata elevenlabs_metadata = 100;
    case kElevenlabsMetadata: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.tts_metadata_.elevenlabs_metadata_);
      break;
    }
    case TTS_METADATA_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListBaseVoicesResponce_BaseVoice::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ListBaseVoicesResponce_BaseVoice::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListBaseVoicesResponce_BaseVoice::GetClassData() const { return &_class_data_; }


void ListBaseVoicesResponce_BaseVoice::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ListBaseVoicesResponce_BaseVoice*>(&to_msg);
  auto& from = static_cast<const ListBaseVoicesResponce_BaseVoice&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.engine.ListBaseVoicesResponce.BaseVoice)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.language_codes_.MergeFrom(from._impl_.language_codes_);
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_gender() != 0) {
    _this->_internal_set_gender(from._internal_gender());
  }
  if (from._internal_naturalsampleratehertz() != 0) {
    _this->_internal_set_naturalsampleratehertz(from._internal_naturalsampleratehertz());
  }
  if (from._internal_age() != 0) {
    _this->_internal_set_age(from._internal_age());
  }
  switch (from.tts_metadata_case()) {
    case kElevenlabsMetadata: {
      _this->_internal_mutable_elevenlabs_metadata()->::ai::inworld::voices::Voice_ElevenLabsMetadata::MergeFrom(
          from._internal_elevenlabs_metadata());
      break;
    }
    case TTS_METADATA_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListBaseVoicesResponce_BaseVoice::CopyFrom(const ListBaseVoicesResponce_BaseVoice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.engine.ListBaseVoicesResponce.BaseVoice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListBaseVoicesResponce_BaseVoice::IsInitialized() const {
  return true;
}

void ListBaseVoicesResponce_BaseVoice::InternalSwap(ListBaseVoicesResponce_BaseVoice* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.language_codes_.InternalSwap(&other->_impl_.language_codes_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ListBaseVoicesResponce_BaseVoice, _impl_.age_)
      + sizeof(ListBaseVoicesResponce_BaseVoice::_impl_.age_)
      - PROTOBUF_FIELD_OFFSET(ListBaseVoicesResponce_BaseVoice, _impl_.gender_)>(
          reinterpret_cast<char*>(&_impl_.gender_),
          reinterpret_cast<char*>(&other->_impl_.gender_));
  swap(_impl_.tts_metadata_, other->_impl_.tts_metadata_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListBaseVoicesResponce_BaseVoice::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_world_2dengine_2eproto_getter, &descriptor_table_world_2dengine_2eproto_once,
      file_level_metadata_world_2dengine_2eproto[26]);
}

// ===================================================================

class ListBaseVoicesResponce::_Internal {
 public:
};

ListBaseVoicesResponce::ListBaseVoicesResponce(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.engine.ListBaseVoicesResponce)
}
ListBaseVoicesResponce::ListBaseVoicesResponce(const ListBaseVoicesResponce& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ListBaseVoicesResponce* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.googlevoices_){from._impl_.googlevoices_}
    , decltype(_impl_.inworldvoices_){from._impl_.inworldvoices_}
    , decltype(_impl_.elevenlabsvoices_){from._impl_.elevenlabsvoices_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ai.inworld.engine.ListBaseVoicesResponce)
}

inline void ListBaseVoicesResponce::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.googlevoices_){arena}
    , decltype(_impl_.inworldvoices_){arena}
    , decltype(_impl_.elevenlabsvoices_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ListBaseVoicesResponce::~ListBaseVoicesResponce() {
  // @@protoc_insertion_point(destructor:ai.inworld.engine.ListBaseVoicesResponce)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListBaseVoicesResponce::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.googlevoices_.~RepeatedPtrField();
  _impl_.inworldvoices_.~RepeatedPtrField();
  _impl_.elevenlabsvoices_.~RepeatedPtrField();
}

void ListBaseVoicesResponce::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ListBaseVoicesResponce::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.engine.ListBaseVoicesResponce)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.googlevoices_.Clear();
  _impl_.inworldvoices_.Clear();
  _impl_.elevenlabsvoices_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListBaseVoicesResponce::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .ai.inworld.engine.ListBaseVoicesResponce.BaseVoice googleVoices = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_googlevoices(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .ai.inworld.engine.ListBaseVoicesResponce.BaseVoice inworldVoices = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_inworldvoices(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .ai.inworld.engine.ListBaseVoicesResponce.BaseVoice elevenLabsVoices = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_elevenlabsvoices(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListBaseVoicesResponce::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.engine.ListBaseVoicesResponce)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ai.inworld.engine.ListBaseVoicesResponce.BaseVoice googleVoices = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_googlevoices_size()); i < n; i++) {
    const auto& repfield = this->_internal_googlevoices(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .ai.inworld.engine.ListBaseVoicesResponce.BaseVoice inworldVoices = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_inworldvoices_size()); i < n; i++) {
    const auto& repfield = this->_internal_inworldvoices(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .ai.inworld.engine.ListBaseVoicesResponce.BaseVoice elevenLabsVoices = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_elevenlabsvoices_size()); i < n; i++) {
    const auto& repfield = this->_internal_elevenlabsvoices(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.engine.ListBaseVoicesResponce)
  return target;
}

size_t ListBaseVoicesResponce::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.engine.ListBaseVoicesResponce)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ai.inworld.engine.ListBaseVoicesResponce.BaseVoice googleVoices = 1;
  total_size += 1UL * this->_internal_googlevoices_size();
  for (const auto& msg : this->_impl_.googlevoices_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ai.inworld.engine.ListBaseVoicesResponce.BaseVoice inworldVoices = 2;
  total_size += 1UL * this->_internal_inworldvoices_size();
  for (const auto& msg : this->_impl_.inworldvoices_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ai.inworld.engine.ListBaseVoicesResponce.BaseVoice elevenLabsVoices = 3;
  total_size += 1UL * this->_internal_elevenlabsvoices_size();
  for (const auto& msg : this->_impl_.elevenlabsvoices_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListBaseVoicesResponce::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ListBaseVoicesResponce::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListBaseVoicesResponce::GetClassData() const { return &_class_data_; }


void ListBaseVoicesResponce::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ListBaseVoicesResponce*>(&to_msg);
  auto& from = static_cast<const ListBaseVoicesResponce&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.engine.ListBaseVoicesResponce)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.googlevoices_.MergeFrom(from._impl_.googlevoices_);
  _this->_impl_.inworldvoices_.MergeFrom(from._impl_.inworldvoices_);
  _this->_impl_.elevenlabsvoices_.MergeFrom(from._impl_.elevenlabsvoices_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListBaseVoicesResponce::CopyFrom(const ListBaseVoicesResponce& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.engine.ListBaseVoicesResponce)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListBaseVoicesResponce::IsInitialized() const {
  return true;
}

void ListBaseVoicesResponce::InternalSwap(ListBaseVoicesResponce* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.googlevoices_.InternalSwap(&other->_impl_.googlevoices_);
  _impl_.inworldvoices_.InternalSwap(&other->_impl_.inworldvoices_);
  _impl_.elevenlabsvoices_.InternalSwap(&other->_impl_.elevenlabsvoices_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListBaseVoicesResponce::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_world_2dengine_2eproto_getter, &descriptor_table_world_2dengine_2eproto_once,
      file_level_metadata_world_2dengine_2eproto[27]);
}

// ===================================================================

class AccessToken::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& expiration_time(const AccessToken* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Timestamp&
AccessToken::_Internal::expiration_time(const AccessToken* msg) {
  return *msg->_impl_.expiration_time_;
}
void AccessToken::clear_expiration_time() {
  if (GetArenaForAllocation() == nullptr && _impl_.expiration_time_ != nullptr) {
    delete _impl_.expiration_time_;
  }
  _impl_.expiration_time_ = nullptr;
}
AccessToken::AccessToken(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.engine.AccessToken)
}
AccessToken::AccessToken(const AccessToken& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AccessToken* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.token_){}
    , decltype(_impl_.type_){}
    , decltype(_impl_.session_id_){}
    , decltype(_impl_.expiration_time_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_token().empty()) {
    _this->_impl_.token_.Set(from._internal_token(), 
      _this->GetArenaForAllocation());
  }
  _impl_.type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_type().empty()) {
    _this->_impl_.type_.Set(from._internal_type(), 
      _this->GetArenaForAllocation());
  }
  _impl_.session_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.session_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_session_id().empty()) {
    _this->_impl_.session_id_.Set(from._internal_session_id(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_expiration_time()) {
    _this->_impl_.expiration_time_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from._impl_.expiration_time_);
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.engine.AccessToken)
}

inline void AccessToken::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.token_){}
    , decltype(_impl_.type_){}
    , decltype(_impl_.session_id_){}
    , decltype(_impl_.expiration_time_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.session_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.session_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

AccessToken::~AccessToken() {
  // @@protoc_insertion_point(destructor:ai.inworld.engine.AccessToken)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AccessToken::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.token_.Destroy();
  _impl_.type_.Destroy();
  _impl_.session_id_.Destroy();
  if (this != internal_default_instance()) delete _impl_.expiration_time_;
}

void AccessToken::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AccessToken::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.engine.AccessToken)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.token_.ClearToEmpty();
  _impl_.type_.ClearToEmpty();
  _impl_.session_id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.expiration_time_ != nullptr) {
    delete _impl_.expiration_time_;
  }
  _impl_.expiration_time_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AccessToken::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string token = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_token();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.engine.AccessToken.token"));
        } else
          goto handle_unusual;
        continue;
      // string type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_type();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.engine.AccessToken.type"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp expiration_time = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_expiration_time(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string session_id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_session_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.engine.AccessToken.session_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AccessToken::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.engine.AccessToken)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (!this->_internal_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_token().data(), static_cast<int>(this->_internal_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.AccessToken.token");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_token(), target);
  }

  // string type = 2;
  if (!this->_internal_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_type().data(), static_cast<int>(this->_internal_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.AccessToken.type");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_type(), target);
  }

  // .google.protobuf.Timestamp expiration_time = 3;
  if (this->_internal_has_expiration_time()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::expiration_time(this),
        _Internal::expiration_time(this).GetCachedSize(), target, stream);
  }

  // string session_id = 4;
  if (!this->_internal_session_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_session_id().data(), static_cast<int>(this->_internal_session_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.AccessToken.session_id");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_session_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.engine.AccessToken)
  return target;
}

size_t AccessToken::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.engine.AccessToken)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string token = 1;
  if (!this->_internal_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_token());
  }

  // string type = 2;
  if (!this->_internal_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_type());
  }

  // string session_id = 4;
  if (!this->_internal_session_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_session_id());
  }

  // .google.protobuf.Timestamp expiration_time = 3;
  if (this->_internal_has_expiration_time()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.expiration_time_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AccessToken::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AccessToken::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AccessToken::GetClassData() const { return &_class_data_; }


void AccessToken::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AccessToken*>(&to_msg);
  auto& from = static_cast<const AccessToken&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.engine.AccessToken)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_token().empty()) {
    _this->_internal_set_token(from._internal_token());
  }
  if (!from._internal_type().empty()) {
    _this->_internal_set_type(from._internal_type());
  }
  if (!from._internal_session_id().empty()) {
    _this->_internal_set_session_id(from._internal_session_id());
  }
  if (from._internal_has_expiration_time()) {
    _this->_internal_mutable_expiration_time()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(
        from._internal_expiration_time());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AccessToken::CopyFrom(const AccessToken& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.engine.AccessToken)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccessToken::IsInitialized() const {
  return true;
}

void AccessToken::InternalSwap(AccessToken* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.token_, lhs_arena,
      &other->_impl_.token_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.type_, lhs_arena,
      &other->_impl_.type_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.session_id_, lhs_arena,
      &other->_impl_.session_id_, rhs_arena
  );
  swap(_impl_.expiration_time_, other->_impl_.expiration_time_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AccessToken::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_world_2dengine_2eproto_getter, &descriptor_table_world_2dengine_2eproto_once,
      file_level_metadata_world_2dengine_2eproto[28]);
}

// ===================================================================

class GenerateTokenRequest::_Internal {
 public:
};

GenerateTokenRequest::GenerateTokenRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.engine.GenerateTokenRequest)
}
GenerateTokenRequest::GenerateTokenRequest(const GenerateTokenRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GenerateTokenRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.resources_){from._impl_.resources_}
    , decltype(_impl_.key_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.key_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.key_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_key().empty()) {
    _this->_impl_.key_.Set(from._internal_key(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.engine.GenerateTokenRequest)
}

inline void GenerateTokenRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.resources_){arena}
    , decltype(_impl_.key_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.key_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.key_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GenerateTokenRequest::~GenerateTokenRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.engine.GenerateTokenRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GenerateTokenRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.resources_.~RepeatedPtrField();
  _impl_.key_.Destroy();
}

void GenerateTokenRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GenerateTokenRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.engine.GenerateTokenRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.resources_.Clear();
  _impl_.key_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GenerateTokenRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_key();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.engine.GenerateTokenRequest.key"));
        } else
          goto handle_unusual;
        continue;
      // repeated string resources = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_resources();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.engine.GenerateTokenRequest.resources"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GenerateTokenRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.engine.GenerateTokenRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (!this->_internal_key().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key().data(), static_cast<int>(this->_internal_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.GenerateTokenRequest.key");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_key(), target);
  }

  // repeated string resources = 2;
  for (int i = 0, n = this->_internal_resources_size(); i < n; i++) {
    const auto& s = this->_internal_resources(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.GenerateTokenRequest.resources");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.engine.GenerateTokenRequest)
  return target;
}

size_t GenerateTokenRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.engine.GenerateTokenRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string resources = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.resources_.size());
  for (int i = 0, n = _impl_.resources_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.resources_.Get(i));
  }

  // string key = 1;
  if (!this->_internal_key().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GenerateTokenRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GenerateTokenRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GenerateTokenRequest::GetClassData() const { return &_class_data_; }


void GenerateTokenRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GenerateTokenRequest*>(&to_msg);
  auto& from = static_cast<const GenerateTokenRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.engine.GenerateTokenRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.resources_.MergeFrom(from._impl_.resources_);
  if (!from._internal_key().empty()) {
    _this->_internal_set_key(from._internal_key());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GenerateTokenRequest::CopyFrom(const GenerateTokenRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.engine.GenerateTokenRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenerateTokenRequest::IsInitialized() const {
  return true;
}

void GenerateTokenRequest::InternalSwap(GenerateTokenRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.resources_.InternalSwap(&other->_impl_.resources_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.key_, lhs_arena,
      &other->_impl_.key_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GenerateTokenRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_world_2dengine_2eproto_getter, &descriptor_table_world_2dengine_2eproto_once,
      file_level_metadata_world_2dengine_2eproto[29]);
}

// ===================================================================

class ActorRelations_Relation::_Internal {
 public:
};

ActorRelations_Relation::ActorRelations_Relation(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.engine.ActorRelations.Relation)
}
ActorRelations_Relation::ActorRelations_Relation(const ActorRelations_Relation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ActorRelations_Relation* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.type_){}
    , decltype(_impl_.label_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_type().empty()) {
    _this->_impl_.type_.Set(from._internal_type(), 
      _this->GetArenaForAllocation());
  }
  _impl_.label_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.label_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_label().empty()) {
    _this->_impl_.label_.Set(from._internal_label(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.engine.ActorRelations.Relation)
}

inline void ActorRelations_Relation::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.type_){}
    , decltype(_impl_.label_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.type_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.type_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.label_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.label_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ActorRelations_Relation::~ActorRelations_Relation() {
  // @@protoc_insertion_point(destructor:ai.inworld.engine.ActorRelations.Relation)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ActorRelations_Relation::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.type_.Destroy();
  _impl_.label_.Destroy();
}

void ActorRelations_Relation::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ActorRelations_Relation::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.engine.ActorRelations.Relation)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.type_.ClearToEmpty();
  _impl_.label_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ActorRelations_Relation::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_type();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.engine.ActorRelations.Relation.type"));
        } else
          goto handle_unusual;
        continue;
      // string label = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_label();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.engine.ActorRelations.Relation.label"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ActorRelations_Relation::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.engine.ActorRelations.Relation)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string type = 1;
  if (!this->_internal_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_type().data(), static_cast<int>(this->_internal_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.ActorRelations.Relation.type");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_type(), target);
  }

  // string label = 2;
  if (!this->_internal_label().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_label().data(), static_cast<int>(this->_internal_label().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.ActorRelations.Relation.label");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_label(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.engine.ActorRelations.Relation)
  return target;
}

size_t ActorRelations_Relation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.engine.ActorRelations.Relation)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string type = 1;
  if (!this->_internal_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_type());
  }

  // string label = 2;
  if (!this->_internal_label().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_label());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ActorRelations_Relation::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ActorRelations_Relation::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ActorRelations_Relation::GetClassData() const { return &_class_data_; }


void ActorRelations_Relation::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ActorRelations_Relation*>(&to_msg);
  auto& from = static_cast<const ActorRelations_Relation&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.engine.ActorRelations.Relation)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_type().empty()) {
    _this->_internal_set_type(from._internal_type());
  }
  if (!from._internal_label().empty()) {
    _this->_internal_set_label(from._internal_label());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ActorRelations_Relation::CopyFrom(const ActorRelations_Relation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.engine.ActorRelations.Relation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActorRelations_Relation::IsInitialized() const {
  return true;
}

void ActorRelations_Relation::InternalSwap(ActorRelations_Relation* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.type_, lhs_arena,
      &other->_impl_.type_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.label_, lhs_arena,
      &other->_impl_.label_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ActorRelations_Relation::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_world_2dengine_2eproto_getter, &descriptor_table_world_2dengine_2eproto_once,
      file_level_metadata_world_2dengine_2eproto[30]);
}

// ===================================================================

class ActorRelations::_Internal {
 public:
};

ActorRelations::ActorRelations(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.engine.ActorRelations)
}
ActorRelations::ActorRelations(const ActorRelations& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ActorRelations* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.relations_){from._impl_.relations_}
    , decltype(_impl_.actor_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.actor_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.actor_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_actor_id().empty()) {
    _this->_impl_.actor_id_.Set(from._internal_actor_id(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.engine.ActorRelations)
}

inline void ActorRelations::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.relations_){arena}
    , decltype(_impl_.actor_id_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.actor_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.actor_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ActorRelations::~ActorRelations() {
  // @@protoc_insertion_point(destructor:ai.inworld.engine.ActorRelations)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ActorRelations::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.relations_.~RepeatedPtrField();
  _impl_.actor_id_.Destroy();
}

void ActorRelations::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ActorRelations::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.engine.ActorRelations)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.relations_.Clear();
  _impl_.actor_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ActorRelations::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string actor_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_actor_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.engine.ActorRelations.actor_id"));
        } else
          goto handle_unusual;
        continue;
      // repeated .ai.inworld.engine.ActorRelations.Relation relations = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_relations(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ActorRelations::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.engine.ActorRelations)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string actor_id = 1;
  if (!this->_internal_actor_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_actor_id().data(), static_cast<int>(this->_internal_actor_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.engine.ActorRelations.actor_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_actor_id(), target);
  }

  // repeated .ai.inworld.engine.ActorRelations.Relation relations = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_relations_size()); i < n; i++) {
    const auto& repfield = this->_internal_relations(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.engine.ActorRelations)
  return target;
}

size_t ActorRelations::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.engine.ActorRelations)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ai.inworld.engine.ActorRelations.Relation relations = 2;
  total_size += 1UL * this->_internal_relations_size();
  for (const auto& msg : this->_impl_.relations_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string actor_id = 1;
  if (!this->_internal_actor_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_actor_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ActorRelations::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ActorRelations::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ActorRelations::GetClassData() const { return &_class_data_; }


void ActorRelations::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ActorRelations*>(&to_msg);
  auto& from = static_cast<const ActorRelations&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.engine.ActorRelations)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.relations_.MergeFrom(from._impl_.relations_);
  if (!from._internal_actor_id().empty()) {
    _this->_internal_set_actor_id(from._internal_actor_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ActorRelations::CopyFrom(const ActorRelations& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.engine.ActorRelations)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActorRelations::IsInitialized() const {
  return true;
}

void ActorRelations::InternalSwap(ActorRelations* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.relations_.InternalSwap(&other->_impl_.relations_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.actor_id_, lhs_arena,
      &other->_impl_.actor_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ActorRelations::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_world_2dengine_2eproto_getter, &descriptor_table_world_2dengine_2eproto_once,
      file_level_metadata_world_2dengine_2eproto[31]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace engine
}  // namespace inworld
}  // namespace ai
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::ai::inworld::engine::CapabilitiesRequest*
Arena::CreateMaybeMessage< ::ai::inworld::engine::CapabilitiesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::engine::CapabilitiesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::engine::UserRequest*
Arena::CreateMaybeMessage< ::ai::inworld::engine::UserRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::engine::UserRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::engine::ClientRequest*
Arena::CreateMaybeMessage< ::ai::inworld::engine::ClientRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::engine::ClientRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::engine::CreateWorldRequest_CreateAgentRequest*
Arena::CreateMaybeMessage< ::ai::inworld::engine::CreateWorldRequest_CreateAgentRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::engine::CreateWorldRequest_CreateAgentRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::engine::CreateWorldRequest_ClientRequest*
Arena::CreateMaybeMessage< ::ai::inworld::engine::CreateWorldRequest_ClientRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::engine::CreateWorldRequest_ClientRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::engine::CreateWorldRequest*
Arena::CreateMaybeMessage< ::ai::inworld::engine::CreateWorldRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::engine::CreateWorldRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::engine::CreateWorldResponse_Agent*
Arena::CreateMaybeMessage< ::ai::inworld::engine::CreateWorldResponse_Agent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::engine::CreateWorldResponse_Agent >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::engine::CreateWorldResponse*
Arena::CreateMaybeMessage< ::ai::inworld::engine::CreateWorldResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::engine::CreateWorldResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::engine::LoadSceneRequest*
Arena::CreateMaybeMessage< ::ai::inworld::engine::LoadSceneRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::engine::LoadSceneRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::engine::AudioSettings*
Arena::CreateMaybeMessage< ::ai::inworld::engine::AudioSettings >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::engine::AudioSettings >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::engine::UserSettings_PlayerProfile_PlayerField*
Arena::CreateMaybeMessage< ::ai::inworld::engine::UserSettings_PlayerProfile_PlayerField >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::engine::UserSettings_PlayerProfile_PlayerField >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::engine::UserSettings_PlayerProfile*
Arena::CreateMaybeMessage< ::ai::inworld::engine::UserSettings_PlayerProfile >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::engine::UserSettings_PlayerProfile >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::engine::UserSettings*
Arena::CreateMaybeMessage< ::ai::inworld::engine::UserSettings >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::engine::UserSettings >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::engine::SessionContinuation_ContinuationInfo*
Arena::CreateMaybeMessage< ::ai::inworld::engine::SessionContinuation_ContinuationInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::engine::SessionContinuation_ContinuationInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::engine::SessionContinuation*
Arena::CreateMaybeMessage< ::ai::inworld::engine::SessionContinuation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::engine::SessionContinuation >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::engine::PreviousDialog_Phrase*
Arena::CreateMaybeMessage< ::ai::inworld::engine::PreviousDialog_Phrase >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::engine::PreviousDialog_Phrase >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::engine::PreviousDialog*
Arena::CreateMaybeMessage< ::ai::inworld::engine::PreviousDialog >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::engine::PreviousDialog >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::engine::PreviousState_StateHolder*
Arena::CreateMaybeMessage< ::ai::inworld::engine::PreviousState_StateHolder >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::engine::PreviousState_StateHolder >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::engine::PreviousState*
Arena::CreateMaybeMessage< ::ai::inworld::engine::PreviousState >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::engine::PreviousState >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::engine::LoadSceneResponse_Agent_CharacterAssets*
Arena::CreateMaybeMessage< ::ai::inworld::engine::LoadSceneResponse_Agent_CharacterAssets >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::engine::LoadSceneResponse_Agent_CharacterAssets >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::engine::LoadSceneResponse_Agent*
Arena::CreateMaybeMessage< ::ai::inworld::engine::LoadSceneResponse_Agent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::engine::LoadSceneResponse_Agent >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::engine::LoadSceneResponse*
Arena::CreateMaybeMessage< ::ai::inworld::engine::LoadSceneResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::engine::LoadSceneResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::engine::LogErrorRequest*
Arena::CreateMaybeMessage< ::ai::inworld::engine::LogErrorRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::engine::LogErrorRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::engine::VoicePreviewRequest*
Arena::CreateMaybeMessage< ::ai::inworld::engine::VoicePreviewRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::engine::VoicePreviewRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::engine::VoicePreviewResponse*
Arena::CreateMaybeMessage< ::ai::inworld::engine::VoicePreviewResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::engine::VoicePreviewResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::engine::ListBaseVoicesRequest*
Arena::CreateMaybeMessage< ::ai::inworld::engine::ListBaseVoicesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::engine::ListBaseVoicesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::engine::ListBaseVoicesResponce_BaseVoice*
Arena::CreateMaybeMessage< ::ai::inworld::engine::ListBaseVoicesResponce_BaseVoice >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::engine::ListBaseVoicesResponce_BaseVoice >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::engine::ListBaseVoicesResponce*
Arena::CreateMaybeMessage< ::ai::inworld::engine::ListBaseVoicesResponce >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::engine::ListBaseVoicesResponce >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::engine::AccessToken*
Arena::CreateMaybeMessage< ::ai::inworld::engine::AccessToken >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::engine::AccessToken >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::engine::GenerateTokenRequest*
Arena::CreateMaybeMessage< ::ai::inworld::engine::GenerateTokenRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::engine::GenerateTokenRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::engine::ActorRelations_Relation*
Arena::CreateMaybeMessage< ::ai::inworld::engine::ActorRelations_Relation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::engine::ActorRelations_Relation >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::engine::ActorRelations*
Arena::CreateMaybeMessage< ::ai::inworld::engine::ActorRelations >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::engine::ActorRelations >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
