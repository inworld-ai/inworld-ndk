// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ai/inworld/studio/v1alpha/characters.proto

#include "ProtoDisableWarning.h"

#include "ai/inworld/studio/v1alpha/characters.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace ai {
namespace inworld {
namespace studio {
namespace v1alpha {
PROTOBUF_CONSTEXPR Character_CharacterDescription_CustomDialogStyle::Character_CharacterDescription_CustomDialogStyle(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.adjectives_)*/{}
  , /*decltype(_impl_.adverbs_)*/{}
  , /*decltype(_impl_.uuid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.display_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.colloquialism_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.is_active_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Character_CharacterDescription_CustomDialogStyleDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Character_CharacterDescription_CustomDialogStyleDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Character_CharacterDescription_CustomDialogStyleDefaultTypeInternal() {}
  union {
    Character_CharacterDescription_CustomDialogStyle _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Character_CharacterDescription_CustomDialogStyleDefaultTypeInternal _Character_CharacterDescription_CustomDialogStyle_default_instance_;
PROTOBUF_CONSTEXPR Character_CharacterDescription::Character_CharacterDescription(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.nicknames_)*/{}
  , /*decltype(_impl_.personality_adjectives_)*/{}
  , /*decltype(_impl_.hobby_or_interests_)*/{}
  , /*decltype(_impl_.custom_dialog_styles_)*/{}
  , /*decltype(_impl_.given_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.description_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.motivation_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.wikipedia_uri_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.player_role_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.default_context_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.example_dialog_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.character_role_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.flaws_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.pronoun_)*/0
  , /*decltype(_impl_.example_dialog_style_)*/0
  , /*decltype(_impl_.life_stage_)*/0
  , /*decltype(_impl_.narrative_actions_enabled_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Character_CharacterDescriptionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Character_CharacterDescriptionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Character_CharacterDescriptionDefaultTypeInternal() {}
  union {
    Character_CharacterDescription _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Character_CharacterDescriptionDefaultTypeInternal _Character_CharacterDescription_default_instance_;
PROTOBUF_CONSTEXPR Character_BrainSettings_ConversationConfig_FillerSpec::Character_BrainSettings_ConversationConfig_FillerSpec(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.fillers_disabled_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Character_BrainSettings_ConversationConfig_FillerSpecDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Character_BrainSettings_ConversationConfig_FillerSpecDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Character_BrainSettings_ConversationConfig_FillerSpecDefaultTypeInternal() {}
  union {
    Character_BrainSettings_ConversationConfig_FillerSpec _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Character_BrainSettings_ConversationConfig_FillerSpecDefaultTypeInternal _Character_BrainSettings_ConversationConfig_FillerSpec_default_instance_;
PROTOBUF_CONSTEXPR Character_BrainSettings_ConversationConfig::Character_BrainSettings_ConversationConfig(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.filler_spec_)*/nullptr
  , /*decltype(_impl_.emotions_disabled_)*/false
  , /*decltype(_impl_.behavioral_contexts_disabled_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Character_BrainSettings_ConversationConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Character_BrainSettings_ConversationConfigDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Character_BrainSettings_ConversationConfigDefaultTypeInternal() {}
  union {
    Character_BrainSettings_ConversationConfig _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Character_BrainSettings_ConversationConfigDefaultTypeInternal _Character_BrainSettings_ConversationConfig_default_instance_;
PROTOBUF_CONSTEXPR Character_BrainSettings::Character_BrainSettings(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.conversation_config_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Character_BrainSettingsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Character_BrainSettingsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Character_BrainSettingsDefaultTypeInternal() {}
  union {
    Character_BrainSettings _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Character_BrainSettingsDefaultTypeInternal _Character_BrainSettings_default_instance_;
PROTOBUF_CONSTEXPR Character_BrainTrigger::Character_BrainTrigger(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.trigger_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.situation_description_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.start_conversation_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Character_BrainTriggerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Character_BrainTriggerDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Character_BrainTriggerDefaultTypeInternal() {}
  union {
    Character_BrainTrigger _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Character_BrainTriggerDefaultTypeInternal _Character_BrainTrigger_default_instance_;
PROTOBUF_CONSTEXPR Character_CharacterAssets::Character_CharacterAssets(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.rpm_model_uri_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.rpm_image_uri_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.rpm_image_uri_portrait_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.rpm_image_uri_posture_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.avatar_img_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.avatar_img_original_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.voice_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Character_CharacterAssetsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Character_CharacterAssetsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Character_CharacterAssetsDefaultTypeInternal() {}
  union {
    Character_CharacterAssets _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Character_CharacterAssetsDefaultTypeInternal _Character_CharacterAssets_default_instance_;
PROTOBUF_CONSTEXPR Character_CharacterInitialMood::Character_CharacterInitialMood(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.joy_)*/0
  , /*decltype(_impl_.fear_)*/0
  , /*decltype(_impl_.trust_)*/0
  , /*decltype(_impl_.surprise_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Character_CharacterInitialMoodDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Character_CharacterInitialMoodDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Character_CharacterInitialMoodDefaultTypeInternal() {}
  union {
    Character_CharacterInitialMood _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Character_CharacterInitialMoodDefaultTypeInternal _Character_CharacterInitialMood_default_instance_;
PROTOBUF_CONSTEXPR Character_CharacterPersonality::Character_CharacterPersonality(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.positive_)*/0
  , /*decltype(_impl_.peaceful_)*/0
  , /*decltype(_impl_.open_)*/0
  , /*decltype(_impl_.extravert_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Character_CharacterPersonalityDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Character_CharacterPersonalityDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Character_CharacterPersonalityDefaultTypeInternal() {}
  union {
    Character_CharacterPersonality _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Character_CharacterPersonalityDefaultTypeInternal _Character_CharacterPersonality_default_instance_;
PROTOBUF_CONSTEXPR Character_Fact::Character_Fact(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.text_)*/{}
  , /*decltype(_impl_.tags_)*/{}
  , /*decltype(_impl_._tags_cached_byte_size_)*/{0}
  , /*decltype(_impl_.uuid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Character_FactDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Character_FactDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Character_FactDefaultTypeInternal() {}
  union {
    Character_Fact _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Character_FactDefaultTypeInternal _Character_Fact_default_instance_;
PROTOBUF_CONSTEXPR Character_Meta::Character_Meta(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.total_triggers_)*/0
  , /*decltype(_impl_.total_common_knowledge_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Character_MetaDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Character_MetaDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Character_MetaDefaultTypeInternal() {}
  union {
    Character_Meta _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Character_MetaDefaultTypeInternal _Character_Meta_default_instance_;
PROTOBUF_CONSTEXPR Character_SharedPortalInfo_InteractionCountStat::Character_SharedPortalInfo_InteractionCountStat(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.total_count_)*/0
  , /*decltype(_impl_.total_unread_count_)*/0
  , /*decltype(_impl_.total_read_count_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Character_SharedPortalInfo_InteractionCountStatDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Character_SharedPortalInfo_InteractionCountStatDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Character_SharedPortalInfo_InteractionCountStatDefaultTypeInternal() {}
  union {
    Character_SharedPortalInfo_InteractionCountStat _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Character_SharedPortalInfo_InteractionCountStatDefaultTypeInternal _Character_SharedPortalInfo_InteractionCountStat_default_instance_;
PROTOBUF_CONSTEXPR Character_SharedPortalInfo::Character_SharedPortalInfo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.byline_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.prompt_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.short_alias_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.interaction_count_stat_)*/nullptr
  , /*decltype(_impl_.is_shared_)*/false
  , /*decltype(_impl_.allowed_on_showcase_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Character_SharedPortalInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Character_SharedPortalInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Character_SharedPortalInfoDefaultTypeInternal() {}
  union {
    Character_SharedPortalInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Character_SharedPortalInfoDefaultTypeInternal _Character_SharedPortalInfo_default_instance_;
PROTOBUF_CONSTEXPR Character_SafetyConfigEntry_DoNotUse::Character_SafetyConfigEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct Character_SafetyConfigEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Character_SafetyConfigEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Character_SafetyConfigEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Character_SafetyConfigEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Character_SafetyConfigEntry_DoNotUseDefaultTypeInternal _Character_SafetyConfigEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR Character::Character(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.brain_triggers_)*/{}
  , /*decltype(_impl_.common_knowledges_)*/{}
  , /*decltype(_impl_.scenes_)*/{}
  , /*decltype(_impl_.facts_)*/{}
  , /*decltype(_impl_.behavioral_contexts_)*/{}
  , /*decltype(_impl_.safety_config_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.language_code_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.yaml_config_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.default_character_description_)*/nullptr
  , /*decltype(_impl_.brain_settings_)*/nullptr
  , /*decltype(_impl_.default_character_assets_)*/nullptr
  , /*decltype(_impl_.initial_mood_)*/nullptr
  , /*decltype(_impl_.personality_)*/nullptr
  , /*decltype(_impl_.meta_)*/nullptr
  , /*decltype(_impl_.share_portal_info_)*/nullptr
  , /*decltype(_impl_.social_rank_)*/0
  , /*decltype(_impl_.emotional_fluidity_)*/0
  , /*decltype(_impl_.relationship_fluidity_)*/0
  , /*decltype(_impl_.fourth_wall_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CharacterDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CharacterDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CharacterDefaultTypeInternal() {}
  union {
    Character _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CharacterDefaultTypeInternal _Character_default_instance_;
PROTOBUF_CONSTEXPR GetCharacterRequest::GetCharacterRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.view_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetCharacterRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetCharacterRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetCharacterRequestDefaultTypeInternal() {}
  union {
    GetCharacterRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetCharacterRequestDefaultTypeInternal _GetCharacterRequest_default_instance_;
PROTOBUF_CONSTEXPR GetCharacterAdvancedSettingsRequest::GetCharacterAdvancedSettingsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetCharacterAdvancedSettingsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetCharacterAdvancedSettingsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetCharacterAdvancedSettingsRequestDefaultTypeInternal() {}
  union {
    GetCharacterAdvancedSettingsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetCharacterAdvancedSettingsRequestDefaultTypeInternal _GetCharacterAdvancedSettingsRequest_default_instance_;
PROTOBUF_CONSTEXPR UpdateCharacterAdvancedSettingsRequest::UpdateCharacterAdvancedSettingsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.character_advanced_settings_)*/nullptr
  , /*decltype(_impl_.update_mask_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UpdateCharacterAdvancedSettingsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateCharacterAdvancedSettingsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateCharacterAdvancedSettingsRequestDefaultTypeInternal() {}
  union {
    UpdateCharacterAdvancedSettingsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateCharacterAdvancedSettingsRequestDefaultTypeInternal _UpdateCharacterAdvancedSettingsRequest_default_instance_;
PROTOBUF_CONSTEXPR ListCharactersRequest::ListCharactersRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.parent_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.page_token_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.filter_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.page_size_)*/0
  , /*decltype(_impl_.view_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ListCharactersRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListCharactersRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListCharactersRequestDefaultTypeInternal() {}
  union {
    ListCharactersRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListCharactersRequestDefaultTypeInternal _ListCharactersRequest_default_instance_;
PROTOBUF_CONSTEXPR CreateCharacterRequest::CreateCharacterRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.parent_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.character_)*/nullptr
  , /*decltype(_impl_.skip_auto_create_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CreateCharacterRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateCharacterRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateCharacterRequestDefaultTypeInternal() {}
  union {
    CreateCharacterRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateCharacterRequestDefaultTypeInternal _CreateCharacterRequest_default_instance_;
PROTOBUF_CONSTEXPR UpdateCharacterRequest::UpdateCharacterRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.character_)*/nullptr
  , /*decltype(_impl_.update_mask_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UpdateCharacterRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateCharacterRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateCharacterRequestDefaultTypeInternal() {}
  union {
    UpdateCharacterRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateCharacterRequestDefaultTypeInternal _UpdateCharacterRequest_default_instance_;
PROTOBUF_CONSTEXPR DeleteCharacterRequest::DeleteCharacterRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeleteCharacterRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteCharacterRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteCharacterRequestDefaultTypeInternal() {}
  union {
    DeleteCharacterRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteCharacterRequestDefaultTypeInternal _DeleteCharacterRequest_default_instance_;
PROTOBUF_CONSTEXPR DeployCharacterRequest::DeployCharacterRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeployCharacterRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeployCharacterRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeployCharacterRequestDefaultTypeInternal() {}
  union {
    DeployCharacterRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeployCharacterRequestDefaultTypeInternal _DeployCharacterRequest_default_instance_;
PROTOBUF_CONSTEXPR CloneCharacterRequest::CloneCharacterRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.workspace_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.new_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CloneCharacterRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CloneCharacterRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CloneCharacterRequestDefaultTypeInternal() {}
  union {
    CloneCharacterRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CloneCharacterRequestDefaultTypeInternal _CloneCharacterRequest_default_instance_;
PROTOBUF_CONSTEXPR ListCharactersResponse::ListCharactersResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.characters_)*/{}
  , /*decltype(_impl_.next_page_token_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ListCharactersResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListCharactersResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListCharactersResponseDefaultTypeInternal() {}
  union {
    ListCharactersResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListCharactersResponseDefaultTypeInternal _ListCharactersResponse_default_instance_;
PROTOBUF_CONSTEXPR ReplaceCharacterRpmModelRequest::ReplaceCharacterRpmModelRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.character_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.rpm_model_uri_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ReplaceCharacterRpmModelRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReplaceCharacterRpmModelRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReplaceCharacterRpmModelRequestDefaultTypeInternal() {}
  union {
    ReplaceCharacterRpmModelRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReplaceCharacterRpmModelRequestDefaultTypeInternal _ReplaceCharacterRpmModelRequest_default_instance_;
PROTOBUF_CONSTEXPR ReplaceCharacterImageRequest::ReplaceCharacterImageRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.character_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.content_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ReplaceCharacterImageRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReplaceCharacterImageRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReplaceCharacterImageRequestDefaultTypeInternal() {}
  union {
    ReplaceCharacterImageRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReplaceCharacterImageRequestDefaultTypeInternal _ReplaceCharacterImageRequest_default_instance_;
PROTOBUF_CONSTEXPR PreviewPromptTemplateRequest::PreviewPromptTemplateRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.character_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.template__)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PreviewPromptTemplateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PreviewPromptTemplateRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PreviewPromptTemplateRequestDefaultTypeInternal() {}
  union {
    PreviewPromptTemplateRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PreviewPromptTemplateRequestDefaultTypeInternal _PreviewPromptTemplateRequest_default_instance_;
PROTOBUF_CONSTEXPR PreviewPromptTempalteResponse::PreviewPromptTempalteResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.errors_)*/{}
  , /*decltype(_impl_.prompt_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PreviewPromptTempalteResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PreviewPromptTempalteResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PreviewPromptTempalteResponseDefaultTypeInternal() {}
  union {
    PreviewPromptTempalteResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PreviewPromptTempalteResponseDefaultTypeInternal _PreviewPromptTempalteResponse_default_instance_;
PROTOBUF_CONSTEXPR ShareCharacterRequest::ShareCharacterRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.external_ids_)*/{}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ShareCharacterRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ShareCharacterRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ShareCharacterRequestDefaultTypeInternal() {}
  union {
    ShareCharacterRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ShareCharacterRequestDefaultTypeInternal _ShareCharacterRequest_default_instance_;
PROTOBUF_CONSTEXPR ShareCharacterPortalRequest::ShareCharacterPortalRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.byline_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.prompt_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.allowed_on_showcase_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ShareCharacterPortalRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ShareCharacterPortalRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ShareCharacterPortalRequestDefaultTypeInternal() {}
  union {
    ShareCharacterPortalRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ShareCharacterPortalRequestDefaultTypeInternal _ShareCharacterPortalRequest_default_instance_;
PROTOBUF_CONSTEXPR UnshareCharacterPortalRequest::UnshareCharacterPortalRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UnshareCharacterPortalRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UnshareCharacterPortalRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UnshareCharacterPortalRequestDefaultTypeInternal() {}
  union {
    UnshareCharacterPortalRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UnshareCharacterPortalRequestDefaultTypeInternal _UnshareCharacterPortalRequest_default_instance_;
PROTOBUF_CONSTEXPR ListSharedCharactersRequest::ListSharedCharactersRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.parent_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.page_token_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.page_size_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ListSharedCharactersRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListSharedCharactersRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListSharedCharactersRequestDefaultTypeInternal() {}
  union {
    ListSharedCharactersRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListSharedCharactersRequestDefaultTypeInternal _ListSharedCharactersRequest_default_instance_;
PROTOBUF_CONSTEXPR ListSharedCharactersResponse::ListSharedCharactersResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.shared_characters_)*/{}
  , /*decltype(_impl_.next_page_token_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ListSharedCharactersResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListSharedCharactersResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListSharedCharactersResponseDefaultTypeInternal() {}
  union {
    ListSharedCharactersResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListSharedCharactersResponseDefaultTypeInternal _ListSharedCharactersResponse_default_instance_;
PROTOBUF_CONSTEXPR CharacterAdvancedSettings_ConversationConfig_EngineSpec::CharacterAdvancedSettings_ConversationConfig_EngineSpec(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.engine_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.temperature_)*/0
  , /*decltype(_impl_.max_tokens_)*/0
  , /*decltype(_impl_.frequency_penalty_)*/0
  , /*decltype(_impl_.presence_penalty_)*/0
  , /*decltype(_impl_.top_p_)*/0
  , /*decltype(_impl_.repetition_penalty_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CharacterAdvancedSettings_ConversationConfig_EngineSpecDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CharacterAdvancedSettings_ConversationConfig_EngineSpecDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CharacterAdvancedSettings_ConversationConfig_EngineSpecDefaultTypeInternal() {}
  union {
    CharacterAdvancedSettings_ConversationConfig_EngineSpec _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CharacterAdvancedSettings_ConversationConfig_EngineSpecDefaultTypeInternal _CharacterAdvancedSettings_ConversationConfig_EngineSpec_default_instance_;
PROTOBUF_CONSTEXPR CharacterAdvancedSettings_ConversationConfig::CharacterAdvancedSettings_ConversationConfig(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.engine_spec_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CharacterAdvancedSettings_ConversationConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CharacterAdvancedSettings_ConversationConfigDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CharacterAdvancedSettings_ConversationConfigDefaultTypeInternal() {}
  union {
    CharacterAdvancedSettings_ConversationConfig _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CharacterAdvancedSettings_ConversationConfigDefaultTypeInternal _CharacterAdvancedSettings_ConversationConfig_default_instance_;
PROTOBUF_CONSTEXPR CharacterAdvancedSettings_SafetySpec::CharacterAdvancedSettings_SafetySpec(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.allowed_topics_)*/{}
  , /*decltype(_impl_._allowed_topics_cached_byte_size_)*/{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CharacterAdvancedSettings_SafetySpecDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CharacterAdvancedSettings_SafetySpecDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CharacterAdvancedSettings_SafetySpecDefaultTypeInternal() {}
  union {
    CharacterAdvancedSettings_SafetySpec _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CharacterAdvancedSettings_SafetySpecDefaultTypeInternal _CharacterAdvancedSettings_SafetySpec_default_instance_;
PROTOBUF_CONSTEXPR CharacterAdvancedSettings::CharacterAdvancedSettings(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.custom_prompt_template_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.additional_agent_info_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.conversation_config_)*/nullptr
  , /*decltype(_impl_.speech_safety_spec_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CharacterAdvancedSettingsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CharacterAdvancedSettingsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CharacterAdvancedSettingsDefaultTypeInternal() {}
  union {
    CharacterAdvancedSettings _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CharacterAdvancedSettingsDefaultTypeInternal _CharacterAdvancedSettings_default_instance_;
PROTOBUF_CONSTEXPR GetCharacterShareInfoRequest::GetCharacterShareInfoRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.view_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetCharacterShareInfoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetCharacterShareInfoRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetCharacterShareInfoRequestDefaultTypeInternal() {}
  union {
    GetCharacterShareInfoRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetCharacterShareInfoRequestDefaultTypeInternal _GetCharacterShareInfoRequest_default_instance_;
PROTOBUF_CONSTEXPR CharacterShareInfo::CharacterShareInfo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.external_ids_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CharacterShareInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CharacterShareInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CharacterShareInfoDefaultTypeInternal() {}
  union {
    CharacterShareInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CharacterShareInfoDefaultTypeInternal _CharacterShareInfo_default_instance_;
PROTOBUF_CONSTEXPR CheckDeployInfoRequest::CheckDeployInfoRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.character_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CheckDeployInfoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CheckDeployInfoRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CheckDeployInfoRequestDefaultTypeInternal() {}
  union {
    CheckDeployInfoRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CheckDeployInfoRequestDefaultTypeInternal _CheckDeployInfoRequest_default_instance_;
PROTOBUF_CONSTEXPR DeployCharacterAsyncMetadata::DeployCharacterAsyncMetadata(
    ::_pbi::ConstantInitialized) {}
struct DeployCharacterAsyncMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeployCharacterAsyncMetadataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeployCharacterAsyncMetadataDefaultTypeInternal() {}
  union {
    DeployCharacterAsyncMetadata _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeployCharacterAsyncMetadataDefaultTypeInternal _DeployCharacterAsyncMetadata_default_instance_;
PROTOBUF_CONSTEXPR DeployCharacterAsyncResponse::DeployCharacterAsyncResponse(
    ::_pbi::ConstantInitialized) {}
struct DeployCharacterAsyncResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeployCharacterAsyncResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeployCharacterAsyncResponseDefaultTypeInternal() {}
  union {
    DeployCharacterAsyncResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeployCharacterAsyncResponseDefaultTypeInternal _DeployCharacterAsyncResponse_default_instance_;
PROTOBUF_CONSTEXPR CreateCharacterMetadata::CreateCharacterMetadata(
    ::_pbi::ConstantInitialized) {}
struct CreateCharacterMetadataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateCharacterMetadataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateCharacterMetadataDefaultTypeInternal() {}
  union {
    CreateCharacterMetadata _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateCharacterMetadataDefaultTypeInternal _CreateCharacterMetadata_default_instance_;
PROTOBUF_CONSTEXPR CheckDeployInfoResponse::CheckDeployInfoResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.is_fresh_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CheckDeployInfoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CheckDeployInfoResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CheckDeployInfoResponseDefaultTypeInternal() {}
  union {
    CheckDeployInfoResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CheckDeployInfoResponseDefaultTypeInternal _CheckDeployInfoResponse_default_instance_;
}  // namespace v1alpha
}  // namespace studio
}  // namespace inworld
}  // namespace ai
static ::_pb::Metadata file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto[45];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto[10];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto = nullptr;

const uint32_t TableStruct_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterDescription_CustomDialogStyle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterDescription_CustomDialogStyle, _impl_.uuid_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterDescription_CustomDialogStyle, _impl_.display_name_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterDescription_CustomDialogStyle, _impl_.is_active_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterDescription_CustomDialogStyle, _impl_.adjectives_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterDescription_CustomDialogStyle, _impl_.adverbs_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterDescription_CustomDialogStyle, _impl_.colloquialism_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterDescription, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterDescription, _impl_.given_name_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterDescription, _impl_.description_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterDescription, _impl_.pronoun_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterDescription, _impl_.nicknames_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterDescription, _impl_.motivation_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterDescription, _impl_.wikipedia_uri_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterDescription, _impl_.player_role_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterDescription, _impl_.default_context_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterDescription, _impl_.example_dialog_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterDescription, _impl_.example_dialog_style_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterDescription, _impl_.personality_adjectives_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterDescription, _impl_.life_stage_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterDescription, _impl_.hobby_or_interests_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterDescription, _impl_.character_role_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterDescription, _impl_.narrative_actions_enabled_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterDescription, _impl_.custom_dialog_styles_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterDescription, _impl_.flaws_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_BrainSettings_ConversationConfig_FillerSpec, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_BrainSettings_ConversationConfig_FillerSpec, _impl_.fillers_disabled_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_BrainSettings_ConversationConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_BrainSettings_ConversationConfig, _impl_.filler_spec_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_BrainSettings_ConversationConfig, _impl_.emotions_disabled_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_BrainSettings_ConversationConfig, _impl_.behavioral_contexts_disabled_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_BrainSettings, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_BrainSettings, _impl_.conversation_config_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_BrainTrigger, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_BrainTrigger, _impl_.trigger_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_BrainTrigger, _impl_.situation_description_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_BrainTrigger, _impl_.start_conversation_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterAssets, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterAssets, _impl_.rpm_model_uri_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterAssets, _impl_.rpm_image_uri_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterAssets, _impl_.rpm_image_uri_portrait_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterAssets, _impl_.rpm_image_uri_posture_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterAssets, _impl_.voice_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterAssets, _impl_.avatar_img_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterAssets, _impl_.avatar_img_original_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterInitialMood, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterInitialMood, _impl_.joy_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterInitialMood, _impl_.fear_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterInitialMood, _impl_.trust_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterInitialMood, _impl_.surprise_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterPersonality, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterPersonality, _impl_.positive_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterPersonality, _impl_.peaceful_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterPersonality, _impl_.open_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_CharacterPersonality, _impl_.extravert_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_Fact, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_Fact, _impl_.uuid_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_Fact, _impl_.text_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_Fact, _impl_.tags_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_Meta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_Meta, _impl_.total_triggers_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_Meta, _impl_.total_common_knowledge_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_SharedPortalInfo_InteractionCountStat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_SharedPortalInfo_InteractionCountStat, _impl_.total_count_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_SharedPortalInfo_InteractionCountStat, _impl_.total_unread_count_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_SharedPortalInfo_InteractionCountStat, _impl_.total_read_count_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_SharedPortalInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_SharedPortalInfo, _impl_.is_shared_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_SharedPortalInfo, _impl_.byline_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_SharedPortalInfo, _impl_.prompt_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_SharedPortalInfo, _impl_.short_alias_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_SharedPortalInfo, _impl_.allowed_on_showcase_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_SharedPortalInfo, _impl_.interaction_count_stat_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_SafetyConfigEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_SafetyConfigEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_SafetyConfigEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character_SafetyConfigEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character, _impl_.language_code_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character, _impl_.default_character_description_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character, _impl_.brain_settings_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character, _impl_.brain_triggers_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character, _impl_.default_character_assets_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character, _impl_.initial_mood_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character, _impl_.personality_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character, _impl_.common_knowledges_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character, _impl_.social_rank_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character, _impl_.scenes_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character, _impl_.facts_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character, _impl_.behavioral_contexts_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character, _impl_.meta_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character, _impl_.emotional_fluidity_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character, _impl_.share_portal_info_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character, _impl_.yaml_config_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character, _impl_.safety_config_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character, _impl_.relationship_fluidity_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Character, _impl_.fourth_wall_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::GetCharacterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::GetCharacterRequest, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::GetCharacterRequest, _impl_.view_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::GetCharacterAdvancedSettingsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::GetCharacterAdvancedSettingsRequest, _impl_.name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::UpdateCharacterAdvancedSettingsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::UpdateCharacterAdvancedSettingsRequest, _impl_.character_advanced_settings_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::UpdateCharacterAdvancedSettingsRequest, _impl_.update_mask_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ListCharactersRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ListCharactersRequest, _impl_.parent_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ListCharactersRequest, _impl_.page_size_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ListCharactersRequest, _impl_.page_token_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ListCharactersRequest, _impl_.view_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ListCharactersRequest, _impl_.filter_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CreateCharacterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CreateCharacterRequest, _impl_.parent_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CreateCharacterRequest, _impl_.character_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CreateCharacterRequest, _impl_.skip_auto_create_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::UpdateCharacterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::UpdateCharacterRequest, _impl_.character_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::UpdateCharacterRequest, _impl_.update_mask_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::DeleteCharacterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::DeleteCharacterRequest, _impl_.name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::DeployCharacterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::DeployCharacterRequest, _impl_.name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CloneCharacterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CloneCharacterRequest, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CloneCharacterRequest, _impl_.workspace_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CloneCharacterRequest, _impl_.new_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ListCharactersResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ListCharactersResponse, _impl_.characters_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ListCharactersResponse, _impl_.next_page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ReplaceCharacterRpmModelRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ReplaceCharacterRpmModelRequest, _impl_.character_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ReplaceCharacterRpmModelRequest, _impl_.rpm_model_uri_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ReplaceCharacterImageRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ReplaceCharacterImageRequest, _impl_.character_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ReplaceCharacterImageRequest, _impl_.content_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::PreviewPromptTemplateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::PreviewPromptTemplateRequest, _impl_.character_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::PreviewPromptTemplateRequest, _impl_.template__),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::PreviewPromptTempalteResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::PreviewPromptTempalteResponse, _impl_.prompt_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::PreviewPromptTempalteResponse, _impl_.errors_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ShareCharacterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ShareCharacterRequest, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ShareCharacterRequest, _impl_.external_ids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ShareCharacterPortalRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ShareCharacterPortalRequest, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ShareCharacterPortalRequest, _impl_.byline_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ShareCharacterPortalRequest, _impl_.prompt_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ShareCharacterPortalRequest, _impl_.allowed_on_showcase_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::UnshareCharacterPortalRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::UnshareCharacterPortalRequest, _impl_.name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ListSharedCharactersRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ListSharedCharactersRequest, _impl_.parent_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ListSharedCharactersRequest, _impl_.page_size_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ListSharedCharactersRequest, _impl_.page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ListSharedCharactersResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ListSharedCharactersResponse, _impl_.shared_characters_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ListSharedCharactersResponse, _impl_.next_page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig_EngineSpec, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig_EngineSpec, _impl_.engine_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig_EngineSpec, _impl_.temperature_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig_EngineSpec, _impl_.max_tokens_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig_EngineSpec, _impl_.frequency_penalty_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig_EngineSpec, _impl_.presence_penalty_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig_EngineSpec, _impl_.top_p_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig_EngineSpec, _impl_.repetition_penalty_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig, _impl_.engine_spec_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_SafetySpec, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_SafetySpec, _impl_.allowed_topics_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CharacterAdvancedSettings, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CharacterAdvancedSettings, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CharacterAdvancedSettings, _impl_.conversation_config_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CharacterAdvancedSettings, _impl_.custom_prompt_template_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CharacterAdvancedSettings, _impl_.speech_safety_spec_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CharacterAdvancedSettings, _impl_.additional_agent_info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::GetCharacterShareInfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::GetCharacterShareInfoRequest, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::GetCharacterShareInfoRequest, _impl_.view_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CharacterShareInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CharacterShareInfo, _impl_.external_ids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CheckDeployInfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CheckDeployInfoRequest, _impl_.character_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::DeployCharacterAsyncMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::DeployCharacterAsyncResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CreateCharacterMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CheckDeployInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CheckDeployInfoResponse, _impl_.is_fresh_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::ai::inworld::studio::v1alpha::Character_CharacterDescription_CustomDialogStyle)},
  { 12, -1, -1, sizeof(::ai::inworld::studio::v1alpha::Character_CharacterDescription)},
  { 35, -1, -1, sizeof(::ai::inworld::studio::v1alpha::Character_BrainSettings_ConversationConfig_FillerSpec)},
  { 42, -1, -1, sizeof(::ai::inworld::studio::v1alpha::Character_BrainSettings_ConversationConfig)},
  { 51, -1, -1, sizeof(::ai::inworld::studio::v1alpha::Character_BrainSettings)},
  { 58, -1, -1, sizeof(::ai::inworld::studio::v1alpha::Character_BrainTrigger)},
  { 67, -1, -1, sizeof(::ai::inworld::studio::v1alpha::Character_CharacterAssets)},
  { 80, -1, -1, sizeof(::ai::inworld::studio::v1alpha::Character_CharacterInitialMood)},
  { 90, -1, -1, sizeof(::ai::inworld::studio::v1alpha::Character_CharacterPersonality)},
  { 100, -1, -1, sizeof(::ai::inworld::studio::v1alpha::Character_Fact)},
  { 109, -1, -1, sizeof(::ai::inworld::studio::v1alpha::Character_Meta)},
  { 117, -1, -1, sizeof(::ai::inworld::studio::v1alpha::Character_SharedPortalInfo_InteractionCountStat)},
  { 126, -1, -1, sizeof(::ai::inworld::studio::v1alpha::Character_SharedPortalInfo)},
  { 138, 146, -1, sizeof(::ai::inworld::studio::v1alpha::Character_SafetyConfigEntry_DoNotUse)},
  { 148, -1, -1, sizeof(::ai::inworld::studio::v1alpha::Character)},
  { 174, -1, -1, sizeof(::ai::inworld::studio::v1alpha::GetCharacterRequest)},
  { 182, -1, -1, sizeof(::ai::inworld::studio::v1alpha::GetCharacterAdvancedSettingsRequest)},
  { 189, -1, -1, sizeof(::ai::inworld::studio::v1alpha::UpdateCharacterAdvancedSettingsRequest)},
  { 197, -1, -1, sizeof(::ai::inworld::studio::v1alpha::ListCharactersRequest)},
  { 208, -1, -1, sizeof(::ai::inworld::studio::v1alpha::CreateCharacterRequest)},
  { 217, -1, -1, sizeof(::ai::inworld::studio::v1alpha::UpdateCharacterRequest)},
  { 225, -1, -1, sizeof(::ai::inworld::studio::v1alpha::DeleteCharacterRequest)},
  { 232, -1, -1, sizeof(::ai::inworld::studio::v1alpha::DeployCharacterRequest)},
  { 239, -1, -1, sizeof(::ai::inworld::studio::v1alpha::CloneCharacterRequest)},
  { 248, -1, -1, sizeof(::ai::inworld::studio::v1alpha::ListCharactersResponse)},
  { 256, -1, -1, sizeof(::ai::inworld::studio::v1alpha::ReplaceCharacterRpmModelRequest)},
  { 264, -1, -1, sizeof(::ai::inworld::studio::v1alpha::ReplaceCharacterImageRequest)},
  { 272, -1, -1, sizeof(::ai::inworld::studio::v1alpha::PreviewPromptTemplateRequest)},
  { 280, -1, -1, sizeof(::ai::inworld::studio::v1alpha::PreviewPromptTempalteResponse)},
  { 288, -1, -1, sizeof(::ai::inworld::studio::v1alpha::ShareCharacterRequest)},
  { 296, -1, -1, sizeof(::ai::inworld::studio::v1alpha::ShareCharacterPortalRequest)},
  { 306, -1, -1, sizeof(::ai::inworld::studio::v1alpha::UnshareCharacterPortalRequest)},
  { 313, -1, -1, sizeof(::ai::inworld::studio::v1alpha::ListSharedCharactersRequest)},
  { 322, -1, -1, sizeof(::ai::inworld::studio::v1alpha::ListSharedCharactersResponse)},
  { 330, -1, -1, sizeof(::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig_EngineSpec)},
  { 343, -1, -1, sizeof(::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig)},
  { 350, -1, -1, sizeof(::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_SafetySpec)},
  { 357, -1, -1, sizeof(::ai::inworld::studio::v1alpha::CharacterAdvancedSettings)},
  { 368, -1, -1, sizeof(::ai::inworld::studio::v1alpha::GetCharacterShareInfoRequest)},
  { 376, -1, -1, sizeof(::ai::inworld::studio::v1alpha::CharacterShareInfo)},
  { 383, -1, -1, sizeof(::ai::inworld::studio::v1alpha::CheckDeployInfoRequest)},
  { 390, -1, -1, sizeof(::ai::inworld::studio::v1alpha::DeployCharacterAsyncMetadata)},
  { 396, -1, -1, sizeof(::ai::inworld::studio::v1alpha::DeployCharacterAsyncResponse)},
  { 402, -1, -1, sizeof(::ai::inworld::studio::v1alpha::CreateCharacterMetadata)},
  { 408, -1, -1, sizeof(::ai::inworld::studio::v1alpha::CheckDeployInfoResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::ai::inworld::studio::v1alpha::_Character_CharacterDescription_CustomDialogStyle_default_instance_._instance,
  &::ai::inworld::studio::v1alpha::_Character_CharacterDescription_default_instance_._instance,
  &::ai::inworld::studio::v1alpha::_Character_BrainSettings_ConversationConfig_FillerSpec_default_instance_._instance,
  &::ai::inworld::studio::v1alpha::_Character_BrainSettings_ConversationConfig_default_instance_._instance,
  &::ai::inworld::studio::v1alpha::_Character_BrainSettings_default_instance_._instance,
  &::ai::inworld::studio::v1alpha::_Character_BrainTrigger_default_instance_._instance,
  &::ai::inworld::studio::v1alpha::_Character_CharacterAssets_default_instance_._instance,
  &::ai::inworld::studio::v1alpha::_Character_CharacterInitialMood_default_instance_._instance,
  &::ai::inworld::studio::v1alpha::_Character_CharacterPersonality_default_instance_._instance,
  &::ai::inworld::studio::v1alpha::_Character_Fact_default_instance_._instance,
  &::ai::inworld::studio::v1alpha::_Character_Meta_default_instance_._instance,
  &::ai::inworld::studio::v1alpha::_Character_SharedPortalInfo_InteractionCountStat_default_instance_._instance,
  &::ai::inworld::studio::v1alpha::_Character_SharedPortalInfo_default_instance_._instance,
  &::ai::inworld::studio::v1alpha::_Character_SafetyConfigEntry_DoNotUse_default_instance_._instance,
  &::ai::inworld::studio::v1alpha::_Character_default_instance_._instance,
  &::ai::inworld::studio::v1alpha::_GetCharacterRequest_default_instance_._instance,
  &::ai::inworld::studio::v1alpha::_GetCharacterAdvancedSettingsRequest_default_instance_._instance,
  &::ai::inworld::studio::v1alpha::_UpdateCharacterAdvancedSettingsRequest_default_instance_._instance,
  &::ai::inworld::studio::v1alpha::_ListCharactersRequest_default_instance_._instance,
  &::ai::inworld::studio::v1alpha::_CreateCharacterRequest_default_instance_._instance,
  &::ai::inworld::studio::v1alpha::_UpdateCharacterRequest_default_instance_._instance,
  &::ai::inworld::studio::v1alpha::_DeleteCharacterRequest_default_instance_._instance,
  &::ai::inworld::studio::v1alpha::_DeployCharacterRequest_default_instance_._instance,
  &::ai::inworld::studio::v1alpha::_CloneCharacterRequest_default_instance_._instance,
  &::ai::inworld::studio::v1alpha::_ListCharactersResponse_default_instance_._instance,
  &::ai::inworld::studio::v1alpha::_ReplaceCharacterRpmModelRequest_default_instance_._instance,
  &::ai::inworld::studio::v1alpha::_ReplaceCharacterImageRequest_default_instance_._instance,
  &::ai::inworld::studio::v1alpha::_PreviewPromptTemplateRequest_default_instance_._instance,
  &::ai::inworld::studio::v1alpha::_PreviewPromptTempalteResponse_default_instance_._instance,
  &::ai::inworld::studio::v1alpha::_ShareCharacterRequest_default_instance_._instance,
  &::ai::inworld::studio::v1alpha::_ShareCharacterPortalRequest_default_instance_._instance,
  &::ai::inworld::studio::v1alpha::_UnshareCharacterPortalRequest_default_instance_._instance,
  &::ai::inworld::studio::v1alpha::_ListSharedCharactersRequest_default_instance_._instance,
  &::ai::inworld::studio::v1alpha::_ListSharedCharactersResponse_default_instance_._instance,
  &::ai::inworld::studio::v1alpha::_CharacterAdvancedSettings_ConversationConfig_EngineSpec_default_instance_._instance,
  &::ai::inworld::studio::v1alpha::_CharacterAdvancedSettings_ConversationConfig_default_instance_._instance,
  &::ai::inworld::studio::v1alpha::_CharacterAdvancedSettings_SafetySpec_default_instance_._instance,
  &::ai::inworld::studio::v1alpha::_CharacterAdvancedSettings_default_instance_._instance,
  &::ai::inworld::studio::v1alpha::_GetCharacterShareInfoRequest_default_instance_._instance,
  &::ai::inworld::studio::v1alpha::_CharacterShareInfo_default_instance_._instance,
  &::ai::inworld::studio::v1alpha::_CheckDeployInfoRequest_default_instance_._instance,
  &::ai::inworld::studio::v1alpha::_DeployCharacterAsyncMetadata_default_instance_._instance,
  &::ai::inworld::studio::v1alpha::_DeployCharacterAsyncResponse_default_instance_._instance,
  &::ai::inworld::studio::v1alpha::_CreateCharacterMetadata_default_instance_._instance,
  &::ai::inworld::studio::v1alpha::_CheckDeployInfoResponse_default_instance_._instance,
};

const char descriptor_table_protodef_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n*ai/inworld/studio/v1alpha/characters.p"
  "roto\022\031ai.inworld.studio.v1alpha\032\034google/"
  "api/annotations.proto\032\027google/api/client"
  ".proto\032\037google/api/field_behavior.proto\032"
  "\031google/api/resource.proto\032#google/longr"
  "unning/operations.proto\032\033google/protobuf"
  "/empty.proto\032 google/protobuf/field_mask"
  ".proto\032\roptions.proto\0323ai/inworld/studio"
  "/v1alpha/behavioral_contexts.proto\032&ai/i"
  "nworld/studio/v1alpha/scenes.proto\032\014voic"
  "es.proto\"\214\'\n\tCharacter\022C\n\004name\030\001 \001(\tB5\242\317"
  "\"1\n/\032-workspaces/workspace-1/characters/"
  "character-1\022\025\n\rlanguage_code\030\002 \001(\t\022`\n\035de"
  "fault_character_description\030\003 \001(\01329.ai.i"
  "nworld.studio.v1alpha.Character.Characte"
  "rDescription\022J\n\016brain_settings\030\004 \001(\01322.a"
  "i.inworld.studio.v1alpha.Character.Brain"
  "Settings\022I\n\016brain_triggers\030\005 \003(\01321.ai.in"
  "world.studio.v1alpha.Character.BrainTrig"
  "ger\022V\n\030default_character_assets\030\007 \001(\01324."
  "ai.inworld.studio.v1alpha.Character.Char"
  "acterAssets\022O\n\014initial_mood\030\t \001(\01329.ai.i"
  "nworld.studio.v1alpha.Character.Characte"
  "rInitialMood\022N\n\013personality\030\n \001(\01329.ai.i"
  "nworld.studio.v1alpha.Character.Characte"
  "rPersonality\022\031\n\021common_knowledges\030\013 \003(\t\022"
  "\023\n\013social_rank\030\014 \001(\002\0220\n\006scenes\030\r \003(\0132 .a"
  "i.inworld.studio.v1alpha.Scene\0228\n\005facts\030"
  "\016 \003(\0132).ai.inworld.studio.v1alpha.Charac"
  "ter.Fact\022I\n\023behavioral_contexts\030\017 \003(\0132,."
  "ai.inworld.studio.v1alpha.BehavioralCont"
  "ext\022<\n\004meta\030\020 \001(\0132).ai.inworld.studio.v1"
  "alpha.Character.MetaB\003\340A\003\022\032\n\022emotional_f"
  "luidity\030\021 \001(\002\022U\n\021share_portal_info\030\022 \001(\013"
  "25.ai.inworld.studio.v1alpha.Character.S"
  "haredPortalInfoB\003\340A\003\022\023\n\013yaml_config\030\023 \001("
  "\t\022M\n\rsafety_config\030\025 \003(\01326.ai.inworld.st"
  "udio.v1alpha.Character.SafetyConfigEntry"
  "\022\035\n\025relationship_fluidity\030\026 \001(\002\022O\n\013fourt"
  "h_wall\030\027 \001(\0162:.ai.inworld.studio.v1alpha"
  ".Character.FourthWallContainment\032\305\017\n\024Cha"
  "racterDescription\022)\n\ngiven_name\030\001 \001(\tB\025\242"
  "\317\"\021\n\017\032\rgiven name #1\022\023\n\013description\030\002 \001("
  "\t\022R\n\007pronoun\030\003 \001(\0162A.ai.inworld.studio.v"
  "1alpha.Character.CharacterDescription.Pr"
  "onoun\022\021\n\tnicknames\030\004 \003(\t\022\022\n\nmotivation\030\005"
  " \001(\t\022\025\n\rwikipedia_uri\030\006 \001(\t\022\023\n\013player_ro"
  "le\030\007 \001(\t\022\027\n\017default_context\030\010 \001(\t\022\026\n\016exa"
  "mple_dialog\030\t \001(\t\022j\n\024example_dialog_styl"
  "e\030\n \001(\0162L.ai.inworld.studio.v1alpha.Char"
  "acter.CharacterDescription.ExampleDialog"
  "Style\022\036\n\026personality_adjectives\030\013 \003(\t\022W\n"
  "\nlife_stage\030\014 \001(\0162C.ai.inworld.studio.v1"
  "alpha.Character.CharacterDescription.Lif"
  "eStage\022\032\n\022hobby_or_interests\030\r \003(\t\022\026\n\016ch"
  "aracter_role\030\016 \001(\t\022!\n\031narrative_actions_"
  "enabled\030\017 \001(\010\022i\n\024custom_dialog_styles\030\020 "
  "\003(\0132K.ai.inworld.studio.v1alpha.Characte"
  "r.CharacterDescription.CustomDialogStyle"
  "\022\r\n\005flaws\030\021 \001(\t\032\206\001\n\021CustomDialogStyle\022\014\n"
  "\004uuid\030\001 \001(\t\022\024\n\014display_name\030\002 \001(\t\022\021\n\tis_"
  "active\030\003 \001(\010\022\022\n\nadjectives\030\004 \003(\t\022\017\n\007adve"
  "rbs\030\005 \003(\t\022\025\n\rcolloquialism\030\006 \001(\t\"[\n\007Pron"
  "oun\022\027\n\023PRONOUN_UNSPECIFIED\020\000\022\022\n\016PRONOUN_"
  "FEMALE\020\001\022\020\n\014PRONOUN_MALE\020\002\022\021\n\rPRONOUN_OT"
  "HER\020\003\"\275\005\n\022ExampleDialogStyle\022$\n EXAMPLE_"
  "DIALOG_STYLE_UNSPECIFIED\020\000\022 \n\034EXAMPLE_DI"
  "ALOG_STYLE_DEFAULT\020\001\022\037\n\033EXAMPLE_DIALOG_S"
  "TYLE_BUBBLY\020\002\022\037\n\033EXAMPLE_DIALOG_STYLE_FO"
  "RMAL\020\003\022\036\n\032EXAMPLE_DIALOG_STYLE_BLUNT\020\004\022$"
  "\n EXAMPLE_DIALOG_STYLE_INQUISITIVE\020\005\022#\n\037"
  "EXAMPLE_DIALOG_STYLE_COMMANDING\020\006\022#\n\037EXA"
  "MPLE_DIALOG_STYLE_EMPATHETIC\020\007\022%\n!EXAMPL"
  "E_DIALOG_STYLE_ENTERTAINING\020\010\022&\n\"EXAMPLE"
  "_DIALOG_STYLE_HYPOCHONDRIAC\020\t\022!\n\035EXAMPLE"
  "_DIALOG_STYLE_LAIDBACK\020\n\022$\n EXAMPLE_DIAL"
  "OG_STYLE_LONG_WINDED\020\013\022\036\n\032EXAMPLE_DIALOG"
  "_STYLE_MORAL\020\014\022#\n\037EXAMPLE_DIALOG_STYLE_M"
  "YSTERIOUS\020\r\022\"\n\036EXAMPLE_DIALOG_STYLE_RACO"
  "NTEUR\020\016\022\"\n\036EXAMPLE_DIALOG_STYLE_SARCASTI"
  "C\020\017\022\"\n\036EXAMPLE_DIALOG_STYLE_TENACIOUS\020\020\022"
  "#\n\037EXAMPLE_DIALOG_STYLE_VILLAINOUS\020\021\022\037\n\033"
  "EXAMPLE_DIALOG_STYLE_CUSTOM\020\022\"\270\002\n\tLifeSt"
  "age\022\032\n\026LIFE_STAGE_UNSPECIFIED\020\000\022\032\n\022LIFE_"
  "STAGE_INFANCY\020\001\032\002\010\001\022\036\n\026LIFE_STAGE_TODDLE"
  "RHOOD\020\002\032\002\010\001\022\034\n\024LIFE_STAGE_PRESCHOOL\020\003\032\002\010"
  "\001\022\037\n\027LIFE_STAGE_EARLY_SCHOOL\020\004\032\002\010\001\022\032\n\026LI"
  "FE_STAGE_ADOLESCENCE\020\005\022\036\n\032LIFE_STAGE_YOU"
  "NG_ADULTHOOD\020\006\022\037\n\033LIFE_STAGE_MIDDLE_ADUL"
  "THOOD\020\007\022\035\n\031LIFE_STAGE_LATE_ADULTHOOD\020\010\022\030"
  "\n\024LIFE_STAGE_CHILDHOOD\020\t\032\362\002\n\rBrainSettin"
  "gs\022b\n\023conversation_config\030\001 \001(\0132E.ai.inw"
  "orld.studio.v1alpha.Character.BrainSetti"
  "ngs.ConversationConfig\032\360\001\n\022ConversationC"
  "onfig\022e\n\013filler_spec\030\002 \001(\0132P.ai.inworld."
  "studio.v1alpha.Character.BrainSettings.C"
  "onversationConfig.FillerSpec\022\031\n\021emotions"
  "_disabled\030\004 \001(\010\022$\n\034behavioral_contexts_d"
  "isabled\030\005 \001(\010\032&\n\nFillerSpec\022\030\n\020fillers_d"
  "isabled\030\001 \001(\010J\004\010\001\020\002J\004\010\003\020\004J\004\010\002\020\003J\004\010\003\020\004\032w\n"
  "\014BrainTrigger\022,\n\007trigger\030\001 \001(\tB\033\372A\030\n\026api"
  ".inworld.ai/Trigger\022\035\n\025situation_descrip"
  "tion\030\002 \001(\t\022\032\n\022start_conversation\030\003 \001(\010\032\356"
  "\001\n\017CharacterAssets\022\032\n\rrpm_model_uri\030\002 \001("
  "\tB\003\340A\003\022\034\n\rrpm_image_uri\030\003 \001(\tB\005\030\001\340A\003\022#\n\026"
  "rpm_image_uri_portrait\030\004 \001(\tB\003\340A\003\022\"\n\025rpm"
  "_image_uri_posture\030\005 \001(\tB\003\340A\003\022\'\n\005voice\030\006"
  " \001(\0132\030.ai.inworld.voices.Voice\022\022\n\navatar"
  "_img\030\007 \001(\t\022\033\n\023avatar_img_original\030\010 \001(\t\032"
  "R\n\024CharacterInitialMood\022\013\n\003joy\030\001 \001(\005\022\014\n\004"
  "fear\030\002 \001(\005\022\r\n\005trust\030\003 \001(\005\022\020\n\010surprise\030\004 "
  "\001(\005\032[\n\024CharacterPersonality\022\020\n\010positive\030"
  "\001 \001(\005\022\020\n\010peaceful\030\002 \001(\005\022\014\n\004open\030\003 \001(\005\022\021\n"
  "\textravert\030\004 \001(\005\032Z\n\004Fact\022\014\n\004uuid\030\001 \001(\t\022\014"
  "\n\004text\030\002 \003(\t\0226\n\004tags\030\003 \003(\0162(.ai.inworld."
  "studio.v1alpha.Character.Tag\032>\n\004Meta\022\026\n\016"
  "total_triggers\030\001 \001(\005\022\036\n\026total_common_kno"
  "wledge\030\002 \001(\005\032\306\002\n\020SharedPortalInfo\022\021\n\tis_"
  "shared\030\001 \001(\010\022\016\n\006byline\030\002 \001(\t\022\016\n\006prompt\030\003"
  " \001(\t\022\023\n\013short_alias\030\004 \001(\t\022\033\n\023allowed_on_"
  "showcase\030\005 \001(\010\022j\n\026interaction_count_stat"
  "\030\006 \001(\0132J.ai.inworld.studio.v1alpha.Chara"
  "cter.SharedPortalInfo.InteractionCountSt"
  "at\032a\n\024InteractionCountStat\022\023\n\013total_coun"
  "t\030\001 \001(\005\022\032\n\022total_unread_count\030\002 \001(\005\022\030\n\020t"
  "otal_read_count\030\003 \001(\005\032[\n\021SafetyConfigEnt"
  "ry\022\013\n\003key\030\001 \001(\t\0225\n\005value\030\002 \001(\0162&.ai.inwo"
  "rld.studio.v1alpha.SafetyLevel:\0028\001\">\n\003Ta"
  "g\022\023\n\017TAG_UNSPECIFIED\020\000\022\016\n\nTAG_MEMORY\020\001\022\022"
  "\n\016TAG_APPEARANCE\020\002\"\220\001\n\025FourthWallContain"
  "ment\022\'\n#FOURTH_WALL_CONTAINMENT_UNSPECIF"
  "IED\020\000\022$\n FOURTH_WALL_CONTAINMENT_DISABLE"
  "D\020\001\022(\n$FOURTH_WALL_CONTAINMENT_EXPERIMEN"
  "TAL\020\002:L\352AI\n\030api.inworld.ai/Character\022-wo"
  "rkspaces/{workspace}/characters/{charact"
  "er}J\004\010\006\020\007J\004\010\024\020\025\"\201\001\n\023GetCharacterRequest\022"
  ".\n\004name\030\001 \001(\tB \340A\002\372A\032\n\030api.inworld.ai/Ch"
  "aracter\022:\n\004view\030\002 \001(\0162,.ai.inworld.studi"
  "o.v1alpha.CharacterItemView\"U\n#GetCharac"
  "terAdvancedSettingsRequest\022.\n\004name\030\001 \001(\t"
  "B \340A\002\372A\032\n\030api.inworld.ai/Character\"\276\001\n&U"
  "pdateCharacterAdvancedSettingsRequest\022^\n"
  "\033character_advanced_settings\030\001 \001(\01324.ai."
  "inworld.studio.v1alpha.CharacterAdvanced"
  "SettingsB\003\340A\002\0224\n\013update_mask\030\002 \001(\0132\032.goo"
  "gle.protobuf.FieldMaskB\003\340A\002\"\322\001\n\025ListChar"
  "actersRequest\022J\n\006parent\030\001 \001(\tB:\340A\002\372A4\n\030a"
  "pi.inworld.ai/Workspace\022\030api.inworld.ai/"
  "Character\022\021\n\tpage_size\030\002 \001(\005\022\022\n\npage_tok"
  "en\030\003 \001(\t\0226\n\004view\030\004 \001(\0162(.ai.inworld.stud"
  "io.v1alpha.CharacterView\022\016\n\006filter\030\005 \001(\t"
  "\"\274\001\n\026CreateCharacterRequest\022J\n\006parent\030\001 "
  "\001(\tB:\340A\002\372A4\n\030api.inworld.ai/Workspace\022\030a"
  "pi.inworld.ai/Character\022<\n\tcharacter\030\002 \001"
  "(\0132$.ai.inworld.studio.v1alpha.Character"
  "B\003\340A\002\022\030\n\020skip_auto_create\030\003 \001(\010\"\214\001\n\026Upda"
  "teCharacterRequest\022<\n\tcharacter\030\001 \001(\0132$."
  "ai.inworld.studio.v1alpha.CharacterB\003\340A\002"
  "\0224\n\013update_mask\030\002 \001(\0132\032.google.protobuf."
  "FieldMaskB\003\340A\002\"H\n\026DeleteCharacterRequest"
  "\022.\n\004name\030\001 \001(\tB \340A\002\372A\032\n\030api.inworld.ai/C"
  "haracter\"H\n\026DeployCharacterRequest\022.\n\004na"
  "me\030\001 \001(\tB \340A\002\372A\032\n\030api.inworld.ai/Charact"
  "er\"\223\001\n\025CloneCharacterRequest\022.\n\004name\030\001 \001"
  "(\tB \340A\002\372A\032\n\030api.inworld.ai/Character\0223\n\t"
  "workspace\030\002 \001(\tB \340A\002\372A\032\n\030api.inworld.ai/"
  "Workspace\022\025\n\010new_name\030\003 \001(\tB\003\340A\002\"k\n\026List"
  "CharactersResponse\0228\n\ncharacters\030\001 \003(\0132$"
  ".ai.inworld.studio.v1alpha.Character\022\027\n\017"
  "next_page_token\030\002 \001(\t\"\202\001\n\037ReplaceCharact"
  "erRpmModelRequest\022H\n\tcharacter\030\001 \001(\tB5\242\317"
  "\"1\n/\032-workspaces/workspace-1/characters/"
  "character-1\022\025\n\rrpm_model_uri\030\002 \001(\t\"y\n\034Re"
  "placeCharacterImageRequest\022H\n\tcharacter\030"
  "\001 \001(\tB5\242\317\"1\n/\032-workspaces/workspace-1/ch"
  "aracters/character-1\022\017\n\007content\030\002 \001(\014\"e\n"
  "\034PreviewPromptTemplateRequest\0223\n\tcharact"
  "er\030\001 \001(\tB \340A\002\372A\032\n\030api.inworld.ai/Charact"
  "er\022\020\n\010template\030\002 \001(\t\"D\n\035PreviewPromptTem"
  "palteResponse\022\016\n\006prompt\030\001 \001(\t\022\023\n\006errors\030"
  "\002 \003(\tB\003\340A\003\"]\n\025ShareCharacterRequest\022.\n\004n"
  "ame\030\001 \001(\tB \340A\002\372A\032\n\030api.inworld.ai/Charac"
  "ter\022\024\n\014external_ids\030\002 \003(\t\"\212\001\n\033ShareChara"
  "cterPortalRequest\022.\n\004name\030\001 \001(\tB \340A\002\372A\032\n"
  "\030api.inworld.ai/Character\022\016\n\006byline\030\002 \001("
  "\t\022\016\n\006prompt\030\003 \001(\t\022\033\n\023allowed_on_showcase"
  "\030\004 \001(\010\"O\n\035UnshareCharacterPortalRequest\022"
  ".\n\004name\030\001 \001(\tB \340A\002\372A\032\n\030api.inworld.ai/Ch"
  "aracter\"v\n\033ListSharedCharactersRequest\0220"
  "\n\006parent\030\001 \001(\tB \340A\002\372A\032\n\030api.inworld.ai/W"
  "orkspace\022\021\n\tpage_size\030\002 \001(\005\022\022\n\npage_toke"
  "n\030\003 \001(\t\"x\n\034ListSharedCharactersResponse\022"
  "\?\n\021shared_characters\030\001 \003(\0132$.ai.inworld."
  "studio.v1alpha.Character\022\027\n\017next_page_to"
  "ken\030\002 \001(\t\"\361\t\n\031CharacterAdvancedSettings\022"
  "U\n\004name\030\001 \001(\tBG\242\317\"C\nA\032\?workspaces/worksp"
  "ace-1/characters/character-1/advanced-se"
  "ttings\022d\n\023conversation_config\030\002 \001(\0132G.ai"
  ".inworld.studio.v1alpha.CharacterAdvance"
  "dSettings.ConversationConfig\022\036\n\026custom_p"
  "rompt_template\030\004 \001(\t\022[\n\022speech_safety_sp"
  "ec\030\005 \001(\0132\?.ai.inworld.studio.v1alpha.Cha"
  "racterAdvancedSettings.SafetySpec\022\035\n\025add"
  "itional_agent_info\030\006 \001(\t\032\245\002\n\022Conversatio"
  "nConfig\022g\n\013engine_spec\030\001 \001(\0132R.ai.inworl"
  "d.studio.v1alpha.CharacterAdvancedSettin"
  "gs.ConversationConfig.EngineSpec\032\245\001\n\nEng"
  "ineSpec\022\016\n\006engine\030\001 \001(\t\022\023\n\013temperature\030\002"
  " \001(\002\022\022\n\nmax_tokens\030\003 \001(\005\022\031\n\021frequency_pe"
  "nalty\030\004 \001(\002\022\030\n\020presence_penalty\030\005 \001(\002\022\r\n"
  "\005top_p\030\006 \001(\002\022\032\n\022repetition_penalty\030\007 \001(\002"
  "\032j\n\nSafetySpec\022\\\n\016allowed_topics\030\001 \003(\0162D"
  ".ai.inworld.studio.v1alpha.CharacterAdva"
  "ncedSettings.SafetyTopicName\"\360\002\n\017SafetyT"
  "opicName\022!\n\035SAFETY_TOPIC_NAME_UNSPECIFIE"
  "D\020\000\022 \n\034SAFETY_TOPIC_NAME_SAFE_TOPIC\020\001\022\036\n"
  "\032SAFETY_TOPIC_NAME_POLITICS\020\002\022\036\n\032SAFETY_"
  "TOPIC_NAME_FINANCES\020\003\022&\n\"SAFETY_TOPIC_NA"
  "ME_DISGUSTING_STUFF\020\004\022!\n\035SAFETY_TOPIC_NA"
  "ME_GENDER_BIAS\020\005\022#\n\037SAFETY_TOPIC_NAME_SU"
  "BSTANCE_USE\020\006\022#\n\037SAFETY_TOPIC_NAME_HEALT"
  "H_ADVICE\020\007\022\036\n\032SAFETY_TOPIC_NAME_RELIGION"
  "\020\010\022#\n\037SAFETY_TOPIC_NAME_RELATIONSHIPS\020\t:"
  "n\352Ak\n(api.inworld.ai/CharacterAdvancedSe"
  "ttings\022\?workspaces/{workspace}/character"
  "s/{character}/advanced-settingsJ\004\010\003\020\004\"\216\001"
  "\n\034GetCharacterShareInfoRequest\022.\n\004name\030\001"
  " \001(\tB \340A\002\372A\032\n\030api.inworld.ai/Character\022>"
  "\n\004view\030\002 \001(\01620.ai.inworld.studio.v1alpha"
  ".CharacterSharePurpose\"*\n\022CharacterShare"
  "Info\022\024\n\014external_ids\030\001 \003(\t\"M\n\026CheckDeplo"
  "yInfoRequest\0223\n\tcharacter\030\001 \001(\tB \340A\002\372A\032\n"
  "\030api.inworld.ai/Character\"\036\n\034DeployChara"
  "cterAsyncMetadata\"\036\n\034DeployCharacterAsyn"
  "cResponse\"\031\n\027CreateCharacterMetadata\"+\n\027"
  "CheckDeployInfoResponse\022\020\n\010is_fresh\030\001 \001("
  "\010*k\n\rCharacterView\022\036\n\032CHARACTER_VIEW_UNS"
  "PECIFIED\020\000\022\032\n\026CHARACTER_VIEW_DEFAULT\020\001\022\036"
  "\n\032CHARACTER_VIEW_WITH_SCENES\020\002*|\n\021Charac"
  "terItemView\022#\n\037CHARACTER_ITEM_VIEW_UNSPE"
  "CIFIED\020\000\022\037\n\033CHARACTER_ITEM_VIEW_DEFAULT\020"
  "\001\022!\n\035CHARACTER_ITEM_VIEW_WITH_META\020\002*\210\001\n"
  "\025CharacterSharePurpose\022\'\n#CHARACTER_SHAR"
  "E_PURPOSE_UNSPECIFIED\020\000\022\"\n\036CHARACTER_SHA"
  "RE_PURPOSE_OCULUS\020\001\022\"\n\036CHARACTER_SHARE_P"
  "URPOSE_PORTAL\020\002*\210\001\n\013SafetyLevel\022\034\n\030SAFET"
  "Y_LEVEL_UNSPECIFIED\020\000\022\033\n\027SAFETY_LEVEL_NO"
  "_CONTROL\020\001\022\035\n\031SAFETY_LEVEL_MILD_CONTROL\020"
  "\002\022\037\n\033SAFETY_LEVEL_STRICT_CONTROL\020\0032\216\036\n\nC"
  "haracters\022\231\001\n\017DeployCharacter\0221.ai.inwor"
  "ld.studio.v1alpha.DeployCharacterRequest"
  "\032\026.google.protobuf.Empty\";\202\323\344\223\0025\"0/v1alp"
  "ha/{name=workspaces/*/characters/*}:depl"
  "oy:\001*\022\244\001\n\016CloneCharacter\0220.ai.inworld.st"
  "udio.v1alpha.CloneCharacterRequest\032$.ai."
  "inworld.studio.v1alpha.Character\":\202\323\344\223\0024"
  "\"//v1alpha/{name=workspaces/*/characters"
  "/*}:clone:\001*\022\374\001\n\035DeployCharacterAsynchro"
  "nously\0221.ai.inworld.studio.v1alpha.Deplo"
  "yCharacterRequest\032\035.google.longrunning.O"
  "peration\"\210\001\202\323\344\223\002C\">/v1alpha/{name=worksp"
  "aces/*/characters/*}:deployAsynchronousl"
  "y:\001*\312A<\n\034DeployCharacterAsyncResponse\022\034D"
  "eployCharacterAsyncMetadata\022\236\001\n\014GetChara"
  "cter\022..ai.inworld.studio.v1alpha.GetChar"
  "acterRequest\032$.ai.inworld.studio.v1alpha"
  ".Character\"8\202\323\344\223\002+\022)/v1alpha/{name=works"
  "paces/*/characters/*}\332A\004name\022\261\001\n\016ListCha"
  "racters\0220.ai.inworld.studio.v1alpha.List"
  "CharactersRequest\0321.ai.inworld.studio.v1"
  "alpha.ListCharactersResponse\":\202\323\344\223\002+\022)/v"
  "1alpha/{parent=workspaces/*}/characters\332"
  "A\006parent\022\312\001\n\017UpdateCharacter\0221.ai.inworl"
  "d.studio.v1alpha.UpdateCharacterRequest\032"
  "$.ai.inworld.studio.v1alpha.Character\"^\202"
  "\323\344\223\002@23/v1alpha/{character.name=workspac"
  "es/*/characters/*}:\tcharacter\332A\025characte"
  "r,update_mask\022\333\001\n\017CreateCharacter\0221.ai.i"
  "nworld.studio.v1alpha.CreateCharacterReq"
  "uest\032\035.google.longrunning.Operation\"v\202\323\344"
  "\223\0026\")/v1alpha/{parent=workspaces/*}/char"
  "acters:\tcharacter\332A\020parent,character\312A$\n"
  "\tCharacter\022\027CreateCharacterMetadata\022\226\001\n\017"
  "DeleteCharacter\0221.ai.inworld.studio.v1al"
  "pha.DeleteCharacterRequest\032\026.google.prot"
  "obuf.Empty\"8\202\323\344\223\002+*)/v1alpha/{name=works"
  "paces/*/characters/*}\332A\004name\022\334\001\n\030Replace"
  "CharacterRpmModel\022:.ai.inworld.studio.v1"
  "alpha.ReplaceCharacterRpmModelRequest\032$."
  "ai.inworld.studio.v1alpha.Character\"^\202\323\344"
  "\223\002L\"G/v1alpha/{character=workspaces/*/ch"
  "aracters/*}:replaceCharacterRpmModel:\001*\332"
  "A\tcharacter\022\323\001\n\025ReplaceCharacterImage\0227."
  "ai.inworld.studio.v1alpha.ReplaceCharact"
  "erImageRequest\032$.ai.inworld.studio.v1alp"
  "ha.Character\"[\202\323\344\223\002I\"D/v1alpha/{characte"
  "r=workspaces/*/characters/*}:replaceChar"
  "acterImage:\001*\332A\tcharacter\022\333\001\n\025PreviewPro"
  "mptTemplate\0227.ai.inworld.studio.v1alpha."
  "PreviewPromptTemplateRequest\0328.ai.inworl"
  "d.studio.v1alpha.PreviewPromptTempalteRe"
  "sponse\"O\202\323\344\223\002I\"D/v1alpha/{character=work"
  "spaces/*/characters/*}:previewPromptTemp"
  "late:\001*\022\300\001\n\017CheckDeployInfo\0221.ai.inworld"
  ".studio.v1alpha.CheckDeployInfoRequest\0322"
  ".ai.inworld.studio.v1alpha.CheckDeployIn"
  "foResponse\"F\202\323\344\223\002@\022>/v1alpha/{character="
  "workspaces/*/characters/*}:checkDeployIn"
  "fo\022\340\001\n\034GetCharacterAdvancedSettings\022>.ai"
  ".inworld.studio.v1alpha.GetCharacterAdva"
  "ncedSettingsRequest\0324.ai.inworld.studio."
  "v1alpha.CharacterAdvancedSettings\"J\202\323\344\223\002"
  "=\022;/v1alpha/{name=workspaces/*/character"
  "s/*/advanced-settings}\332A\004name\022\303\002\n\037Update"
  "CharacterAdvancedSettings\022A.ai.inworld.s"
  "tudio.v1alpha.UpdateCharacterAdvancedSet"
  "tingsRequest\0324.ai.inworld.studio.v1alpha"
  ".CharacterAdvancedSettings\"\246\001\202\323\344\223\002v2W/v1"
  "alpha/{character_advanced_settings.name="
  "workspaces/*/characters/*/advanced-setti"
  "ngs}:\033character_advanced_settings\332A\'char"
  "acter_advanced_settings,update_mask\022\235\001\n\016"
  "ShareCharacter\0220.ai.inworld.studio.v1alp"
  "ha.ShareCharacterRequest\032\026.google.protob"
  "uf.Empty\"A\202\323\344\223\0024\"//v1alpha/{name=workspa"
  "ces/*/characters/*}:share:\001*\332A\004name\022\260\001\n\024"
  "ShareCharacterPortal\0226.ai.inworld.studio"
  ".v1alpha.ShareCharacterPortalRequest\032\026.g"
  "oogle.protobuf.Empty\"H\202\323\344\223\002;\"6/v1alpha/{"
  "name=workspaces/*/characters/*/portal}:s"
  "hare:\001*\332A\004name\022\266\001\n\026UnshareCharacterPorta"
  "l\0228.ai.inworld.studio.v1alpha.UnshareCha"
  "racterPortalRequest\032\026.google.protobuf.Em"
  "pty\"J\202\323\344\223\002=\"8/v1alpha/{name=workspaces/*"
  "/characters/*/portal}:unshare:\001*\332A\004name\022"
  "\312\001\n\024ListSharedCharacters\0226.ai.inworld.st"
  "udio.v1alpha.ListSharedCharactersRequest"
  "\0327.ai.inworld.studio.v1alpha.ListSharedC"
  "haractersResponse\"A\202\323\344\223\0022\0220/v1alpha/{par"
  "ent=workspaces/*}/characters:shared\332A\006pa"
  "rent\022\314\001\n\025GetCharacterShareInfo\0227.ai.inwo"
  "rld.studio.v1alpha.GetCharacterShareInfo"
  "Request\032-.ai.inworld.studio.v1alpha.Char"
  "acterShareInfo\"K\202\323\344\223\002>\022</v1alpha/{name=w"
  "orkspaces/*/characters/*/characterShareI"
  "nfo}\332A\004nameB\231\001\n\031ai.inworld.studio.v1alph"
  "aB\017CharactersProtoP\001ZMgithub.com/inworld"
  "-ai/inworld/serving/grpc-gateway/build/p"
  "roto/studio/v1alpha\252\002\031Ai.Inworld.Studio."
  "V1Alphab\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_deps[11] = {
  &::descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fbehavioral_5fcontexts_2eproto,
  &::descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fscenes_2eproto,
  &::descriptor_table_google_2fapi_2fannotations_2eproto,
  &::descriptor_table_google_2fapi_2fclient_2eproto,
  &::descriptor_table_google_2fapi_2ffield_5fbehavior_2eproto,
  &::descriptor_table_google_2fapi_2fresource_2eproto,
  &::descriptor_table_google_2flongrunning_2foperations_2eproto,
  &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
  &::descriptor_table_google_2fprotobuf_2ffield_5fmask_2eproto,
  &::descriptor_table_options_2eproto,
  &::descriptor_table_voices_2eproto,
};
static ::_pbi::once_flag descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto = {
    false, false, 13975, descriptor_table_protodef_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto,
    "ai/inworld/studio/v1alpha/characters.proto",
    &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_once, descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_deps, 11, 45,
    schemas, file_default_instances, TableStruct_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto::offsets,
    file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto, file_level_enum_descriptors_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto,
    file_level_service_descriptors_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_getter() {
  return &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto(&descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto);
namespace ai {
namespace inworld {
namespace studio {
namespace v1alpha {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Character_CharacterDescription_Pronoun_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto);
  return file_level_enum_descriptors_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto[0];
}
bool Character_CharacterDescription_Pronoun_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr Character_CharacterDescription_Pronoun Character_CharacterDescription::PRONOUN_UNSPECIFIED;
constexpr Character_CharacterDescription_Pronoun Character_CharacterDescription::PRONOUN_FEMALE;
constexpr Character_CharacterDescription_Pronoun Character_CharacterDescription::PRONOUN_MALE;
constexpr Character_CharacterDescription_Pronoun Character_CharacterDescription::PRONOUN_OTHER;
constexpr Character_CharacterDescription_Pronoun Character_CharacterDescription::Pronoun_MIN;
constexpr Character_CharacterDescription_Pronoun Character_CharacterDescription::Pronoun_MAX;
constexpr int Character_CharacterDescription::Pronoun_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Character_CharacterDescription_ExampleDialogStyle_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto);
  return file_level_enum_descriptors_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto[1];
}
bool Character_CharacterDescription_ExampleDialogStyle_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr Character_CharacterDescription_ExampleDialogStyle Character_CharacterDescription::EXAMPLE_DIALOG_STYLE_UNSPECIFIED;
constexpr Character_CharacterDescription_ExampleDialogStyle Character_CharacterDescription::EXAMPLE_DIALOG_STYLE_DEFAULT;
constexpr Character_CharacterDescription_ExampleDialogStyle Character_CharacterDescription::EXAMPLE_DIALOG_STYLE_BUBBLY;
constexpr Character_CharacterDescription_ExampleDialogStyle Character_CharacterDescription::EXAMPLE_DIALOG_STYLE_FORMAL;
constexpr Character_CharacterDescription_ExampleDialogStyle Character_CharacterDescription::EXAMPLE_DIALOG_STYLE_BLUNT;
constexpr Character_CharacterDescription_ExampleDialogStyle Character_CharacterDescription::EXAMPLE_DIALOG_STYLE_INQUISITIVE;
constexpr Character_CharacterDescription_ExampleDialogStyle Character_CharacterDescription::EXAMPLE_DIALOG_STYLE_COMMANDING;
constexpr Character_CharacterDescription_ExampleDialogStyle Character_CharacterDescription::EXAMPLE_DIALOG_STYLE_EMPATHETIC;
constexpr Character_CharacterDescription_ExampleDialogStyle Character_CharacterDescription::EXAMPLE_DIALOG_STYLE_ENTERTAINING;
constexpr Character_CharacterDescription_ExampleDialogStyle Character_CharacterDescription::EXAMPLE_DIALOG_STYLE_HYPOCHONDRIAC;
constexpr Character_CharacterDescription_ExampleDialogStyle Character_CharacterDescription::EXAMPLE_DIALOG_STYLE_LAIDBACK;
constexpr Character_CharacterDescription_ExampleDialogStyle Character_CharacterDescription::EXAMPLE_DIALOG_STYLE_LONG_WINDED;
constexpr Character_CharacterDescription_ExampleDialogStyle Character_CharacterDescription::EXAMPLE_DIALOG_STYLE_MORAL;
constexpr Character_CharacterDescription_ExampleDialogStyle Character_CharacterDescription::EXAMPLE_DIALOG_STYLE_MYSTERIOUS;
constexpr Character_CharacterDescription_ExampleDialogStyle Character_CharacterDescription::EXAMPLE_DIALOG_STYLE_RACONTEUR;
constexpr Character_CharacterDescription_ExampleDialogStyle Character_CharacterDescription::EXAMPLE_DIALOG_STYLE_SARCASTIC;
constexpr Character_CharacterDescription_ExampleDialogStyle Character_CharacterDescription::EXAMPLE_DIALOG_STYLE_TENACIOUS;
constexpr Character_CharacterDescription_ExampleDialogStyle Character_CharacterDescription::EXAMPLE_DIALOG_STYLE_VILLAINOUS;
constexpr Character_CharacterDescription_ExampleDialogStyle Character_CharacterDescription::EXAMPLE_DIALOG_STYLE_CUSTOM;
constexpr Character_CharacterDescription_ExampleDialogStyle Character_CharacterDescription::ExampleDialogStyle_MIN;
constexpr Character_CharacterDescription_ExampleDialogStyle Character_CharacterDescription::ExampleDialogStyle_MAX;
constexpr int Character_CharacterDescription::ExampleDialogStyle_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Character_CharacterDescription_LifeStage_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto);
  return file_level_enum_descriptors_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto[2];
}
bool Character_CharacterDescription_LifeStage_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr Character_CharacterDescription_LifeStage Character_CharacterDescription::LIFE_STAGE_UNSPECIFIED;
constexpr Character_CharacterDescription_LifeStage Character_CharacterDescription::LIFE_STAGE_INFANCY;
constexpr Character_CharacterDescription_LifeStage Character_CharacterDescription::LIFE_STAGE_TODDLERHOOD;
constexpr Character_CharacterDescription_LifeStage Character_CharacterDescription::LIFE_STAGE_PRESCHOOL;
constexpr Character_CharacterDescription_LifeStage Character_CharacterDescription::LIFE_STAGE_EARLY_SCHOOL;
constexpr Character_CharacterDescription_LifeStage Character_CharacterDescription::LIFE_STAGE_ADOLESCENCE;
constexpr Character_CharacterDescription_LifeStage Character_CharacterDescription::LIFE_STAGE_YOUNG_ADULTHOOD;
constexpr Character_CharacterDescription_LifeStage Character_CharacterDescription::LIFE_STAGE_MIDDLE_ADULTHOOD;
constexpr Character_CharacterDescription_LifeStage Character_CharacterDescription::LIFE_STAGE_LATE_ADULTHOOD;
constexpr Character_CharacterDescription_LifeStage Character_CharacterDescription::LIFE_STAGE_CHILDHOOD;
constexpr Character_CharacterDescription_LifeStage Character_CharacterDescription::LifeStage_MIN;
constexpr Character_CharacterDescription_LifeStage Character_CharacterDescription::LifeStage_MAX;
constexpr int Character_CharacterDescription::LifeStage_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Character_Tag_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto);
  return file_level_enum_descriptors_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto[3];
}
bool Character_Tag_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr Character_Tag Character::TAG_UNSPECIFIED;
constexpr Character_Tag Character::TAG_MEMORY;
constexpr Character_Tag Character::TAG_APPEARANCE;
constexpr Character_Tag Character::Tag_MIN;
constexpr Character_Tag Character::Tag_MAX;
constexpr int Character::Tag_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Character_FourthWallContainment_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto);
  return file_level_enum_descriptors_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto[4];
}
bool Character_FourthWallContainment_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr Character_FourthWallContainment Character::FOURTH_WALL_CONTAINMENT_UNSPECIFIED;
constexpr Character_FourthWallContainment Character::FOURTH_WALL_CONTAINMENT_DISABLED;
constexpr Character_FourthWallContainment Character::FOURTH_WALL_CONTAINMENT_EXPERIMENTAL;
constexpr Character_FourthWallContainment Character::FourthWallContainment_MIN;
constexpr Character_FourthWallContainment Character::FourthWallContainment_MAX;
constexpr int Character::FourthWallContainment_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CharacterAdvancedSettings_SafetyTopicName_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto);
  return file_level_enum_descriptors_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto[5];
}
bool CharacterAdvancedSettings_SafetyTopicName_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr CharacterAdvancedSettings_SafetyTopicName CharacterAdvancedSettings::SAFETY_TOPIC_NAME_UNSPECIFIED;
constexpr CharacterAdvancedSettings_SafetyTopicName CharacterAdvancedSettings::SAFETY_TOPIC_NAME_SAFE_TOPIC;
constexpr CharacterAdvancedSettings_SafetyTopicName CharacterAdvancedSettings::SAFETY_TOPIC_NAME_POLITICS;
constexpr CharacterAdvancedSettings_SafetyTopicName CharacterAdvancedSettings::SAFETY_TOPIC_NAME_FINANCES;
constexpr CharacterAdvancedSettings_SafetyTopicName CharacterAdvancedSettings::SAFETY_TOPIC_NAME_DISGUSTING_STUFF;
constexpr CharacterAdvancedSettings_SafetyTopicName CharacterAdvancedSettings::SAFETY_TOPIC_NAME_GENDER_BIAS;
constexpr CharacterAdvancedSettings_SafetyTopicName CharacterAdvancedSettings::SAFETY_TOPIC_NAME_SUBSTANCE_USE;
constexpr CharacterAdvancedSettings_SafetyTopicName CharacterAdvancedSettings::SAFETY_TOPIC_NAME_HEALTH_ADVICE;
constexpr CharacterAdvancedSettings_SafetyTopicName CharacterAdvancedSettings::SAFETY_TOPIC_NAME_RELIGION;
constexpr CharacterAdvancedSettings_SafetyTopicName CharacterAdvancedSettings::SAFETY_TOPIC_NAME_RELATIONSHIPS;
constexpr CharacterAdvancedSettings_SafetyTopicName CharacterAdvancedSettings::SafetyTopicName_MIN;
constexpr CharacterAdvancedSettings_SafetyTopicName CharacterAdvancedSettings::SafetyTopicName_MAX;
constexpr int CharacterAdvancedSettings::SafetyTopicName_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CharacterView_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto);
  return file_level_enum_descriptors_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto[6];
}
bool CharacterView_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CharacterItemView_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto);
  return file_level_enum_descriptors_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto[7];
}
bool CharacterItemView_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CharacterSharePurpose_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto);
  return file_level_enum_descriptors_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto[8];
}
bool CharacterSharePurpose_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SafetyLevel_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto);
  return file_level_enum_descriptors_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto[9];
}
bool SafetyLevel_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class Character_CharacterDescription_CustomDialogStyle::_Internal {
 public:
};

Character_CharacterDescription_CustomDialogStyle::Character_CharacterDescription_CustomDialogStyle(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.Character.CharacterDescription.CustomDialogStyle)
}
Character_CharacterDescription_CustomDialogStyle::Character_CharacterDescription_CustomDialogStyle(const Character_CharacterDescription_CustomDialogStyle& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Character_CharacterDescription_CustomDialogStyle* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.adjectives_){from._impl_.adjectives_}
    , decltype(_impl_.adverbs_){from._impl_.adverbs_}
    , decltype(_impl_.uuid_){}
    , decltype(_impl_.display_name_){}
    , decltype(_impl_.colloquialism_){}
    , decltype(_impl_.is_active_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.uuid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.uuid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_uuid().empty()) {
    _this->_impl_.uuid_.Set(from._internal_uuid(), 
      _this->GetArenaForAllocation());
  }
  _impl_.display_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.display_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_display_name().empty()) {
    _this->_impl_.display_name_.Set(from._internal_display_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.colloquialism_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.colloquialism_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_colloquialism().empty()) {
    _this->_impl_.colloquialism_.Set(from._internal_colloquialism(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.is_active_ = from._impl_.is_active_;
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.Character.CharacterDescription.CustomDialogStyle)
}

inline void Character_CharacterDescription_CustomDialogStyle::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.adjectives_){arena}
    , decltype(_impl_.adverbs_){arena}
    , decltype(_impl_.uuid_){}
    , decltype(_impl_.display_name_){}
    , decltype(_impl_.colloquialism_){}
    , decltype(_impl_.is_active_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.uuid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.uuid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.display_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.display_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.colloquialism_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.colloquialism_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Character_CharacterDescription_CustomDialogStyle::~Character_CharacterDescription_CustomDialogStyle() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.Character.CharacterDescription.CustomDialogStyle)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Character_CharacterDescription_CustomDialogStyle::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.adjectives_.~RepeatedPtrField();
  _impl_.adverbs_.~RepeatedPtrField();
  _impl_.uuid_.Destroy();
  _impl_.display_name_.Destroy();
  _impl_.colloquialism_.Destroy();
}

void Character_CharacterDescription_CustomDialogStyle::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Character_CharacterDescription_CustomDialogStyle::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.Character.CharacterDescription.CustomDialogStyle)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.adjectives_.Clear();
  _impl_.adverbs_.Clear();
  _impl_.uuid_.ClearToEmpty();
  _impl_.display_name_.ClearToEmpty();
  _impl_.colloquialism_.ClearToEmpty();
  _impl_.is_active_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Character_CharacterDescription_CustomDialogStyle::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string uuid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_uuid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.CharacterDescription.CustomDialogStyle.uuid"));
        } else
          goto handle_unusual;
        continue;
      // string display_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_display_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.CharacterDescription.CustomDialogStyle.display_name"));
        } else
          goto handle_unusual;
        continue;
      // bool is_active = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.is_active_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated string adjectives = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_adjectives();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.CharacterDescription.CustomDialogStyle.adjectives"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated string adverbs = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_adverbs();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.CharacterDescription.CustomDialogStyle.adverbs"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string colloquialism = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_colloquialism();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.CharacterDescription.CustomDialogStyle.colloquialism"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Character_CharacterDescription_CustomDialogStyle::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.Character.CharacterDescription.CustomDialogStyle)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string uuid = 1;
  if (!this->_internal_uuid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uuid().data(), static_cast<int>(this->_internal_uuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.CharacterDescription.CustomDialogStyle.uuid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_uuid(), target);
  }

  // string display_name = 2;
  if (!this->_internal_display_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_display_name().data(), static_cast<int>(this->_internal_display_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.CharacterDescription.CustomDialogStyle.display_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_display_name(), target);
  }

  // bool is_active = 3;
  if (this->_internal_is_active() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_is_active(), target);
  }

  // repeated string adjectives = 4;
  for (int i = 0, n = this->_internal_adjectives_size(); i < n; i++) {
    const auto& s = this->_internal_adjectives(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.CharacterDescription.CustomDialogStyle.adjectives");
    target = stream->WriteString(4, s, target);
  }

  // repeated string adverbs = 5;
  for (int i = 0, n = this->_internal_adverbs_size(); i < n; i++) {
    const auto& s = this->_internal_adverbs(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.CharacterDescription.CustomDialogStyle.adverbs");
    target = stream->WriteString(5, s, target);
  }

  // string colloquialism = 6;
  if (!this->_internal_colloquialism().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_colloquialism().data(), static_cast<int>(this->_internal_colloquialism().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.CharacterDescription.CustomDialogStyle.colloquialism");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_colloquialism(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.Character.CharacterDescription.CustomDialogStyle)
  return target;
}

size_t Character_CharacterDescription_CustomDialogStyle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.Character.CharacterDescription.CustomDialogStyle)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string adjectives = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.adjectives_.size());
  for (int i = 0, n = _impl_.adjectives_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.adjectives_.Get(i));
  }

  // repeated string adverbs = 5;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.adverbs_.size());
  for (int i = 0, n = _impl_.adverbs_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.adverbs_.Get(i));
  }

  // string uuid = 1;
  if (!this->_internal_uuid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uuid());
  }

  // string display_name = 2;
  if (!this->_internal_display_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_display_name());
  }

  // string colloquialism = 6;
  if (!this->_internal_colloquialism().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_colloquialism());
  }

  // bool is_active = 3;
  if (this->_internal_is_active() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Character_CharacterDescription_CustomDialogStyle::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Character_CharacterDescription_CustomDialogStyle::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Character_CharacterDescription_CustomDialogStyle::GetClassData() const { return &_class_data_; }


void Character_CharacterDescription_CustomDialogStyle::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Character_CharacterDescription_CustomDialogStyle*>(&to_msg);
  auto& from = static_cast<const Character_CharacterDescription_CustomDialogStyle&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.Character.CharacterDescription.CustomDialogStyle)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.adjectives_.MergeFrom(from._impl_.adjectives_);
  _this->_impl_.adverbs_.MergeFrom(from._impl_.adverbs_);
  if (!from._internal_uuid().empty()) {
    _this->_internal_set_uuid(from._internal_uuid());
  }
  if (!from._internal_display_name().empty()) {
    _this->_internal_set_display_name(from._internal_display_name());
  }
  if (!from._internal_colloquialism().empty()) {
    _this->_internal_set_colloquialism(from._internal_colloquialism());
  }
  if (from._internal_is_active() != 0) {
    _this->_internal_set_is_active(from._internal_is_active());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Character_CharacterDescription_CustomDialogStyle::CopyFrom(const Character_CharacterDescription_CustomDialogStyle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.Character.CharacterDescription.CustomDialogStyle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Character_CharacterDescription_CustomDialogStyle::IsInitialized() const {
  return true;
}

void Character_CharacterDescription_CustomDialogStyle::InternalSwap(Character_CharacterDescription_CustomDialogStyle* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.adjectives_.InternalSwap(&other->_impl_.adjectives_);
  _impl_.adverbs_.InternalSwap(&other->_impl_.adverbs_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.uuid_, lhs_arena,
      &other->_impl_.uuid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.display_name_, lhs_arena,
      &other->_impl_.display_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.colloquialism_, lhs_arena,
      &other->_impl_.colloquialism_, rhs_arena
  );
  swap(_impl_.is_active_, other->_impl_.is_active_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Character_CharacterDescription_CustomDialogStyle::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto[0]);
}

// ===================================================================

class Character_CharacterDescription::_Internal {
 public:
};

Character_CharacterDescription::Character_CharacterDescription(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.Character.CharacterDescription)
}
Character_CharacterDescription::Character_CharacterDescription(const Character_CharacterDescription& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Character_CharacterDescription* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.nicknames_){from._impl_.nicknames_}
    , decltype(_impl_.personality_adjectives_){from._impl_.personality_adjectives_}
    , decltype(_impl_.hobby_or_interests_){from._impl_.hobby_or_interests_}
    , decltype(_impl_.custom_dialog_styles_){from._impl_.custom_dialog_styles_}
    , decltype(_impl_.given_name_){}
    , decltype(_impl_.description_){}
    , decltype(_impl_.motivation_){}
    , decltype(_impl_.wikipedia_uri_){}
    , decltype(_impl_.player_role_){}
    , decltype(_impl_.default_context_){}
    , decltype(_impl_.example_dialog_){}
    , decltype(_impl_.character_role_){}
    , decltype(_impl_.flaws_){}
    , decltype(_impl_.pronoun_){}
    , decltype(_impl_.example_dialog_style_){}
    , decltype(_impl_.life_stage_){}
    , decltype(_impl_.narrative_actions_enabled_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.given_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.given_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_given_name().empty()) {
    _this->_impl_.given_name_.Set(from._internal_given_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    _this->_impl_.description_.Set(from._internal_description(), 
      _this->GetArenaForAllocation());
  }
  _impl_.motivation_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.motivation_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_motivation().empty()) {
    _this->_impl_.motivation_.Set(from._internal_motivation(), 
      _this->GetArenaForAllocation());
  }
  _impl_.wikipedia_uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.wikipedia_uri_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_wikipedia_uri().empty()) {
    _this->_impl_.wikipedia_uri_.Set(from._internal_wikipedia_uri(), 
      _this->GetArenaForAllocation());
  }
  _impl_.player_role_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.player_role_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_player_role().empty()) {
    _this->_impl_.player_role_.Set(from._internal_player_role(), 
      _this->GetArenaForAllocation());
  }
  _impl_.default_context_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.default_context_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_default_context().empty()) {
    _this->_impl_.default_context_.Set(from._internal_default_context(), 
      _this->GetArenaForAllocation());
  }
  _impl_.example_dialog_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.example_dialog_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_example_dialog().empty()) {
    _this->_impl_.example_dialog_.Set(from._internal_example_dialog(), 
      _this->GetArenaForAllocation());
  }
  _impl_.character_role_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.character_role_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_character_role().empty()) {
    _this->_impl_.character_role_.Set(from._internal_character_role(), 
      _this->GetArenaForAllocation());
  }
  _impl_.flaws_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.flaws_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_flaws().empty()) {
    _this->_impl_.flaws_.Set(from._internal_flaws(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.pronoun_, &from._impl_.pronoun_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.narrative_actions_enabled_) -
    reinterpret_cast<char*>(&_impl_.pronoun_)) + sizeof(_impl_.narrative_actions_enabled_));
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.Character.CharacterDescription)
}

inline void Character_CharacterDescription::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.nicknames_){arena}
    , decltype(_impl_.personality_adjectives_){arena}
    , decltype(_impl_.hobby_or_interests_){arena}
    , decltype(_impl_.custom_dialog_styles_){arena}
    , decltype(_impl_.given_name_){}
    , decltype(_impl_.description_){}
    , decltype(_impl_.motivation_){}
    , decltype(_impl_.wikipedia_uri_){}
    , decltype(_impl_.player_role_){}
    , decltype(_impl_.default_context_){}
    , decltype(_impl_.example_dialog_){}
    , decltype(_impl_.character_role_){}
    , decltype(_impl_.flaws_){}
    , decltype(_impl_.pronoun_){0}
    , decltype(_impl_.example_dialog_style_){0}
    , decltype(_impl_.life_stage_){0}
    , decltype(_impl_.narrative_actions_enabled_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.given_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.given_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.motivation_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.motivation_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.wikipedia_uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.wikipedia_uri_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.player_role_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.player_role_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.default_context_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.default_context_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.example_dialog_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.example_dialog_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.character_role_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.character_role_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.flaws_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.flaws_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Character_CharacterDescription::~Character_CharacterDescription() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.Character.CharacterDescription)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Character_CharacterDescription::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.nicknames_.~RepeatedPtrField();
  _impl_.personality_adjectives_.~RepeatedPtrField();
  _impl_.hobby_or_interests_.~RepeatedPtrField();
  _impl_.custom_dialog_styles_.~RepeatedPtrField();
  _impl_.given_name_.Destroy();
  _impl_.description_.Destroy();
  _impl_.motivation_.Destroy();
  _impl_.wikipedia_uri_.Destroy();
  _impl_.player_role_.Destroy();
  _impl_.default_context_.Destroy();
  _impl_.example_dialog_.Destroy();
  _impl_.character_role_.Destroy();
  _impl_.flaws_.Destroy();
}

void Character_CharacterDescription::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Character_CharacterDescription::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.Character.CharacterDescription)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.nicknames_.Clear();
  _impl_.personality_adjectives_.Clear();
  _impl_.hobby_or_interests_.Clear();
  _impl_.custom_dialog_styles_.Clear();
  _impl_.given_name_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  _impl_.motivation_.ClearToEmpty();
  _impl_.wikipedia_uri_.ClearToEmpty();
  _impl_.player_role_.ClearToEmpty();
  _impl_.default_context_.ClearToEmpty();
  _impl_.example_dialog_.ClearToEmpty();
  _impl_.character_role_.ClearToEmpty();
  _impl_.flaws_.ClearToEmpty();
  ::memset(&_impl_.pronoun_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.narrative_actions_enabled_) -
      reinterpret_cast<char*>(&_impl_.pronoun_)) + sizeof(_impl_.narrative_actions_enabled_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Character_CharacterDescription::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string given_name = 1 [(.ai.inworld.options.examples) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_given_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.CharacterDescription.given_name"));
        } else
          goto handle_unusual;
        continue;
      // string description = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_description();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.CharacterDescription.description"));
        } else
          goto handle_unusual;
        continue;
      // .ai.inworld.studio.v1alpha.Character.CharacterDescription.Pronoun pronoun = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_pronoun(static_cast<::ai::inworld::studio::v1alpha::Character_CharacterDescription_Pronoun>(val));
        } else
          goto handle_unusual;
        continue;
      // repeated string nicknames = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_nicknames();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.CharacterDescription.nicknames"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string motivation = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_motivation();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.CharacterDescription.motivation"));
        } else
          goto handle_unusual;
        continue;
      // string wikipedia_uri = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_wikipedia_uri();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.CharacterDescription.wikipedia_uri"));
        } else
          goto handle_unusual;
        continue;
      // string player_role = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_player_role();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.CharacterDescription.player_role"));
        } else
          goto handle_unusual;
        continue;
      // string default_context = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          auto str = _internal_mutable_default_context();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.CharacterDescription.default_context"));
        } else
          goto handle_unusual;
        continue;
      // string example_dialog = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          auto str = _internal_mutable_example_dialog();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.CharacterDescription.example_dialog"));
        } else
          goto handle_unusual;
        continue;
      // .ai.inworld.studio.v1alpha.Character.CharacterDescription.ExampleDialogStyle example_dialog_style = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_example_dialog_style(static_cast<::ai::inworld::studio::v1alpha::Character_CharacterDescription_ExampleDialogStyle>(val));
        } else
          goto handle_unusual;
        continue;
      // repeated string personality_adjectives = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_personality_adjectives();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.CharacterDescription.personality_adjectives"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<90>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .ai.inworld.studio.v1alpha.Character.CharacterDescription.LifeStage life_stage = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_life_stage(static_cast<::ai::inworld::studio::v1alpha::Character_CharacterDescription_LifeStage>(val));
        } else
          goto handle_unusual;
        continue;
      // repeated string hobby_or_interests = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_hobby_or_interests();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.CharacterDescription.hobby_or_interests"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<106>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string character_role = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 114)) {
          auto str = _internal_mutable_character_role();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.CharacterDescription.character_role"));
        } else
          goto handle_unusual;
        continue;
      // bool narrative_actions_enabled = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 120)) {
          _impl_.narrative_actions_enabled_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .ai.inworld.studio.v1alpha.Character.CharacterDescription.CustomDialogStyle custom_dialog_styles = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 130)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_custom_dialog_styles(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<130>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string flaws = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 138)) {
          auto str = _internal_mutable_flaws();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.CharacterDescription.flaws"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Character_CharacterDescription::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.Character.CharacterDescription)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string given_name = 1 [(.ai.inworld.options.examples) = {
  if (!this->_internal_given_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_given_name().data(), static_cast<int>(this->_internal_given_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.CharacterDescription.given_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_given_name(), target);
  }

  // string description = 2;
  if (!this->_internal_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.CharacterDescription.description");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_description(), target);
  }

  // .ai.inworld.studio.v1alpha.Character.CharacterDescription.Pronoun pronoun = 3;
  if (this->_internal_pronoun() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      3, this->_internal_pronoun(), target);
  }

  // repeated string nicknames = 4;
  for (int i = 0, n = this->_internal_nicknames_size(); i < n; i++) {
    const auto& s = this->_internal_nicknames(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.CharacterDescription.nicknames");
    target = stream->WriteString(4, s, target);
  }

  // string motivation = 5;
  if (!this->_internal_motivation().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_motivation().data(), static_cast<int>(this->_internal_motivation().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.CharacterDescription.motivation");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_motivation(), target);
  }

  // string wikipedia_uri = 6;
  if (!this->_internal_wikipedia_uri().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_wikipedia_uri().data(), static_cast<int>(this->_internal_wikipedia_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.CharacterDescription.wikipedia_uri");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_wikipedia_uri(), target);
  }

  // string player_role = 7;
  if (!this->_internal_player_role().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_player_role().data(), static_cast<int>(this->_internal_player_role().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.CharacterDescription.player_role");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_player_role(), target);
  }

  // string default_context = 8;
  if (!this->_internal_default_context().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_default_context().data(), static_cast<int>(this->_internal_default_context().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.CharacterDescription.default_context");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_default_context(), target);
  }

  // string example_dialog = 9;
  if (!this->_internal_example_dialog().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_example_dialog().data(), static_cast<int>(this->_internal_example_dialog().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.CharacterDescription.example_dialog");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_example_dialog(), target);
  }

  // .ai.inworld.studio.v1alpha.Character.CharacterDescription.ExampleDialogStyle example_dialog_style = 10;
  if (this->_internal_example_dialog_style() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      10, this->_internal_example_dialog_style(), target);
  }

  // repeated string personality_adjectives = 11;
  for (int i = 0, n = this->_internal_personality_adjectives_size(); i < n; i++) {
    const auto& s = this->_internal_personality_adjectives(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.CharacterDescription.personality_adjectives");
    target = stream->WriteString(11, s, target);
  }

  // .ai.inworld.studio.v1alpha.Character.CharacterDescription.LifeStage life_stage = 12;
  if (this->_internal_life_stage() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      12, this->_internal_life_stage(), target);
  }

  // repeated string hobby_or_interests = 13;
  for (int i = 0, n = this->_internal_hobby_or_interests_size(); i < n; i++) {
    const auto& s = this->_internal_hobby_or_interests(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.CharacterDescription.hobby_or_interests");
    target = stream->WriteString(13, s, target);
  }

  // string character_role = 14;
  if (!this->_internal_character_role().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_character_role().data(), static_cast<int>(this->_internal_character_role().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.CharacterDescription.character_role");
    target = stream->WriteStringMaybeAliased(
        14, this->_internal_character_role(), target);
  }

  // bool narrative_actions_enabled = 15;
  if (this->_internal_narrative_actions_enabled() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(15, this->_internal_narrative_actions_enabled(), target);
  }

  // repeated .ai.inworld.studio.v1alpha.Character.CharacterDescription.CustomDialogStyle custom_dialog_styles = 16;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_custom_dialog_styles_size()); i < n; i++) {
    const auto& repfield = this->_internal_custom_dialog_styles(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(16, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string flaws = 17;
  if (!this->_internal_flaws().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_flaws().data(), static_cast<int>(this->_internal_flaws().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.CharacterDescription.flaws");
    target = stream->WriteStringMaybeAliased(
        17, this->_internal_flaws(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.Character.CharacterDescription)
  return target;
}

size_t Character_CharacterDescription::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.Character.CharacterDescription)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string nicknames = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.nicknames_.size());
  for (int i = 0, n = _impl_.nicknames_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.nicknames_.Get(i));
  }

  // repeated string personality_adjectives = 11;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.personality_adjectives_.size());
  for (int i = 0, n = _impl_.personality_adjectives_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.personality_adjectives_.Get(i));
  }

  // repeated string hobby_or_interests = 13;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.hobby_or_interests_.size());
  for (int i = 0, n = _impl_.hobby_or_interests_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.hobby_or_interests_.Get(i));
  }

  // repeated .ai.inworld.studio.v1alpha.Character.CharacterDescription.CustomDialogStyle custom_dialog_styles = 16;
  total_size += 2UL * this->_internal_custom_dialog_styles_size();
  for (const auto& msg : this->_impl_.custom_dialog_styles_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string given_name = 1 [(.ai.inworld.options.examples) = {
  if (!this->_internal_given_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_given_name());
  }

  // string description = 2;
  if (!this->_internal_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // string motivation = 5;
  if (!this->_internal_motivation().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_motivation());
  }

  // string wikipedia_uri = 6;
  if (!this->_internal_wikipedia_uri().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_wikipedia_uri());
  }

  // string player_role = 7;
  if (!this->_internal_player_role().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_player_role());
  }

  // string default_context = 8;
  if (!this->_internal_default_context().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_default_context());
  }

  // string example_dialog = 9;
  if (!this->_internal_example_dialog().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_example_dialog());
  }

  // string character_role = 14;
  if (!this->_internal_character_role().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_character_role());
  }

  // string flaws = 17;
  if (!this->_internal_flaws().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_flaws());
  }

  // .ai.inworld.studio.v1alpha.Character.CharacterDescription.Pronoun pronoun = 3;
  if (this->_internal_pronoun() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_pronoun());
  }

  // .ai.inworld.studio.v1alpha.Character.CharacterDescription.ExampleDialogStyle example_dialog_style = 10;
  if (this->_internal_example_dialog_style() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_example_dialog_style());
  }

  // .ai.inworld.studio.v1alpha.Character.CharacterDescription.LifeStage life_stage = 12;
  if (this->_internal_life_stage() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_life_stage());
  }

  // bool narrative_actions_enabled = 15;
  if (this->_internal_narrative_actions_enabled() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Character_CharacterDescription::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Character_CharacterDescription::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Character_CharacterDescription::GetClassData() const { return &_class_data_; }


void Character_CharacterDescription::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Character_CharacterDescription*>(&to_msg);
  auto& from = static_cast<const Character_CharacterDescription&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.Character.CharacterDescription)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.nicknames_.MergeFrom(from._impl_.nicknames_);
  _this->_impl_.personality_adjectives_.MergeFrom(from._impl_.personality_adjectives_);
  _this->_impl_.hobby_or_interests_.MergeFrom(from._impl_.hobby_or_interests_);
  _this->_impl_.custom_dialog_styles_.MergeFrom(from._impl_.custom_dialog_styles_);
  if (!from._internal_given_name().empty()) {
    _this->_internal_set_given_name(from._internal_given_name());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if (!from._internal_motivation().empty()) {
    _this->_internal_set_motivation(from._internal_motivation());
  }
  if (!from._internal_wikipedia_uri().empty()) {
    _this->_internal_set_wikipedia_uri(from._internal_wikipedia_uri());
  }
  if (!from._internal_player_role().empty()) {
    _this->_internal_set_player_role(from._internal_player_role());
  }
  if (!from._internal_default_context().empty()) {
    _this->_internal_set_default_context(from._internal_default_context());
  }
  if (!from._internal_example_dialog().empty()) {
    _this->_internal_set_example_dialog(from._internal_example_dialog());
  }
  if (!from._internal_character_role().empty()) {
    _this->_internal_set_character_role(from._internal_character_role());
  }
  if (!from._internal_flaws().empty()) {
    _this->_internal_set_flaws(from._internal_flaws());
  }
  if (from._internal_pronoun() != 0) {
    _this->_internal_set_pronoun(from._internal_pronoun());
  }
  if (from._internal_example_dialog_style() != 0) {
    _this->_internal_set_example_dialog_style(from._internal_example_dialog_style());
  }
  if (from._internal_life_stage() != 0) {
    _this->_internal_set_life_stage(from._internal_life_stage());
  }
  if (from._internal_narrative_actions_enabled() != 0) {
    _this->_internal_set_narrative_actions_enabled(from._internal_narrative_actions_enabled());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Character_CharacterDescription::CopyFrom(const Character_CharacterDescription& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.Character.CharacterDescription)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Character_CharacterDescription::IsInitialized() const {
  return true;
}

void Character_CharacterDescription::InternalSwap(Character_CharacterDescription* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.nicknames_.InternalSwap(&other->_impl_.nicknames_);
  _impl_.personality_adjectives_.InternalSwap(&other->_impl_.personality_adjectives_);
  _impl_.hobby_or_interests_.InternalSwap(&other->_impl_.hobby_or_interests_);
  _impl_.custom_dialog_styles_.InternalSwap(&other->_impl_.custom_dialog_styles_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.given_name_, lhs_arena,
      &other->_impl_.given_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.description_, lhs_arena,
      &other->_impl_.description_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.motivation_, lhs_arena,
      &other->_impl_.motivation_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.wikipedia_uri_, lhs_arena,
      &other->_impl_.wikipedia_uri_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.player_role_, lhs_arena,
      &other->_impl_.player_role_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.default_context_, lhs_arena,
      &other->_impl_.default_context_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.example_dialog_, lhs_arena,
      &other->_impl_.example_dialog_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.character_role_, lhs_arena,
      &other->_impl_.character_role_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.flaws_, lhs_arena,
      &other->_impl_.flaws_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Character_CharacterDescription, _impl_.narrative_actions_enabled_)
      + sizeof(Character_CharacterDescription::_impl_.narrative_actions_enabled_)
      - PROTOBUF_FIELD_OFFSET(Character_CharacterDescription, _impl_.pronoun_)>(
          reinterpret_cast<char*>(&_impl_.pronoun_),
          reinterpret_cast<char*>(&other->_impl_.pronoun_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Character_CharacterDescription::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto[1]);
}

// ===================================================================

class Character_BrainSettings_ConversationConfig_FillerSpec::_Internal {
 public:
};

Character_BrainSettings_ConversationConfig_FillerSpec::Character_BrainSettings_ConversationConfig_FillerSpec(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig.FillerSpec)
}
Character_BrainSettings_ConversationConfig_FillerSpec::Character_BrainSettings_ConversationConfig_FillerSpec(const Character_BrainSettings_ConversationConfig_FillerSpec& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Character_BrainSettings_ConversationConfig_FillerSpec* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.fillers_disabled_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.fillers_disabled_ = from._impl_.fillers_disabled_;
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig.FillerSpec)
}

inline void Character_BrainSettings_ConversationConfig_FillerSpec::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.fillers_disabled_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Character_BrainSettings_ConversationConfig_FillerSpec::~Character_BrainSettings_ConversationConfig_FillerSpec() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig.FillerSpec)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Character_BrainSettings_ConversationConfig_FillerSpec::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Character_BrainSettings_ConversationConfig_FillerSpec::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Character_BrainSettings_ConversationConfig_FillerSpec::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig.FillerSpec)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.fillers_disabled_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Character_BrainSettings_ConversationConfig_FillerSpec::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool fillers_disabled = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.fillers_disabled_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Character_BrainSettings_ConversationConfig_FillerSpec::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig.FillerSpec)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool fillers_disabled = 1;
  if (this->_internal_fillers_disabled() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_fillers_disabled(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig.FillerSpec)
  return target;
}

size_t Character_BrainSettings_ConversationConfig_FillerSpec::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig.FillerSpec)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool fillers_disabled = 1;
  if (this->_internal_fillers_disabled() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Character_BrainSettings_ConversationConfig_FillerSpec::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Character_BrainSettings_ConversationConfig_FillerSpec::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Character_BrainSettings_ConversationConfig_FillerSpec::GetClassData() const { return &_class_data_; }


void Character_BrainSettings_ConversationConfig_FillerSpec::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Character_BrainSettings_ConversationConfig_FillerSpec*>(&to_msg);
  auto& from = static_cast<const Character_BrainSettings_ConversationConfig_FillerSpec&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig.FillerSpec)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_fillers_disabled() != 0) {
    _this->_internal_set_fillers_disabled(from._internal_fillers_disabled());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Character_BrainSettings_ConversationConfig_FillerSpec::CopyFrom(const Character_BrainSettings_ConversationConfig_FillerSpec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig.FillerSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Character_BrainSettings_ConversationConfig_FillerSpec::IsInitialized() const {
  return true;
}

void Character_BrainSettings_ConversationConfig_FillerSpec::InternalSwap(Character_BrainSettings_ConversationConfig_FillerSpec* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.fillers_disabled_, other->_impl_.fillers_disabled_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Character_BrainSettings_ConversationConfig_FillerSpec::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto[2]);
}

// ===================================================================

class Character_BrainSettings_ConversationConfig::_Internal {
 public:
  static const ::ai::inworld::studio::v1alpha::Character_BrainSettings_ConversationConfig_FillerSpec& filler_spec(const Character_BrainSettings_ConversationConfig* msg);
};

const ::ai::inworld::studio::v1alpha::Character_BrainSettings_ConversationConfig_FillerSpec&
Character_BrainSettings_ConversationConfig::_Internal::filler_spec(const Character_BrainSettings_ConversationConfig* msg) {
  return *msg->_impl_.filler_spec_;
}
Character_BrainSettings_ConversationConfig::Character_BrainSettings_ConversationConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig)
}
Character_BrainSettings_ConversationConfig::Character_BrainSettings_ConversationConfig(const Character_BrainSettings_ConversationConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Character_BrainSettings_ConversationConfig* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.filler_spec_){nullptr}
    , decltype(_impl_.emotions_disabled_){}
    , decltype(_impl_.behavioral_contexts_disabled_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_filler_spec()) {
    _this->_impl_.filler_spec_ = new ::ai::inworld::studio::v1alpha::Character_BrainSettings_ConversationConfig_FillerSpec(*from._impl_.filler_spec_);
  }
  ::memcpy(&_impl_.emotions_disabled_, &from._impl_.emotions_disabled_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.behavioral_contexts_disabled_) -
    reinterpret_cast<char*>(&_impl_.emotions_disabled_)) + sizeof(_impl_.behavioral_contexts_disabled_));
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig)
}

inline void Character_BrainSettings_ConversationConfig::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.filler_spec_){nullptr}
    , decltype(_impl_.emotions_disabled_){false}
    , decltype(_impl_.behavioral_contexts_disabled_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Character_BrainSettings_ConversationConfig::~Character_BrainSettings_ConversationConfig() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Character_BrainSettings_ConversationConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.filler_spec_;
}

void Character_BrainSettings_ConversationConfig::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Character_BrainSettings_ConversationConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.filler_spec_ != nullptr) {
    delete _impl_.filler_spec_;
  }
  _impl_.filler_spec_ = nullptr;
  ::memset(&_impl_.emotions_disabled_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.behavioral_contexts_disabled_) -
      reinterpret_cast<char*>(&_impl_.emotions_disabled_)) + sizeof(_impl_.behavioral_contexts_disabled_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Character_BrainSettings_ConversationConfig::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig.FillerSpec filler_spec = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_filler_spec(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool emotions_disabled = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.emotions_disabled_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool behavioral_contexts_disabled = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.behavioral_contexts_disabled_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Character_BrainSettings_ConversationConfig::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig.FillerSpec filler_spec = 2;
  if (this->_internal_has_filler_spec()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::filler_spec(this),
        _Internal::filler_spec(this).GetCachedSize(), target, stream);
  }

  // bool emotions_disabled = 4;
  if (this->_internal_emotions_disabled() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_emotions_disabled(), target);
  }

  // bool behavioral_contexts_disabled = 5;
  if (this->_internal_behavioral_contexts_disabled() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(5, this->_internal_behavioral_contexts_disabled(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig)
  return target;
}

size_t Character_BrainSettings_ConversationConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig.FillerSpec filler_spec = 2;
  if (this->_internal_has_filler_spec()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.filler_spec_);
  }

  // bool emotions_disabled = 4;
  if (this->_internal_emotions_disabled() != 0) {
    total_size += 1 + 1;
  }

  // bool behavioral_contexts_disabled = 5;
  if (this->_internal_behavioral_contexts_disabled() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Character_BrainSettings_ConversationConfig::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Character_BrainSettings_ConversationConfig::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Character_BrainSettings_ConversationConfig::GetClassData() const { return &_class_data_; }


void Character_BrainSettings_ConversationConfig::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Character_BrainSettings_ConversationConfig*>(&to_msg);
  auto& from = static_cast<const Character_BrainSettings_ConversationConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_filler_spec()) {
    _this->_internal_mutable_filler_spec()->::ai::inworld::studio::v1alpha::Character_BrainSettings_ConversationConfig_FillerSpec::MergeFrom(
        from._internal_filler_spec());
  }
  if (from._internal_emotions_disabled() != 0) {
    _this->_internal_set_emotions_disabled(from._internal_emotions_disabled());
  }
  if (from._internal_behavioral_contexts_disabled() != 0) {
    _this->_internal_set_behavioral_contexts_disabled(from._internal_behavioral_contexts_disabled());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Character_BrainSettings_ConversationConfig::CopyFrom(const Character_BrainSettings_ConversationConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Character_BrainSettings_ConversationConfig::IsInitialized() const {
  return true;
}

void Character_BrainSettings_ConversationConfig::InternalSwap(Character_BrainSettings_ConversationConfig* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Character_BrainSettings_ConversationConfig, _impl_.behavioral_contexts_disabled_)
      + sizeof(Character_BrainSettings_ConversationConfig::_impl_.behavioral_contexts_disabled_)
      - PROTOBUF_FIELD_OFFSET(Character_BrainSettings_ConversationConfig, _impl_.filler_spec_)>(
          reinterpret_cast<char*>(&_impl_.filler_spec_),
          reinterpret_cast<char*>(&other->_impl_.filler_spec_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Character_BrainSettings_ConversationConfig::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto[3]);
}

// ===================================================================

class Character_BrainSettings::_Internal {
 public:
  static const ::ai::inworld::studio::v1alpha::Character_BrainSettings_ConversationConfig& conversation_config(const Character_BrainSettings* msg);
};

const ::ai::inworld::studio::v1alpha::Character_BrainSettings_ConversationConfig&
Character_BrainSettings::_Internal::conversation_config(const Character_BrainSettings* msg) {
  return *msg->_impl_.conversation_config_;
}
Character_BrainSettings::Character_BrainSettings(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.Character.BrainSettings)
}
Character_BrainSettings::Character_BrainSettings(const Character_BrainSettings& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Character_BrainSettings* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.conversation_config_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_conversation_config()) {
    _this->_impl_.conversation_config_ = new ::ai::inworld::studio::v1alpha::Character_BrainSettings_ConversationConfig(*from._impl_.conversation_config_);
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.Character.BrainSettings)
}

inline void Character_BrainSettings::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.conversation_config_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Character_BrainSettings::~Character_BrainSettings() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.Character.BrainSettings)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Character_BrainSettings::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.conversation_config_;
}

void Character_BrainSettings::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Character_BrainSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.Character.BrainSettings)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.conversation_config_ != nullptr) {
    delete _impl_.conversation_config_;
  }
  _impl_.conversation_config_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Character_BrainSettings::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig conversation_config = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_conversation_config(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Character_BrainSettings::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.Character.BrainSettings)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig conversation_config = 1;
  if (this->_internal_has_conversation_config()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::conversation_config(this),
        _Internal::conversation_config(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.Character.BrainSettings)
  return target;
}

size_t Character_BrainSettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.Character.BrainSettings)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ai.inworld.studio.v1alpha.Character.BrainSettings.ConversationConfig conversation_config = 1;
  if (this->_internal_has_conversation_config()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.conversation_config_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Character_BrainSettings::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Character_BrainSettings::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Character_BrainSettings::GetClassData() const { return &_class_data_; }


void Character_BrainSettings::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Character_BrainSettings*>(&to_msg);
  auto& from = static_cast<const Character_BrainSettings&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.Character.BrainSettings)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_conversation_config()) {
    _this->_internal_mutable_conversation_config()->::ai::inworld::studio::v1alpha::Character_BrainSettings_ConversationConfig::MergeFrom(
        from._internal_conversation_config());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Character_BrainSettings::CopyFrom(const Character_BrainSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.Character.BrainSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Character_BrainSettings::IsInitialized() const {
  return true;
}

void Character_BrainSettings::InternalSwap(Character_BrainSettings* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.conversation_config_, other->_impl_.conversation_config_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Character_BrainSettings::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto[4]);
}

// ===================================================================

class Character_BrainTrigger::_Internal {
 public:
};

Character_BrainTrigger::Character_BrainTrigger(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.Character.BrainTrigger)
}
Character_BrainTrigger::Character_BrainTrigger(const Character_BrainTrigger& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Character_BrainTrigger* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.trigger_){}
    , decltype(_impl_.situation_description_){}
    , decltype(_impl_.start_conversation_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.trigger_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.trigger_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_trigger().empty()) {
    _this->_impl_.trigger_.Set(from._internal_trigger(), 
      _this->GetArenaForAllocation());
  }
  _impl_.situation_description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.situation_description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_situation_description().empty()) {
    _this->_impl_.situation_description_.Set(from._internal_situation_description(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.start_conversation_ = from._impl_.start_conversation_;
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.Character.BrainTrigger)
}

inline void Character_BrainTrigger::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.trigger_){}
    , decltype(_impl_.situation_description_){}
    , decltype(_impl_.start_conversation_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.trigger_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.trigger_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.situation_description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.situation_description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Character_BrainTrigger::~Character_BrainTrigger() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.Character.BrainTrigger)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Character_BrainTrigger::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.trigger_.Destroy();
  _impl_.situation_description_.Destroy();
}

void Character_BrainTrigger::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Character_BrainTrigger::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.Character.BrainTrigger)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.trigger_.ClearToEmpty();
  _impl_.situation_description_.ClearToEmpty();
  _impl_.start_conversation_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Character_BrainTrigger::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string trigger = 1 [(.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_trigger();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.BrainTrigger.trigger"));
        } else
          goto handle_unusual;
        continue;
      // string situation_description = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_situation_description();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.BrainTrigger.situation_description"));
        } else
          goto handle_unusual;
        continue;
      // bool start_conversation = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.start_conversation_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Character_BrainTrigger::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.Character.BrainTrigger)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string trigger = 1 [(.google.api.resource_reference) = {
  if (!this->_internal_trigger().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_trigger().data(), static_cast<int>(this->_internal_trigger().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.BrainTrigger.trigger");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_trigger(), target);
  }

  // string situation_description = 2;
  if (!this->_internal_situation_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_situation_description().data(), static_cast<int>(this->_internal_situation_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.BrainTrigger.situation_description");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_situation_description(), target);
  }

  // bool start_conversation = 3;
  if (this->_internal_start_conversation() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_start_conversation(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.Character.BrainTrigger)
  return target;
}

size_t Character_BrainTrigger::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.Character.BrainTrigger)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string trigger = 1 [(.google.api.resource_reference) = {
  if (!this->_internal_trigger().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_trigger());
  }

  // string situation_description = 2;
  if (!this->_internal_situation_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_situation_description());
  }

  // bool start_conversation = 3;
  if (this->_internal_start_conversation() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Character_BrainTrigger::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Character_BrainTrigger::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Character_BrainTrigger::GetClassData() const { return &_class_data_; }


void Character_BrainTrigger::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Character_BrainTrigger*>(&to_msg);
  auto& from = static_cast<const Character_BrainTrigger&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.Character.BrainTrigger)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_trigger().empty()) {
    _this->_internal_set_trigger(from._internal_trigger());
  }
  if (!from._internal_situation_description().empty()) {
    _this->_internal_set_situation_description(from._internal_situation_description());
  }
  if (from._internal_start_conversation() != 0) {
    _this->_internal_set_start_conversation(from._internal_start_conversation());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Character_BrainTrigger::CopyFrom(const Character_BrainTrigger& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.Character.BrainTrigger)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Character_BrainTrigger::IsInitialized() const {
  return true;
}

void Character_BrainTrigger::InternalSwap(Character_BrainTrigger* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.trigger_, lhs_arena,
      &other->_impl_.trigger_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.situation_description_, lhs_arena,
      &other->_impl_.situation_description_, rhs_arena
  );
  swap(_impl_.start_conversation_, other->_impl_.start_conversation_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Character_BrainTrigger::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto[5]);
}

// ===================================================================

class Character_CharacterAssets::_Internal {
 public:
  static const ::ai::inworld::voices::Voice& voice(const Character_CharacterAssets* msg);
};

const ::ai::inworld::voices::Voice&
Character_CharacterAssets::_Internal::voice(const Character_CharacterAssets* msg) {
  return *msg->_impl_.voice_;
}
void Character_CharacterAssets::clear_voice() {
  if (GetArenaForAllocation() == nullptr && _impl_.voice_ != nullptr) {
    delete _impl_.voice_;
  }
  _impl_.voice_ = nullptr;
}
Character_CharacterAssets::Character_CharacterAssets(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.Character.CharacterAssets)
}
Character_CharacterAssets::Character_CharacterAssets(const Character_CharacterAssets& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Character_CharacterAssets* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.rpm_model_uri_){}
    , decltype(_impl_.rpm_image_uri_){}
    , decltype(_impl_.rpm_image_uri_portrait_){}
    , decltype(_impl_.rpm_image_uri_posture_){}
    , decltype(_impl_.avatar_img_){}
    , decltype(_impl_.avatar_img_original_){}
    , decltype(_impl_.voice_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.rpm_model_uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.rpm_model_uri_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_rpm_model_uri().empty()) {
    _this->_impl_.rpm_model_uri_.Set(from._internal_rpm_model_uri(), 
      _this->GetArenaForAllocation());
  }
  _impl_.rpm_image_uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.rpm_image_uri_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_rpm_image_uri().empty()) {
    _this->_impl_.rpm_image_uri_.Set(from._internal_rpm_image_uri(), 
      _this->GetArenaForAllocation());
  }
  _impl_.rpm_image_uri_portrait_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.rpm_image_uri_portrait_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_rpm_image_uri_portrait().empty()) {
    _this->_impl_.rpm_image_uri_portrait_.Set(from._internal_rpm_image_uri_portrait(), 
      _this->GetArenaForAllocation());
  }
  _impl_.rpm_image_uri_posture_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.rpm_image_uri_posture_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_rpm_image_uri_posture().empty()) {
    _this->_impl_.rpm_image_uri_posture_.Set(from._internal_rpm_image_uri_posture(), 
      _this->GetArenaForAllocation());
  }
  _impl_.avatar_img_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.avatar_img_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_avatar_img().empty()) {
    _this->_impl_.avatar_img_.Set(from._internal_avatar_img(), 
      _this->GetArenaForAllocation());
  }
  _impl_.avatar_img_original_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.avatar_img_original_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_avatar_img_original().empty()) {
    _this->_impl_.avatar_img_original_.Set(from._internal_avatar_img_original(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_voice()) {
    _this->_impl_.voice_ = new ::ai::inworld::voices::Voice(*from._impl_.voice_);
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.Character.CharacterAssets)
}

inline void Character_CharacterAssets::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.rpm_model_uri_){}
    , decltype(_impl_.rpm_image_uri_){}
    , decltype(_impl_.rpm_image_uri_portrait_){}
    , decltype(_impl_.rpm_image_uri_posture_){}
    , decltype(_impl_.avatar_img_){}
    , decltype(_impl_.avatar_img_original_){}
    , decltype(_impl_.voice_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.rpm_model_uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.rpm_model_uri_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.rpm_image_uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.rpm_image_uri_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.rpm_image_uri_portrait_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.rpm_image_uri_portrait_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.rpm_image_uri_posture_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.rpm_image_uri_posture_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.avatar_img_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.avatar_img_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.avatar_img_original_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.avatar_img_original_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Character_CharacterAssets::~Character_CharacterAssets() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.Character.CharacterAssets)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Character_CharacterAssets::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.rpm_model_uri_.Destroy();
  _impl_.rpm_image_uri_.Destroy();
  _impl_.rpm_image_uri_portrait_.Destroy();
  _impl_.rpm_image_uri_posture_.Destroy();
  _impl_.avatar_img_.Destroy();
  _impl_.avatar_img_original_.Destroy();
  if (this != internal_default_instance()) delete _impl_.voice_;
}

void Character_CharacterAssets::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Character_CharacterAssets::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.Character.CharacterAssets)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.rpm_model_uri_.ClearToEmpty();
  _impl_.rpm_image_uri_.ClearToEmpty();
  _impl_.rpm_image_uri_portrait_.ClearToEmpty();
  _impl_.rpm_image_uri_posture_.ClearToEmpty();
  _impl_.avatar_img_.ClearToEmpty();
  _impl_.avatar_img_original_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.voice_ != nullptr) {
    delete _impl_.voice_;
  }
  _impl_.voice_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Character_CharacterAssets::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string rpm_model_uri = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_rpm_model_uri();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.CharacterAssets.rpm_model_uri"));
        } else
          goto handle_unusual;
        continue;
      // string rpm_image_uri = 3 [deprecated = true, (.google.api.field_behavior) = OUTPUT_ONLY];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_rpm_image_uri();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.CharacterAssets.rpm_image_uri"));
        } else
          goto handle_unusual;
        continue;
      // string rpm_image_uri_portrait = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_rpm_image_uri_portrait();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.CharacterAssets.rpm_image_uri_portrait"));
        } else
          goto handle_unusual;
        continue;
      // string rpm_image_uri_posture = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_rpm_image_uri_posture();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.CharacterAssets.rpm_image_uri_posture"));
        } else
          goto handle_unusual;
        continue;
      // .ai.inworld.voices.Voice voice = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_voice(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string avatar_img = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_avatar_img();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.CharacterAssets.avatar_img"));
        } else
          goto handle_unusual;
        continue;
      // string avatar_img_original = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          auto str = _internal_mutable_avatar_img_original();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.CharacterAssets.avatar_img_original"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Character_CharacterAssets::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.Character.CharacterAssets)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string rpm_model_uri = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (!this->_internal_rpm_model_uri().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rpm_model_uri().data(), static_cast<int>(this->_internal_rpm_model_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.CharacterAssets.rpm_model_uri");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rpm_model_uri(), target);
  }

  // string rpm_image_uri = 3 [deprecated = true, (.google.api.field_behavior) = OUTPUT_ONLY];
  if (!this->_internal_rpm_image_uri().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rpm_image_uri().data(), static_cast<int>(this->_internal_rpm_image_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.CharacterAssets.rpm_image_uri");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_rpm_image_uri(), target);
  }

  // string rpm_image_uri_portrait = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (!this->_internal_rpm_image_uri_portrait().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rpm_image_uri_portrait().data(), static_cast<int>(this->_internal_rpm_image_uri_portrait().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.CharacterAssets.rpm_image_uri_portrait");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_rpm_image_uri_portrait(), target);
  }

  // string rpm_image_uri_posture = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (!this->_internal_rpm_image_uri_posture().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rpm_image_uri_posture().data(), static_cast<int>(this->_internal_rpm_image_uri_posture().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.CharacterAssets.rpm_image_uri_posture");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_rpm_image_uri_posture(), target);
  }

  // .ai.inworld.voices.Voice voice = 6;
  if (this->_internal_has_voice()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::voice(this),
        _Internal::voice(this).GetCachedSize(), target, stream);
  }

  // string avatar_img = 7;
  if (!this->_internal_avatar_img().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_avatar_img().data(), static_cast<int>(this->_internal_avatar_img().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.CharacterAssets.avatar_img");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_avatar_img(), target);
  }

  // string avatar_img_original = 8;
  if (!this->_internal_avatar_img_original().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_avatar_img_original().data(), static_cast<int>(this->_internal_avatar_img_original().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.CharacterAssets.avatar_img_original");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_avatar_img_original(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.Character.CharacterAssets)
  return target;
}

size_t Character_CharacterAssets::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.Character.CharacterAssets)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string rpm_model_uri = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (!this->_internal_rpm_model_uri().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rpm_model_uri());
  }

  // string rpm_image_uri = 3 [deprecated = true, (.google.api.field_behavior) = OUTPUT_ONLY];
  if (!this->_internal_rpm_image_uri().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rpm_image_uri());
  }

  // string rpm_image_uri_portrait = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (!this->_internal_rpm_image_uri_portrait().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rpm_image_uri_portrait());
  }

  // string rpm_image_uri_posture = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (!this->_internal_rpm_image_uri_posture().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rpm_image_uri_posture());
  }

  // string avatar_img = 7;
  if (!this->_internal_avatar_img().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_avatar_img());
  }

  // string avatar_img_original = 8;
  if (!this->_internal_avatar_img_original().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_avatar_img_original());
  }

  // .ai.inworld.voices.Voice voice = 6;
  if (this->_internal_has_voice()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.voice_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Character_CharacterAssets::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Character_CharacterAssets::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Character_CharacterAssets::GetClassData() const { return &_class_data_; }


void Character_CharacterAssets::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Character_CharacterAssets*>(&to_msg);
  auto& from = static_cast<const Character_CharacterAssets&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.Character.CharacterAssets)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_rpm_model_uri().empty()) {
    _this->_internal_set_rpm_model_uri(from._internal_rpm_model_uri());
  }
  if (!from._internal_rpm_image_uri().empty()) {
    _this->_internal_set_rpm_image_uri(from._internal_rpm_image_uri());
  }
  if (!from._internal_rpm_image_uri_portrait().empty()) {
    _this->_internal_set_rpm_image_uri_portrait(from._internal_rpm_image_uri_portrait());
  }
  if (!from._internal_rpm_image_uri_posture().empty()) {
    _this->_internal_set_rpm_image_uri_posture(from._internal_rpm_image_uri_posture());
  }
  if (!from._internal_avatar_img().empty()) {
    _this->_internal_set_avatar_img(from._internal_avatar_img());
  }
  if (!from._internal_avatar_img_original().empty()) {
    _this->_internal_set_avatar_img_original(from._internal_avatar_img_original());
  }
  if (from._internal_has_voice()) {
    _this->_internal_mutable_voice()->::ai::inworld::voices::Voice::MergeFrom(
        from._internal_voice());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Character_CharacterAssets::CopyFrom(const Character_CharacterAssets& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.Character.CharacterAssets)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Character_CharacterAssets::IsInitialized() const {
  return true;
}

void Character_CharacterAssets::InternalSwap(Character_CharacterAssets* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.rpm_model_uri_, lhs_arena,
      &other->_impl_.rpm_model_uri_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.rpm_image_uri_, lhs_arena,
      &other->_impl_.rpm_image_uri_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.rpm_image_uri_portrait_, lhs_arena,
      &other->_impl_.rpm_image_uri_portrait_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.rpm_image_uri_posture_, lhs_arena,
      &other->_impl_.rpm_image_uri_posture_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.avatar_img_, lhs_arena,
      &other->_impl_.avatar_img_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.avatar_img_original_, lhs_arena,
      &other->_impl_.avatar_img_original_, rhs_arena
  );
  swap(_impl_.voice_, other->_impl_.voice_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Character_CharacterAssets::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto[6]);
}

// ===================================================================

class Character_CharacterInitialMood::_Internal {
 public:
};

Character_CharacterInitialMood::Character_CharacterInitialMood(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.Character.CharacterInitialMood)
}
Character_CharacterInitialMood::Character_CharacterInitialMood(const Character_CharacterInitialMood& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Character_CharacterInitialMood* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.joy_){}
    , decltype(_impl_.fear_){}
    , decltype(_impl_.trust_){}
    , decltype(_impl_.surprise_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.joy_, &from._impl_.joy_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.surprise_) -
    reinterpret_cast<char*>(&_impl_.joy_)) + sizeof(_impl_.surprise_));
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.Character.CharacterInitialMood)
}

inline void Character_CharacterInitialMood::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.joy_){0}
    , decltype(_impl_.fear_){0}
    , decltype(_impl_.trust_){0}
    , decltype(_impl_.surprise_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Character_CharacterInitialMood::~Character_CharacterInitialMood() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.Character.CharacterInitialMood)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Character_CharacterInitialMood::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Character_CharacterInitialMood::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Character_CharacterInitialMood::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.Character.CharacterInitialMood)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.joy_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.surprise_) -
      reinterpret_cast<char*>(&_impl_.joy_)) + sizeof(_impl_.surprise_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Character_CharacterInitialMood::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 joy = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.joy_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 fear = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.fear_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 trust = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.trust_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 surprise = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.surprise_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Character_CharacterInitialMood::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.Character.CharacterInitialMood)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 joy = 1;
  if (this->_internal_joy() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_joy(), target);
  }

  // int32 fear = 2;
  if (this->_internal_fear() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_fear(), target);
  }

  // int32 trust = 3;
  if (this->_internal_trust() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_trust(), target);
  }

  // int32 surprise = 4;
  if (this->_internal_surprise() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_surprise(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.Character.CharacterInitialMood)
  return target;
}

size_t Character_CharacterInitialMood::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.Character.CharacterInitialMood)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 joy = 1;
  if (this->_internal_joy() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_joy());
  }

  // int32 fear = 2;
  if (this->_internal_fear() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_fear());
  }

  // int32 trust = 3;
  if (this->_internal_trust() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_trust());
  }

  // int32 surprise = 4;
  if (this->_internal_surprise() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_surprise());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Character_CharacterInitialMood::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Character_CharacterInitialMood::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Character_CharacterInitialMood::GetClassData() const { return &_class_data_; }


void Character_CharacterInitialMood::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Character_CharacterInitialMood*>(&to_msg);
  auto& from = static_cast<const Character_CharacterInitialMood&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.Character.CharacterInitialMood)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_joy() != 0) {
    _this->_internal_set_joy(from._internal_joy());
  }
  if (from._internal_fear() != 0) {
    _this->_internal_set_fear(from._internal_fear());
  }
  if (from._internal_trust() != 0) {
    _this->_internal_set_trust(from._internal_trust());
  }
  if (from._internal_surprise() != 0) {
    _this->_internal_set_surprise(from._internal_surprise());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Character_CharacterInitialMood::CopyFrom(const Character_CharacterInitialMood& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.Character.CharacterInitialMood)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Character_CharacterInitialMood::IsInitialized() const {
  return true;
}

void Character_CharacterInitialMood::InternalSwap(Character_CharacterInitialMood* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Character_CharacterInitialMood, _impl_.surprise_)
      + sizeof(Character_CharacterInitialMood::_impl_.surprise_)
      - PROTOBUF_FIELD_OFFSET(Character_CharacterInitialMood, _impl_.joy_)>(
          reinterpret_cast<char*>(&_impl_.joy_),
          reinterpret_cast<char*>(&other->_impl_.joy_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Character_CharacterInitialMood::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto[7]);
}

// ===================================================================

class Character_CharacterPersonality::_Internal {
 public:
};

Character_CharacterPersonality::Character_CharacterPersonality(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.Character.CharacterPersonality)
}
Character_CharacterPersonality::Character_CharacterPersonality(const Character_CharacterPersonality& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Character_CharacterPersonality* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.positive_){}
    , decltype(_impl_.peaceful_){}
    , decltype(_impl_.open_){}
    , decltype(_impl_.extravert_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.positive_, &from._impl_.positive_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.extravert_) -
    reinterpret_cast<char*>(&_impl_.positive_)) + sizeof(_impl_.extravert_));
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.Character.CharacterPersonality)
}

inline void Character_CharacterPersonality::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.positive_){0}
    , decltype(_impl_.peaceful_){0}
    , decltype(_impl_.open_){0}
    , decltype(_impl_.extravert_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Character_CharacterPersonality::~Character_CharacterPersonality() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.Character.CharacterPersonality)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Character_CharacterPersonality::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Character_CharacterPersonality::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Character_CharacterPersonality::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.Character.CharacterPersonality)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.positive_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.extravert_) -
      reinterpret_cast<char*>(&_impl_.positive_)) + sizeof(_impl_.extravert_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Character_CharacterPersonality::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 positive = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.positive_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 peaceful = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.peaceful_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 open = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.open_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 extravert = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.extravert_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Character_CharacterPersonality::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.Character.CharacterPersonality)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 positive = 1;
  if (this->_internal_positive() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_positive(), target);
  }

  // int32 peaceful = 2;
  if (this->_internal_peaceful() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_peaceful(), target);
  }

  // int32 open = 3;
  if (this->_internal_open() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_open(), target);
  }

  // int32 extravert = 4;
  if (this->_internal_extravert() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_extravert(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.Character.CharacterPersonality)
  return target;
}

size_t Character_CharacterPersonality::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.Character.CharacterPersonality)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 positive = 1;
  if (this->_internal_positive() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_positive());
  }

  // int32 peaceful = 2;
  if (this->_internal_peaceful() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_peaceful());
  }

  // int32 open = 3;
  if (this->_internal_open() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_open());
  }

  // int32 extravert = 4;
  if (this->_internal_extravert() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_extravert());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Character_CharacterPersonality::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Character_CharacterPersonality::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Character_CharacterPersonality::GetClassData() const { return &_class_data_; }


void Character_CharacterPersonality::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Character_CharacterPersonality*>(&to_msg);
  auto& from = static_cast<const Character_CharacterPersonality&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.Character.CharacterPersonality)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_positive() != 0) {
    _this->_internal_set_positive(from._internal_positive());
  }
  if (from._internal_peaceful() != 0) {
    _this->_internal_set_peaceful(from._internal_peaceful());
  }
  if (from._internal_open() != 0) {
    _this->_internal_set_open(from._internal_open());
  }
  if (from._internal_extravert() != 0) {
    _this->_internal_set_extravert(from._internal_extravert());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Character_CharacterPersonality::CopyFrom(const Character_CharacterPersonality& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.Character.CharacterPersonality)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Character_CharacterPersonality::IsInitialized() const {
  return true;
}

void Character_CharacterPersonality::InternalSwap(Character_CharacterPersonality* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Character_CharacterPersonality, _impl_.extravert_)
      + sizeof(Character_CharacterPersonality::_impl_.extravert_)
      - PROTOBUF_FIELD_OFFSET(Character_CharacterPersonality, _impl_.positive_)>(
          reinterpret_cast<char*>(&_impl_.positive_),
          reinterpret_cast<char*>(&other->_impl_.positive_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Character_CharacterPersonality::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto[8]);
}

// ===================================================================

class Character_Fact::_Internal {
 public:
};

Character_Fact::Character_Fact(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.Character.Fact)
}
Character_Fact::Character_Fact(const Character_Fact& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Character_Fact* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.text_){from._impl_.text_}
    , decltype(_impl_.tags_){from._impl_.tags_}
    , /*decltype(_impl_._tags_cached_byte_size_)*/{0}
    , decltype(_impl_.uuid_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.uuid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.uuid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_uuid().empty()) {
    _this->_impl_.uuid_.Set(from._internal_uuid(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.Character.Fact)
}

inline void Character_Fact::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.text_){arena}
    , decltype(_impl_.tags_){arena}
    , /*decltype(_impl_._tags_cached_byte_size_)*/{0}
    , decltype(_impl_.uuid_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.uuid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.uuid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Character_Fact::~Character_Fact() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.Character.Fact)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Character_Fact::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.text_.~RepeatedPtrField();
  _impl_.tags_.~RepeatedField();
  _impl_.uuid_.Destroy();
}

void Character_Fact::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Character_Fact::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.Character.Fact)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.text_.Clear();
  _impl_.tags_.Clear();
  _impl_.uuid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Character_Fact::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string uuid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_uuid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.Fact.uuid"));
        } else
          goto handle_unusual;
        continue;
      // repeated string text = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_text();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.Fact.text"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .ai.inworld.studio.v1alpha.Character.Tag tags = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedEnumParser(_internal_mutable_tags(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 24) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_add_tags(static_cast<::ai::inworld::studio::v1alpha::Character_Tag>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Character_Fact::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.Character.Fact)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string uuid = 1;
  if (!this->_internal_uuid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uuid().data(), static_cast<int>(this->_internal_uuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.Fact.uuid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_uuid(), target);
  }

  // repeated string text = 2;
  for (int i = 0, n = this->_internal_text_size(); i < n; i++) {
    const auto& s = this->_internal_text(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.Fact.text");
    target = stream->WriteString(2, s, target);
  }

  // repeated .ai.inworld.studio.v1alpha.Character.Tag tags = 3;
  {
    int byte_size = _impl_._tags_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          3, _impl_.tags_, byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.Character.Fact)
  return target;
}

size_t Character_Fact::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.Character.Fact)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string text = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.text_.size());
  for (int i = 0, n = _impl_.text_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.text_.Get(i));
  }

  // repeated .ai.inworld.studio.v1alpha.Character.Tag tags = 3;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->_internal_tags_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
        this->_internal_tags(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._tags_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // string uuid = 1;
  if (!this->_internal_uuid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uuid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Character_Fact::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Character_Fact::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Character_Fact::GetClassData() const { return &_class_data_; }


void Character_Fact::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Character_Fact*>(&to_msg);
  auto& from = static_cast<const Character_Fact&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.Character.Fact)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.text_.MergeFrom(from._impl_.text_);
  _this->_impl_.tags_.MergeFrom(from._impl_.tags_);
  if (!from._internal_uuid().empty()) {
    _this->_internal_set_uuid(from._internal_uuid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Character_Fact::CopyFrom(const Character_Fact& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.Character.Fact)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Character_Fact::IsInitialized() const {
  return true;
}

void Character_Fact::InternalSwap(Character_Fact* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.text_.InternalSwap(&other->_impl_.text_);
  _impl_.tags_.InternalSwap(&other->_impl_.tags_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.uuid_, lhs_arena,
      &other->_impl_.uuid_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata Character_Fact::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto[9]);
}

// ===================================================================

class Character_Meta::_Internal {
 public:
};

Character_Meta::Character_Meta(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.Character.Meta)
}
Character_Meta::Character_Meta(const Character_Meta& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Character_Meta* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.total_triggers_){}
    , decltype(_impl_.total_common_knowledge_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.total_triggers_, &from._impl_.total_triggers_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.total_common_knowledge_) -
    reinterpret_cast<char*>(&_impl_.total_triggers_)) + sizeof(_impl_.total_common_knowledge_));
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.Character.Meta)
}

inline void Character_Meta::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.total_triggers_){0}
    , decltype(_impl_.total_common_knowledge_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Character_Meta::~Character_Meta() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.Character.Meta)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Character_Meta::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Character_Meta::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Character_Meta::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.Character.Meta)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.total_triggers_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.total_common_knowledge_) -
      reinterpret_cast<char*>(&_impl_.total_triggers_)) + sizeof(_impl_.total_common_knowledge_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Character_Meta::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 total_triggers = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.total_triggers_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 total_common_knowledge = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.total_common_knowledge_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Character_Meta::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.Character.Meta)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 total_triggers = 1;
  if (this->_internal_total_triggers() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_total_triggers(), target);
  }

  // int32 total_common_knowledge = 2;
  if (this->_internal_total_common_knowledge() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_total_common_knowledge(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.Character.Meta)
  return target;
}

size_t Character_Meta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.Character.Meta)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 total_triggers = 1;
  if (this->_internal_total_triggers() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_total_triggers());
  }

  // int32 total_common_knowledge = 2;
  if (this->_internal_total_common_knowledge() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_total_common_knowledge());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Character_Meta::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Character_Meta::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Character_Meta::GetClassData() const { return &_class_data_; }


void Character_Meta::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Character_Meta*>(&to_msg);
  auto& from = static_cast<const Character_Meta&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.Character.Meta)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_total_triggers() != 0) {
    _this->_internal_set_total_triggers(from._internal_total_triggers());
  }
  if (from._internal_total_common_knowledge() != 0) {
    _this->_internal_set_total_common_knowledge(from._internal_total_common_knowledge());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Character_Meta::CopyFrom(const Character_Meta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.Character.Meta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Character_Meta::IsInitialized() const {
  return true;
}

void Character_Meta::InternalSwap(Character_Meta* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Character_Meta, _impl_.total_common_knowledge_)
      + sizeof(Character_Meta::_impl_.total_common_knowledge_)
      - PROTOBUF_FIELD_OFFSET(Character_Meta, _impl_.total_triggers_)>(
          reinterpret_cast<char*>(&_impl_.total_triggers_),
          reinterpret_cast<char*>(&other->_impl_.total_triggers_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Character_Meta::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto[10]);
}

// ===================================================================

class Character_SharedPortalInfo_InteractionCountStat::_Internal {
 public:
};

Character_SharedPortalInfo_InteractionCountStat::Character_SharedPortalInfo_InteractionCountStat(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.Character.SharedPortalInfo.InteractionCountStat)
}
Character_SharedPortalInfo_InteractionCountStat::Character_SharedPortalInfo_InteractionCountStat(const Character_SharedPortalInfo_InteractionCountStat& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Character_SharedPortalInfo_InteractionCountStat* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.total_count_){}
    , decltype(_impl_.total_unread_count_){}
    , decltype(_impl_.total_read_count_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.total_count_, &from._impl_.total_count_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.total_read_count_) -
    reinterpret_cast<char*>(&_impl_.total_count_)) + sizeof(_impl_.total_read_count_));
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.Character.SharedPortalInfo.InteractionCountStat)
}

inline void Character_SharedPortalInfo_InteractionCountStat::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.total_count_){0}
    , decltype(_impl_.total_unread_count_){0}
    , decltype(_impl_.total_read_count_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Character_SharedPortalInfo_InteractionCountStat::~Character_SharedPortalInfo_InteractionCountStat() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.Character.SharedPortalInfo.InteractionCountStat)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Character_SharedPortalInfo_InteractionCountStat::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Character_SharedPortalInfo_InteractionCountStat::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Character_SharedPortalInfo_InteractionCountStat::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.Character.SharedPortalInfo.InteractionCountStat)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.total_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.total_read_count_) -
      reinterpret_cast<char*>(&_impl_.total_count_)) + sizeof(_impl_.total_read_count_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Character_SharedPortalInfo_InteractionCountStat::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 total_count = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.total_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 total_unread_count = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.total_unread_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 total_read_count = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.total_read_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Character_SharedPortalInfo_InteractionCountStat::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.Character.SharedPortalInfo.InteractionCountStat)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 total_count = 1;
  if (this->_internal_total_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_total_count(), target);
  }

  // int32 total_unread_count = 2;
  if (this->_internal_total_unread_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_total_unread_count(), target);
  }

  // int32 total_read_count = 3;
  if (this->_internal_total_read_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_total_read_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.Character.SharedPortalInfo.InteractionCountStat)
  return target;
}

size_t Character_SharedPortalInfo_InteractionCountStat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.Character.SharedPortalInfo.InteractionCountStat)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 total_count = 1;
  if (this->_internal_total_count() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_total_count());
  }

  // int32 total_unread_count = 2;
  if (this->_internal_total_unread_count() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_total_unread_count());
  }

  // int32 total_read_count = 3;
  if (this->_internal_total_read_count() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_total_read_count());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Character_SharedPortalInfo_InteractionCountStat::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Character_SharedPortalInfo_InteractionCountStat::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Character_SharedPortalInfo_InteractionCountStat::GetClassData() const { return &_class_data_; }


void Character_SharedPortalInfo_InteractionCountStat::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Character_SharedPortalInfo_InteractionCountStat*>(&to_msg);
  auto& from = static_cast<const Character_SharedPortalInfo_InteractionCountStat&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.Character.SharedPortalInfo.InteractionCountStat)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_total_count() != 0) {
    _this->_internal_set_total_count(from._internal_total_count());
  }
  if (from._internal_total_unread_count() != 0) {
    _this->_internal_set_total_unread_count(from._internal_total_unread_count());
  }
  if (from._internal_total_read_count() != 0) {
    _this->_internal_set_total_read_count(from._internal_total_read_count());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Character_SharedPortalInfo_InteractionCountStat::CopyFrom(const Character_SharedPortalInfo_InteractionCountStat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.Character.SharedPortalInfo.InteractionCountStat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Character_SharedPortalInfo_InteractionCountStat::IsInitialized() const {
  return true;
}

void Character_SharedPortalInfo_InteractionCountStat::InternalSwap(Character_SharedPortalInfo_InteractionCountStat* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Character_SharedPortalInfo_InteractionCountStat, _impl_.total_read_count_)
      + sizeof(Character_SharedPortalInfo_InteractionCountStat::_impl_.total_read_count_)
      - PROTOBUF_FIELD_OFFSET(Character_SharedPortalInfo_InteractionCountStat, _impl_.total_count_)>(
          reinterpret_cast<char*>(&_impl_.total_count_),
          reinterpret_cast<char*>(&other->_impl_.total_count_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Character_SharedPortalInfo_InteractionCountStat::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto[11]);
}

// ===================================================================

class Character_SharedPortalInfo::_Internal {
 public:
  static const ::ai::inworld::studio::v1alpha::Character_SharedPortalInfo_InteractionCountStat& interaction_count_stat(const Character_SharedPortalInfo* msg);
};

const ::ai::inworld::studio::v1alpha::Character_SharedPortalInfo_InteractionCountStat&
Character_SharedPortalInfo::_Internal::interaction_count_stat(const Character_SharedPortalInfo* msg) {
  return *msg->_impl_.interaction_count_stat_;
}
Character_SharedPortalInfo::Character_SharedPortalInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.Character.SharedPortalInfo)
}
Character_SharedPortalInfo::Character_SharedPortalInfo(const Character_SharedPortalInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Character_SharedPortalInfo* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.byline_){}
    , decltype(_impl_.prompt_){}
    , decltype(_impl_.short_alias_){}
    , decltype(_impl_.interaction_count_stat_){nullptr}
    , decltype(_impl_.is_shared_){}
    , decltype(_impl_.allowed_on_showcase_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.byline_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.byline_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_byline().empty()) {
    _this->_impl_.byline_.Set(from._internal_byline(), 
      _this->GetArenaForAllocation());
  }
  _impl_.prompt_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.prompt_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_prompt().empty()) {
    _this->_impl_.prompt_.Set(from._internal_prompt(), 
      _this->GetArenaForAllocation());
  }
  _impl_.short_alias_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.short_alias_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_short_alias().empty()) {
    _this->_impl_.short_alias_.Set(from._internal_short_alias(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_interaction_count_stat()) {
    _this->_impl_.interaction_count_stat_ = new ::ai::inworld::studio::v1alpha::Character_SharedPortalInfo_InteractionCountStat(*from._impl_.interaction_count_stat_);
  }
  ::memcpy(&_impl_.is_shared_, &from._impl_.is_shared_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.allowed_on_showcase_) -
    reinterpret_cast<char*>(&_impl_.is_shared_)) + sizeof(_impl_.allowed_on_showcase_));
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.Character.SharedPortalInfo)
}

inline void Character_SharedPortalInfo::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.byline_){}
    , decltype(_impl_.prompt_){}
    , decltype(_impl_.short_alias_){}
    , decltype(_impl_.interaction_count_stat_){nullptr}
    , decltype(_impl_.is_shared_){false}
    , decltype(_impl_.allowed_on_showcase_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.byline_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.byline_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.prompt_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.prompt_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.short_alias_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.short_alias_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Character_SharedPortalInfo::~Character_SharedPortalInfo() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.Character.SharedPortalInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Character_SharedPortalInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.byline_.Destroy();
  _impl_.prompt_.Destroy();
  _impl_.short_alias_.Destroy();
  if (this != internal_default_instance()) delete _impl_.interaction_count_stat_;
}

void Character_SharedPortalInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Character_SharedPortalInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.Character.SharedPortalInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.byline_.ClearToEmpty();
  _impl_.prompt_.ClearToEmpty();
  _impl_.short_alias_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.interaction_count_stat_ != nullptr) {
    delete _impl_.interaction_count_stat_;
  }
  _impl_.interaction_count_stat_ = nullptr;
  ::memset(&_impl_.is_shared_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.allowed_on_showcase_) -
      reinterpret_cast<char*>(&_impl_.is_shared_)) + sizeof(_impl_.allowed_on_showcase_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Character_SharedPortalInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool is_shared = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.is_shared_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string byline = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_byline();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.SharedPortalInfo.byline"));
        } else
          goto handle_unusual;
        continue;
      // string prompt = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_prompt();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.SharedPortalInfo.prompt"));
        } else
          goto handle_unusual;
        continue;
      // string short_alias = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_short_alias();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.SharedPortalInfo.short_alias"));
        } else
          goto handle_unusual;
        continue;
      // bool allowed_on_showcase = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.allowed_on_showcase_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ai.inworld.studio.v1alpha.Character.SharedPortalInfo.InteractionCountStat interaction_count_stat = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_interaction_count_stat(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Character_SharedPortalInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.Character.SharedPortalInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_shared = 1;
  if (this->_internal_is_shared() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_is_shared(), target);
  }

  // string byline = 2;
  if (!this->_internal_byline().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_byline().data(), static_cast<int>(this->_internal_byline().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.SharedPortalInfo.byline");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_byline(), target);
  }

  // string prompt = 3;
  if (!this->_internal_prompt().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_prompt().data(), static_cast<int>(this->_internal_prompt().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.SharedPortalInfo.prompt");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_prompt(), target);
  }

  // string short_alias = 4;
  if (!this->_internal_short_alias().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_short_alias().data(), static_cast<int>(this->_internal_short_alias().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.SharedPortalInfo.short_alias");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_short_alias(), target);
  }

  // bool allowed_on_showcase = 5;
  if (this->_internal_allowed_on_showcase() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(5, this->_internal_allowed_on_showcase(), target);
  }

  // .ai.inworld.studio.v1alpha.Character.SharedPortalInfo.InteractionCountStat interaction_count_stat = 6;
  if (this->_internal_has_interaction_count_stat()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::interaction_count_stat(this),
        _Internal::interaction_count_stat(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.Character.SharedPortalInfo)
  return target;
}

size_t Character_SharedPortalInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.Character.SharedPortalInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string byline = 2;
  if (!this->_internal_byline().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_byline());
  }

  // string prompt = 3;
  if (!this->_internal_prompt().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_prompt());
  }

  // string short_alias = 4;
  if (!this->_internal_short_alias().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_short_alias());
  }

  // .ai.inworld.studio.v1alpha.Character.SharedPortalInfo.InteractionCountStat interaction_count_stat = 6;
  if (this->_internal_has_interaction_count_stat()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.interaction_count_stat_);
  }

  // bool is_shared = 1;
  if (this->_internal_is_shared() != 0) {
    total_size += 1 + 1;
  }

  // bool allowed_on_showcase = 5;
  if (this->_internal_allowed_on_showcase() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Character_SharedPortalInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Character_SharedPortalInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Character_SharedPortalInfo::GetClassData() const { return &_class_data_; }


void Character_SharedPortalInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Character_SharedPortalInfo*>(&to_msg);
  auto& from = static_cast<const Character_SharedPortalInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.Character.SharedPortalInfo)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_byline().empty()) {
    _this->_internal_set_byline(from._internal_byline());
  }
  if (!from._internal_prompt().empty()) {
    _this->_internal_set_prompt(from._internal_prompt());
  }
  if (!from._internal_short_alias().empty()) {
    _this->_internal_set_short_alias(from._internal_short_alias());
  }
  if (from._internal_has_interaction_count_stat()) {
    _this->_internal_mutable_interaction_count_stat()->::ai::inworld::studio::v1alpha::Character_SharedPortalInfo_InteractionCountStat::MergeFrom(
        from._internal_interaction_count_stat());
  }
  if (from._internal_is_shared() != 0) {
    _this->_internal_set_is_shared(from._internal_is_shared());
  }
  if (from._internal_allowed_on_showcase() != 0) {
    _this->_internal_set_allowed_on_showcase(from._internal_allowed_on_showcase());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Character_SharedPortalInfo::CopyFrom(const Character_SharedPortalInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.Character.SharedPortalInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Character_SharedPortalInfo::IsInitialized() const {
  return true;
}

void Character_SharedPortalInfo::InternalSwap(Character_SharedPortalInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.byline_, lhs_arena,
      &other->_impl_.byline_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.prompt_, lhs_arena,
      &other->_impl_.prompt_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.short_alias_, lhs_arena,
      &other->_impl_.short_alias_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Character_SharedPortalInfo, _impl_.allowed_on_showcase_)
      + sizeof(Character_SharedPortalInfo::_impl_.allowed_on_showcase_)
      - PROTOBUF_FIELD_OFFSET(Character_SharedPortalInfo, _impl_.interaction_count_stat_)>(
          reinterpret_cast<char*>(&_impl_.interaction_count_stat_),
          reinterpret_cast<char*>(&other->_impl_.interaction_count_stat_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Character_SharedPortalInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto[12]);
}

// ===================================================================

Character_SafetyConfigEntry_DoNotUse::Character_SafetyConfigEntry_DoNotUse() {}
Character_SafetyConfigEntry_DoNotUse::Character_SafetyConfigEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Character_SafetyConfigEntry_DoNotUse::MergeFrom(const Character_SafetyConfigEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Character_SafetyConfigEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto[13]);
}

// ===================================================================

class Character::_Internal {
 public:
  static const ::ai::inworld::studio::v1alpha::Character_CharacterDescription& default_character_description(const Character* msg);
  static const ::ai::inworld::studio::v1alpha::Character_BrainSettings& brain_settings(const Character* msg);
  static const ::ai::inworld::studio::v1alpha::Character_CharacterAssets& default_character_assets(const Character* msg);
  static const ::ai::inworld::studio::v1alpha::Character_CharacterInitialMood& initial_mood(const Character* msg);
  static const ::ai::inworld::studio::v1alpha::Character_CharacterPersonality& personality(const Character* msg);
  static const ::ai::inworld::studio::v1alpha::Character_Meta& meta(const Character* msg);
  static const ::ai::inworld::studio::v1alpha::Character_SharedPortalInfo& share_portal_info(const Character* msg);
};

const ::ai::inworld::studio::v1alpha::Character_CharacterDescription&
Character::_Internal::default_character_description(const Character* msg) {
  return *msg->_impl_.default_character_description_;
}
const ::ai::inworld::studio::v1alpha::Character_BrainSettings&
Character::_Internal::brain_settings(const Character* msg) {
  return *msg->_impl_.brain_settings_;
}
const ::ai::inworld::studio::v1alpha::Character_CharacterAssets&
Character::_Internal::default_character_assets(const Character* msg) {
  return *msg->_impl_.default_character_assets_;
}
const ::ai::inworld::studio::v1alpha::Character_CharacterInitialMood&
Character::_Internal::initial_mood(const Character* msg) {
  return *msg->_impl_.initial_mood_;
}
const ::ai::inworld::studio::v1alpha::Character_CharacterPersonality&
Character::_Internal::personality(const Character* msg) {
  return *msg->_impl_.personality_;
}
const ::ai::inworld::studio::v1alpha::Character_Meta&
Character::_Internal::meta(const Character* msg) {
  return *msg->_impl_.meta_;
}
const ::ai::inworld::studio::v1alpha::Character_SharedPortalInfo&
Character::_Internal::share_portal_info(const Character* msg) {
  return *msg->_impl_.share_portal_info_;
}
void Character::clear_scenes() {
  _impl_.scenes_.Clear();
}
void Character::clear_behavioral_contexts() {
  _impl_.behavioral_contexts_.Clear();
}
Character::Character(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &Character::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.Character)
}
Character::Character(const Character& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Character* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.brain_triggers_){from._impl_.brain_triggers_}
    , decltype(_impl_.common_knowledges_){from._impl_.common_knowledges_}
    , decltype(_impl_.scenes_){from._impl_.scenes_}
    , decltype(_impl_.facts_){from._impl_.facts_}
    , decltype(_impl_.behavioral_contexts_){from._impl_.behavioral_contexts_}
    , /*decltype(_impl_.safety_config_)*/{}
    , decltype(_impl_.name_){}
    , decltype(_impl_.language_code_){}
    , decltype(_impl_.yaml_config_){}
    , decltype(_impl_.default_character_description_){nullptr}
    , decltype(_impl_.brain_settings_){nullptr}
    , decltype(_impl_.default_character_assets_){nullptr}
    , decltype(_impl_.initial_mood_){nullptr}
    , decltype(_impl_.personality_){nullptr}
    , decltype(_impl_.meta_){nullptr}
    , decltype(_impl_.share_portal_info_){nullptr}
    , decltype(_impl_.social_rank_){}
    , decltype(_impl_.emotional_fluidity_){}
    , decltype(_impl_.relationship_fluidity_){}
    , decltype(_impl_.fourth_wall_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.safety_config_.MergeFrom(from._impl_.safety_config_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.language_code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.language_code_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_language_code().empty()) {
    _this->_impl_.language_code_.Set(from._internal_language_code(), 
      _this->GetArenaForAllocation());
  }
  _impl_.yaml_config_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.yaml_config_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_yaml_config().empty()) {
    _this->_impl_.yaml_config_.Set(from._internal_yaml_config(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_default_character_description()) {
    _this->_impl_.default_character_description_ = new ::ai::inworld::studio::v1alpha::Character_CharacterDescription(*from._impl_.default_character_description_);
  }
  if (from._internal_has_brain_settings()) {
    _this->_impl_.brain_settings_ = new ::ai::inworld::studio::v1alpha::Character_BrainSettings(*from._impl_.brain_settings_);
  }
  if (from._internal_has_default_character_assets()) {
    _this->_impl_.default_character_assets_ = new ::ai::inworld::studio::v1alpha::Character_CharacterAssets(*from._impl_.default_character_assets_);
  }
  if (from._internal_has_initial_mood()) {
    _this->_impl_.initial_mood_ = new ::ai::inworld::studio::v1alpha::Character_CharacterInitialMood(*from._impl_.initial_mood_);
  }
  if (from._internal_has_personality()) {
    _this->_impl_.personality_ = new ::ai::inworld::studio::v1alpha::Character_CharacterPersonality(*from._impl_.personality_);
  }
  if (from._internal_has_meta()) {
    _this->_impl_.meta_ = new ::ai::inworld::studio::v1alpha::Character_Meta(*from._impl_.meta_);
  }
  if (from._internal_has_share_portal_info()) {
    _this->_impl_.share_portal_info_ = new ::ai::inworld::studio::v1alpha::Character_SharedPortalInfo(*from._impl_.share_portal_info_);
  }
  ::memcpy(&_impl_.social_rank_, &from._impl_.social_rank_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.fourth_wall_) -
    reinterpret_cast<char*>(&_impl_.social_rank_)) + sizeof(_impl_.fourth_wall_));
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.Character)
}

inline void Character::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.brain_triggers_){arena}
    , decltype(_impl_.common_knowledges_){arena}
    , decltype(_impl_.scenes_){arena}
    , decltype(_impl_.facts_){arena}
    , decltype(_impl_.behavioral_contexts_){arena}
    , /*decltype(_impl_.safety_config_)*/{::_pbi::ArenaInitialized(), arena}
    , decltype(_impl_.name_){}
    , decltype(_impl_.language_code_){}
    , decltype(_impl_.yaml_config_){}
    , decltype(_impl_.default_character_description_){nullptr}
    , decltype(_impl_.brain_settings_){nullptr}
    , decltype(_impl_.default_character_assets_){nullptr}
    , decltype(_impl_.initial_mood_){nullptr}
    , decltype(_impl_.personality_){nullptr}
    , decltype(_impl_.meta_){nullptr}
    , decltype(_impl_.share_portal_info_){nullptr}
    , decltype(_impl_.social_rank_){0}
    , decltype(_impl_.emotional_fluidity_){0}
    , decltype(_impl_.relationship_fluidity_){0}
    , decltype(_impl_.fourth_wall_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.language_code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.language_code_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.yaml_config_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.yaml_config_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Character::~Character() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.Character)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void Character::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.brain_triggers_.~RepeatedPtrField();
  _impl_.common_knowledges_.~RepeatedPtrField();
  _impl_.scenes_.~RepeatedPtrField();
  _impl_.facts_.~RepeatedPtrField();
  _impl_.behavioral_contexts_.~RepeatedPtrField();
  _impl_.safety_config_.Destruct();
  _impl_.safety_config_.~MapField();
  _impl_.name_.Destroy();
  _impl_.language_code_.Destroy();
  _impl_.yaml_config_.Destroy();
  if (this != internal_default_instance()) delete _impl_.default_character_description_;
  if (this != internal_default_instance()) delete _impl_.brain_settings_;
  if (this != internal_default_instance()) delete _impl_.default_character_assets_;
  if (this != internal_default_instance()) delete _impl_.initial_mood_;
  if (this != internal_default_instance()) delete _impl_.personality_;
  if (this != internal_default_instance()) delete _impl_.meta_;
  if (this != internal_default_instance()) delete _impl_.share_portal_info_;
}

void Character::ArenaDtor(void* object) {
  Character* _this = reinterpret_cast< Character* >(object);
  _this->_impl_.safety_config_.Destruct();
}
void Character::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Character::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.Character)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.brain_triggers_.Clear();
  _impl_.common_knowledges_.Clear();
  _impl_.scenes_.Clear();
  _impl_.facts_.Clear();
  _impl_.behavioral_contexts_.Clear();
  _impl_.safety_config_.Clear();
  _impl_.name_.ClearToEmpty();
  _impl_.language_code_.ClearToEmpty();
  _impl_.yaml_config_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.default_character_description_ != nullptr) {
    delete _impl_.default_character_description_;
  }
  _impl_.default_character_description_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.brain_settings_ != nullptr) {
    delete _impl_.brain_settings_;
  }
  _impl_.brain_settings_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.default_character_assets_ != nullptr) {
    delete _impl_.default_character_assets_;
  }
  _impl_.default_character_assets_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.initial_mood_ != nullptr) {
    delete _impl_.initial_mood_;
  }
  _impl_.initial_mood_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.personality_ != nullptr) {
    delete _impl_.personality_;
  }
  _impl_.personality_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.meta_ != nullptr) {
    delete _impl_.meta_;
  }
  _impl_.meta_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.share_portal_info_ != nullptr) {
    delete _impl_.share_portal_info_;
  }
  _impl_.share_portal_info_ = nullptr;
  ::memset(&_impl_.social_rank_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.fourth_wall_) -
      reinterpret_cast<char*>(&_impl_.social_rank_)) + sizeof(_impl_.fourth_wall_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Character::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [(.ai.inworld.options.examples) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.name"));
        } else
          goto handle_unusual;
        continue;
      // string language_code = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_language_code();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.language_code"));
        } else
          goto handle_unusual;
        continue;
      // .ai.inworld.studio.v1alpha.Character.CharacterDescription default_character_description = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_character_description(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ai.inworld.studio.v1alpha.Character.BrainSettings brain_settings = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_brain_settings(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .ai.inworld.studio.v1alpha.Character.BrainTrigger brain_triggers = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_brain_triggers(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .ai.inworld.studio.v1alpha.Character.CharacterAssets default_character_assets = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_default_character_assets(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ai.inworld.studio.v1alpha.Character.CharacterInitialMood initial_mood = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_initial_mood(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ai.inworld.studio.v1alpha.Character.CharacterPersonality personality = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_personality(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated string common_knowledges = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_common_knowledges();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.common_knowledges"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<90>(ptr));
        } else
          goto handle_unusual;
        continue;
      // float social_rank = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 101)) {
          _impl_.social_rank_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // repeated .ai.inworld.studio.v1alpha.Scene scenes = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_scenes(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<106>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .ai.inworld.studio.v1alpha.Character.Fact facts = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 114)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_facts(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<114>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .ai.inworld.studio.v1alpha.BehavioralContext behavioral_contexts = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_behavioral_contexts(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<122>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .ai.inworld.studio.v1alpha.Character.Meta meta = 16 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 130)) {
          ptr = ctx->ParseMessage(_internal_mutable_meta(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // float emotional_fluidity = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 141)) {
          _impl_.emotional_fluidity_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // .ai.inworld.studio.v1alpha.Character.SharedPortalInfo share_portal_info = 18 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 146)) {
          ptr = ctx->ParseMessage(_internal_mutable_share_portal_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string yaml_config = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 154)) {
          auto str = _internal_mutable_yaml_config();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.Character.yaml_config"));
        } else
          goto handle_unusual;
        continue;
      // map<string, .ai.inworld.studio.v1alpha.SafetyLevel> safety_config = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 170)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(&_impl_.safety_config_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<170>(ptr));
        } else
          goto handle_unusual;
        continue;
      // float relationship_fluidity = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 181)) {
          _impl_.relationship_fluidity_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // .ai.inworld.studio.v1alpha.Character.FourthWallContainment fourth_wall = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 184)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_fourth_wall(static_cast<::ai::inworld::studio::v1alpha::Character_FourthWallContainment>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Character::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.Character)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.ai.inworld.options.examples) = {
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string language_code = 2;
  if (!this->_internal_language_code().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_language_code().data(), static_cast<int>(this->_internal_language_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.language_code");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_language_code(), target);
  }

  // .ai.inworld.studio.v1alpha.Character.CharacterDescription default_character_description = 3;
  if (this->_internal_has_default_character_description()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::default_character_description(this),
        _Internal::default_character_description(this).GetCachedSize(), target, stream);
  }

  // .ai.inworld.studio.v1alpha.Character.BrainSettings brain_settings = 4;
  if (this->_internal_has_brain_settings()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::brain_settings(this),
        _Internal::brain_settings(this).GetCachedSize(), target, stream);
  }

  // repeated .ai.inworld.studio.v1alpha.Character.BrainTrigger brain_triggers = 5;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_brain_triggers_size()); i < n; i++) {
    const auto& repfield = this->_internal_brain_triggers(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  // .ai.inworld.studio.v1alpha.Character.CharacterAssets default_character_assets = 7;
  if (this->_internal_has_default_character_assets()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::default_character_assets(this),
        _Internal::default_character_assets(this).GetCachedSize(), target, stream);
  }

  // .ai.inworld.studio.v1alpha.Character.CharacterInitialMood initial_mood = 9;
  if (this->_internal_has_initial_mood()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(9, _Internal::initial_mood(this),
        _Internal::initial_mood(this).GetCachedSize(), target, stream);
  }

  // .ai.inworld.studio.v1alpha.Character.CharacterPersonality personality = 10;
  if (this->_internal_has_personality()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(10, _Internal::personality(this),
        _Internal::personality(this).GetCachedSize(), target, stream);
  }

  // repeated string common_knowledges = 11;
  for (int i = 0, n = this->_internal_common_knowledges_size(); i < n; i++) {
    const auto& s = this->_internal_common_knowledges(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.common_knowledges");
    target = stream->WriteString(11, s, target);
  }

  // float social_rank = 12;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_social_rank = this->_internal_social_rank();
  uint32_t raw_social_rank;
  memcpy(&raw_social_rank, &tmp_social_rank, sizeof(tmp_social_rank));
  if (raw_social_rank != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(12, this->_internal_social_rank(), target);
  }

  // repeated .ai.inworld.studio.v1alpha.Scene scenes = 13;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_scenes_size()); i < n; i++) {
    const auto& repfield = this->_internal_scenes(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(13, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .ai.inworld.studio.v1alpha.Character.Fact facts = 14;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_facts_size()); i < n; i++) {
    const auto& repfield = this->_internal_facts(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(14, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .ai.inworld.studio.v1alpha.BehavioralContext behavioral_contexts = 15;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_behavioral_contexts_size()); i < n; i++) {
    const auto& repfield = this->_internal_behavioral_contexts(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(15, repfield, repfield.GetCachedSize(), target, stream);
  }

  // .ai.inworld.studio.v1alpha.Character.Meta meta = 16 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->_internal_has_meta()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(16, _Internal::meta(this),
        _Internal::meta(this).GetCachedSize(), target, stream);
  }

  // float emotional_fluidity = 17;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_emotional_fluidity = this->_internal_emotional_fluidity();
  uint32_t raw_emotional_fluidity;
  memcpy(&raw_emotional_fluidity, &tmp_emotional_fluidity, sizeof(tmp_emotional_fluidity));
  if (raw_emotional_fluidity != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(17, this->_internal_emotional_fluidity(), target);
  }

  // .ai.inworld.studio.v1alpha.Character.SharedPortalInfo share_portal_info = 18 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->_internal_has_share_portal_info()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(18, _Internal::share_portal_info(this),
        _Internal::share_portal_info(this).GetCachedSize(), target, stream);
  }

  // string yaml_config = 19;
  if (!this->_internal_yaml_config().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_yaml_config().data(), static_cast<int>(this->_internal_yaml_config().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.Character.yaml_config");
    target = stream->WriteStringMaybeAliased(
        19, this->_internal_yaml_config(), target);
  }

  // map<string, .ai.inworld.studio.v1alpha.SafetyLevel> safety_config = 21;
  if (!this->_internal_safety_config().empty()) {
    using MapType = ::_pb::Map<std::string, ::ai::inworld::studio::v1alpha::SafetyLevel>;
    using WireHelper = Character_SafetyConfigEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_safety_config();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "ai.inworld.studio.v1alpha.Character.SafetyConfigEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(21, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(21, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  // float relationship_fluidity = 22;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_relationship_fluidity = this->_internal_relationship_fluidity();
  uint32_t raw_relationship_fluidity;
  memcpy(&raw_relationship_fluidity, &tmp_relationship_fluidity, sizeof(tmp_relationship_fluidity));
  if (raw_relationship_fluidity != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(22, this->_internal_relationship_fluidity(), target);
  }

  // .ai.inworld.studio.v1alpha.Character.FourthWallContainment fourth_wall = 23;
  if (this->_internal_fourth_wall() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      23, this->_internal_fourth_wall(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.Character)
  return target;
}

size_t Character::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.Character)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ai.inworld.studio.v1alpha.Character.BrainTrigger brain_triggers = 5;
  total_size += 1UL * this->_internal_brain_triggers_size();
  for (const auto& msg : this->_impl_.brain_triggers_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated string common_knowledges = 11;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.common_knowledges_.size());
  for (int i = 0, n = _impl_.common_knowledges_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.common_knowledges_.Get(i));
  }

  // repeated .ai.inworld.studio.v1alpha.Scene scenes = 13;
  total_size += 1UL * this->_internal_scenes_size();
  for (const auto& msg : this->_impl_.scenes_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ai.inworld.studio.v1alpha.Character.Fact facts = 14;
  total_size += 1UL * this->_internal_facts_size();
  for (const auto& msg : this->_impl_.facts_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ai.inworld.studio.v1alpha.BehavioralContext behavioral_contexts = 15;
  total_size += 1UL * this->_internal_behavioral_contexts_size();
  for (const auto& msg : this->_impl_.behavioral_contexts_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // map<string, .ai.inworld.studio.v1alpha.SafetyLevel> safety_config = 21;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_safety_config_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::ai::inworld::studio::v1alpha::SafetyLevel >::const_iterator
      it = this->_internal_safety_config().begin();
      it != this->_internal_safety_config().end(); ++it) {
    total_size += Character_SafetyConfigEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string name = 1 [(.ai.inworld.options.examples) = {
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string language_code = 2;
  if (!this->_internal_language_code().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_language_code());
  }

  // string yaml_config = 19;
  if (!this->_internal_yaml_config().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_yaml_config());
  }

  // .ai.inworld.studio.v1alpha.Character.CharacterDescription default_character_description = 3;
  if (this->_internal_has_default_character_description()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.default_character_description_);
  }

  // .ai.inworld.studio.v1alpha.Character.BrainSettings brain_settings = 4;
  if (this->_internal_has_brain_settings()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.brain_settings_);
  }

  // .ai.inworld.studio.v1alpha.Character.CharacterAssets default_character_assets = 7;
  if (this->_internal_has_default_character_assets()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.default_character_assets_);
  }

  // .ai.inworld.studio.v1alpha.Character.CharacterInitialMood initial_mood = 9;
  if (this->_internal_has_initial_mood()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.initial_mood_);
  }

  // .ai.inworld.studio.v1alpha.Character.CharacterPersonality personality = 10;
  if (this->_internal_has_personality()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.personality_);
  }

  // .ai.inworld.studio.v1alpha.Character.Meta meta = 16 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->_internal_has_meta()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.meta_);
  }

  // .ai.inworld.studio.v1alpha.Character.SharedPortalInfo share_portal_info = 18 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (this->_internal_has_share_portal_info()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.share_portal_info_);
  }

  // float social_rank = 12;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_social_rank = this->_internal_social_rank();
  uint32_t raw_social_rank;
  memcpy(&raw_social_rank, &tmp_social_rank, sizeof(tmp_social_rank));
  if (raw_social_rank != 0) {
    total_size += 1 + 4;
  }

  // float emotional_fluidity = 17;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_emotional_fluidity = this->_internal_emotional_fluidity();
  uint32_t raw_emotional_fluidity;
  memcpy(&raw_emotional_fluidity, &tmp_emotional_fluidity, sizeof(tmp_emotional_fluidity));
  if (raw_emotional_fluidity != 0) {
    total_size += 2 + 4;
  }

  // float relationship_fluidity = 22;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_relationship_fluidity = this->_internal_relationship_fluidity();
  uint32_t raw_relationship_fluidity;
  memcpy(&raw_relationship_fluidity, &tmp_relationship_fluidity, sizeof(tmp_relationship_fluidity));
  if (raw_relationship_fluidity != 0) {
    total_size += 2 + 4;
  }

  // .ai.inworld.studio.v1alpha.Character.FourthWallContainment fourth_wall = 23;
  if (this->_internal_fourth_wall() != 0) {
    total_size += 2 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_fourth_wall());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Character::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Character::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Character::GetClassData() const { return &_class_data_; }


void Character::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Character*>(&to_msg);
  auto& from = static_cast<const Character&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.Character)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.brain_triggers_.MergeFrom(from._impl_.brain_triggers_);
  _this->_impl_.common_knowledges_.MergeFrom(from._impl_.common_knowledges_);
  _this->_impl_.scenes_.MergeFrom(from._impl_.scenes_);
  _this->_impl_.facts_.MergeFrom(from._impl_.facts_);
  _this->_impl_.behavioral_contexts_.MergeFrom(from._impl_.behavioral_contexts_);
  _this->_impl_.safety_config_.MergeFrom(from._impl_.safety_config_);
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_language_code().empty()) {
    _this->_internal_set_language_code(from._internal_language_code());
  }
  if (!from._internal_yaml_config().empty()) {
    _this->_internal_set_yaml_config(from._internal_yaml_config());
  }
  if (from._internal_has_default_character_description()) {
    _this->_internal_mutable_default_character_description()->::ai::inworld::studio::v1alpha::Character_CharacterDescription::MergeFrom(
        from._internal_default_character_description());
  }
  if (from._internal_has_brain_settings()) {
    _this->_internal_mutable_brain_settings()->::ai::inworld::studio::v1alpha::Character_BrainSettings::MergeFrom(
        from._internal_brain_settings());
  }
  if (from._internal_has_default_character_assets()) {
    _this->_internal_mutable_default_character_assets()->::ai::inworld::studio::v1alpha::Character_CharacterAssets::MergeFrom(
        from._internal_default_character_assets());
  }
  if (from._internal_has_initial_mood()) {
    _this->_internal_mutable_initial_mood()->::ai::inworld::studio::v1alpha::Character_CharacterInitialMood::MergeFrom(
        from._internal_initial_mood());
  }
  if (from._internal_has_personality()) {
    _this->_internal_mutable_personality()->::ai::inworld::studio::v1alpha::Character_CharacterPersonality::MergeFrom(
        from._internal_personality());
  }
  if (from._internal_has_meta()) {
    _this->_internal_mutable_meta()->::ai::inworld::studio::v1alpha::Character_Meta::MergeFrom(
        from._internal_meta());
  }
  if (from._internal_has_share_portal_info()) {
    _this->_internal_mutable_share_portal_info()->::ai::inworld::studio::v1alpha::Character_SharedPortalInfo::MergeFrom(
        from._internal_share_portal_info());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_social_rank = from._internal_social_rank();
  uint32_t raw_social_rank;
  memcpy(&raw_social_rank, &tmp_social_rank, sizeof(tmp_social_rank));
  if (raw_social_rank != 0) {
    _this->_internal_set_social_rank(from._internal_social_rank());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_emotional_fluidity = from._internal_emotional_fluidity();
  uint32_t raw_emotional_fluidity;
  memcpy(&raw_emotional_fluidity, &tmp_emotional_fluidity, sizeof(tmp_emotional_fluidity));
  if (raw_emotional_fluidity != 0) {
    _this->_internal_set_emotional_fluidity(from._internal_emotional_fluidity());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_relationship_fluidity = from._internal_relationship_fluidity();
  uint32_t raw_relationship_fluidity;
  memcpy(&raw_relationship_fluidity, &tmp_relationship_fluidity, sizeof(tmp_relationship_fluidity));
  if (raw_relationship_fluidity != 0) {
    _this->_internal_set_relationship_fluidity(from._internal_relationship_fluidity());
  }
  if (from._internal_fourth_wall() != 0) {
    _this->_internal_set_fourth_wall(from._internal_fourth_wall());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Character::CopyFrom(const Character& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.Character)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Character::IsInitialized() const {
  return true;
}

void Character::InternalSwap(Character* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.brain_triggers_.InternalSwap(&other->_impl_.brain_triggers_);
  _impl_.common_knowledges_.InternalSwap(&other->_impl_.common_knowledges_);
  _impl_.scenes_.InternalSwap(&other->_impl_.scenes_);
  _impl_.facts_.InternalSwap(&other->_impl_.facts_);
  _impl_.behavioral_contexts_.InternalSwap(&other->_impl_.behavioral_contexts_);
  _impl_.safety_config_.InternalSwap(&other->_impl_.safety_config_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.language_code_, lhs_arena,
      &other->_impl_.language_code_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.yaml_config_, lhs_arena,
      &other->_impl_.yaml_config_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Character, _impl_.fourth_wall_)
      + sizeof(Character::_impl_.fourth_wall_)
      - PROTOBUF_FIELD_OFFSET(Character, _impl_.default_character_description_)>(
          reinterpret_cast<char*>(&_impl_.default_character_description_),
          reinterpret_cast<char*>(&other->_impl_.default_character_description_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Character::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto[14]);
}

// ===================================================================

class GetCharacterRequest::_Internal {
 public:
};

GetCharacterRequest::GetCharacterRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.GetCharacterRequest)
}
GetCharacterRequest::GetCharacterRequest(const GetCharacterRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetCharacterRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.view_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.view_ = from._impl_.view_;
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.GetCharacterRequest)
}

inline void GetCharacterRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.view_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetCharacterRequest::~GetCharacterRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.GetCharacterRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetCharacterRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void GetCharacterRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetCharacterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.GetCharacterRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.view_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetCharacterRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.GetCharacterRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // .ai.inworld.studio.v1alpha.CharacterItemView view = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_view(static_cast<::ai::inworld::studio::v1alpha::CharacterItemView>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetCharacterRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.GetCharacterRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.GetCharacterRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // .ai.inworld.studio.v1alpha.CharacterItemView view = 2;
  if (this->_internal_view() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_view(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.GetCharacterRequest)
  return target;
}

size_t GetCharacterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.GetCharacterRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .ai.inworld.studio.v1alpha.CharacterItemView view = 2;
  if (this->_internal_view() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_view());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetCharacterRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetCharacterRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetCharacterRequest::GetClassData() const { return &_class_data_; }


void GetCharacterRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetCharacterRequest*>(&to_msg);
  auto& from = static_cast<const GetCharacterRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.GetCharacterRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_view() != 0) {
    _this->_internal_set_view(from._internal_view());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetCharacterRequest::CopyFrom(const GetCharacterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.GetCharacterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCharacterRequest::IsInitialized() const {
  return true;
}

void GetCharacterRequest::InternalSwap(GetCharacterRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  swap(_impl_.view_, other->_impl_.view_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetCharacterRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto[15]);
}

// ===================================================================

class GetCharacterAdvancedSettingsRequest::_Internal {
 public:
};

GetCharacterAdvancedSettingsRequest::GetCharacterAdvancedSettingsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.GetCharacterAdvancedSettingsRequest)
}
GetCharacterAdvancedSettingsRequest::GetCharacterAdvancedSettingsRequest(const GetCharacterAdvancedSettingsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetCharacterAdvancedSettingsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.GetCharacterAdvancedSettingsRequest)
}

inline void GetCharacterAdvancedSettingsRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetCharacterAdvancedSettingsRequest::~GetCharacterAdvancedSettingsRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.GetCharacterAdvancedSettingsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetCharacterAdvancedSettingsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void GetCharacterAdvancedSettingsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetCharacterAdvancedSettingsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.GetCharacterAdvancedSettingsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetCharacterAdvancedSettingsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.GetCharacterAdvancedSettingsRequest.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetCharacterAdvancedSettingsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.GetCharacterAdvancedSettingsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.GetCharacterAdvancedSettingsRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.GetCharacterAdvancedSettingsRequest)
  return target;
}

size_t GetCharacterAdvancedSettingsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.GetCharacterAdvancedSettingsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetCharacterAdvancedSettingsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetCharacterAdvancedSettingsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetCharacterAdvancedSettingsRequest::GetClassData() const { return &_class_data_; }


void GetCharacterAdvancedSettingsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetCharacterAdvancedSettingsRequest*>(&to_msg);
  auto& from = static_cast<const GetCharacterAdvancedSettingsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.GetCharacterAdvancedSettingsRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetCharacterAdvancedSettingsRequest::CopyFrom(const GetCharacterAdvancedSettingsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.GetCharacterAdvancedSettingsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCharacterAdvancedSettingsRequest::IsInitialized() const {
  return true;
}

void GetCharacterAdvancedSettingsRequest::InternalSwap(GetCharacterAdvancedSettingsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetCharacterAdvancedSettingsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto[16]);
}

// ===================================================================

class UpdateCharacterAdvancedSettingsRequest::_Internal {
 public:
  static const ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings& character_advanced_settings(const UpdateCharacterAdvancedSettingsRequest* msg);
  static const ::PROTOBUF_NAMESPACE_ID::FieldMask& update_mask(const UpdateCharacterAdvancedSettingsRequest* msg);
};

const ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings&
UpdateCharacterAdvancedSettingsRequest::_Internal::character_advanced_settings(const UpdateCharacterAdvancedSettingsRequest* msg) {
  return *msg->_impl_.character_advanced_settings_;
}
const ::PROTOBUF_NAMESPACE_ID::FieldMask&
UpdateCharacterAdvancedSettingsRequest::_Internal::update_mask(const UpdateCharacterAdvancedSettingsRequest* msg) {
  return *msg->_impl_.update_mask_;
}
void UpdateCharacterAdvancedSettingsRequest::clear_update_mask() {
  if (GetArenaForAllocation() == nullptr && _impl_.update_mask_ != nullptr) {
    delete _impl_.update_mask_;
  }
  _impl_.update_mask_ = nullptr;
}
UpdateCharacterAdvancedSettingsRequest::UpdateCharacterAdvancedSettingsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.UpdateCharacterAdvancedSettingsRequest)
}
UpdateCharacterAdvancedSettingsRequest::UpdateCharacterAdvancedSettingsRequest(const UpdateCharacterAdvancedSettingsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UpdateCharacterAdvancedSettingsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.character_advanced_settings_){nullptr}
    , decltype(_impl_.update_mask_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_character_advanced_settings()) {
    _this->_impl_.character_advanced_settings_ = new ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings(*from._impl_.character_advanced_settings_);
  }
  if (from._internal_has_update_mask()) {
    _this->_impl_.update_mask_ = new ::PROTOBUF_NAMESPACE_ID::FieldMask(*from._impl_.update_mask_);
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.UpdateCharacterAdvancedSettingsRequest)
}

inline void UpdateCharacterAdvancedSettingsRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.character_advanced_settings_){nullptr}
    , decltype(_impl_.update_mask_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UpdateCharacterAdvancedSettingsRequest::~UpdateCharacterAdvancedSettingsRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.UpdateCharacterAdvancedSettingsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateCharacterAdvancedSettingsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.character_advanced_settings_;
  if (this != internal_default_instance()) delete _impl_.update_mask_;
}

void UpdateCharacterAdvancedSettingsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UpdateCharacterAdvancedSettingsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.UpdateCharacterAdvancedSettingsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.character_advanced_settings_ != nullptr) {
    delete _impl_.character_advanced_settings_;
  }
  _impl_.character_advanced_settings_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.update_mask_ != nullptr) {
    delete _impl_.update_mask_;
  }
  _impl_.update_mask_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateCharacterAdvancedSettingsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .ai.inworld.studio.v1alpha.CharacterAdvancedSettings character_advanced_settings = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_character_advanced_settings(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_update_mask(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateCharacterAdvancedSettingsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.UpdateCharacterAdvancedSettingsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .ai.inworld.studio.v1alpha.CharacterAdvancedSettings character_advanced_settings = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_character_advanced_settings()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::character_advanced_settings(this),
        _Internal::character_advanced_settings(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_update_mask()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::update_mask(this),
        _Internal::update_mask(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.UpdateCharacterAdvancedSettingsRequest)
  return target;
}

size_t UpdateCharacterAdvancedSettingsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.UpdateCharacterAdvancedSettingsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ai.inworld.studio.v1alpha.CharacterAdvancedSettings character_advanced_settings = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_character_advanced_settings()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.character_advanced_settings_);
  }

  // .google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_update_mask()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.update_mask_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateCharacterAdvancedSettingsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UpdateCharacterAdvancedSettingsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateCharacterAdvancedSettingsRequest::GetClassData() const { return &_class_data_; }


void UpdateCharacterAdvancedSettingsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UpdateCharacterAdvancedSettingsRequest*>(&to_msg);
  auto& from = static_cast<const UpdateCharacterAdvancedSettingsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.UpdateCharacterAdvancedSettingsRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_character_advanced_settings()) {
    _this->_internal_mutable_character_advanced_settings()->::ai::inworld::studio::v1alpha::CharacterAdvancedSettings::MergeFrom(
        from._internal_character_advanced_settings());
  }
  if (from._internal_has_update_mask()) {
    _this->_internal_mutable_update_mask()->::PROTOBUF_NAMESPACE_ID::FieldMask::MergeFrom(
        from._internal_update_mask());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateCharacterAdvancedSettingsRequest::CopyFrom(const UpdateCharacterAdvancedSettingsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.UpdateCharacterAdvancedSettingsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateCharacterAdvancedSettingsRequest::IsInitialized() const {
  return true;
}

void UpdateCharacterAdvancedSettingsRequest::InternalSwap(UpdateCharacterAdvancedSettingsRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateCharacterAdvancedSettingsRequest, _impl_.update_mask_)
      + sizeof(UpdateCharacterAdvancedSettingsRequest::_impl_.update_mask_)
      - PROTOBUF_FIELD_OFFSET(UpdateCharacterAdvancedSettingsRequest, _impl_.character_advanced_settings_)>(
          reinterpret_cast<char*>(&_impl_.character_advanced_settings_),
          reinterpret_cast<char*>(&other->_impl_.character_advanced_settings_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateCharacterAdvancedSettingsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto[17]);
}

// ===================================================================

class ListCharactersRequest::_Internal {
 public:
};

ListCharactersRequest::ListCharactersRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.ListCharactersRequest)
}
ListCharactersRequest::ListCharactersRequest(const ListCharactersRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ListCharactersRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.parent_){}
    , decltype(_impl_.page_token_){}
    , decltype(_impl_.filter_){}
    , decltype(_impl_.page_size_){}
    , decltype(_impl_.view_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.parent_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.parent_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_parent().empty()) {
    _this->_impl_.parent_.Set(from._internal_parent(), 
      _this->GetArenaForAllocation());
  }
  _impl_.page_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.page_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_page_token().empty()) {
    _this->_impl_.page_token_.Set(from._internal_page_token(), 
      _this->GetArenaForAllocation());
  }
  _impl_.filter_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.filter_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_filter().empty()) {
    _this->_impl_.filter_.Set(from._internal_filter(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.page_size_, &from._impl_.page_size_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.view_) -
    reinterpret_cast<char*>(&_impl_.page_size_)) + sizeof(_impl_.view_));
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.ListCharactersRequest)
}

inline void ListCharactersRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.parent_){}
    , decltype(_impl_.page_token_){}
    , decltype(_impl_.filter_){}
    , decltype(_impl_.page_size_){0}
    , decltype(_impl_.view_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.parent_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.parent_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.page_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.page_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.filter_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.filter_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ListCharactersRequest::~ListCharactersRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.ListCharactersRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListCharactersRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.parent_.Destroy();
  _impl_.page_token_.Destroy();
  _impl_.filter_.Destroy();
}

void ListCharactersRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ListCharactersRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.ListCharactersRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.parent_.ClearToEmpty();
  _impl_.page_token_.ClearToEmpty();
  _impl_.filter_.ClearToEmpty();
  ::memset(&_impl_.page_size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.view_) -
      reinterpret_cast<char*>(&_impl_.page_size_)) + sizeof(_impl_.view_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListCharactersRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_parent();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.ListCharactersRequest.parent"));
        } else
          goto handle_unusual;
        continue;
      // int32 page_size = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.page_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string page_token = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_page_token();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.ListCharactersRequest.page_token"));
        } else
          goto handle_unusual;
        continue;
      // .ai.inworld.studio.v1alpha.CharacterView view = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_view(static_cast<::ai::inworld::studio::v1alpha::CharacterView>(val));
        } else
          goto handle_unusual;
        continue;
      // string filter = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_filter();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.ListCharactersRequest.filter"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListCharactersRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.ListCharactersRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent().data(), static_cast<int>(this->_internal_parent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.ListCharactersRequest.parent");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_parent(), target);
  }

  // int32 page_size = 2;
  if (this->_internal_page_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_page_size(), target);
  }

  // string page_token = 3;
  if (!this->_internal_page_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_page_token().data(), static_cast<int>(this->_internal_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.ListCharactersRequest.page_token");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_page_token(), target);
  }

  // .ai.inworld.studio.v1alpha.CharacterView view = 4;
  if (this->_internal_view() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      4, this->_internal_view(), target);
  }

  // string filter = 5;
  if (!this->_internal_filter().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_filter().data(), static_cast<int>(this->_internal_filter().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.ListCharactersRequest.filter");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_filter(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.ListCharactersRequest)
  return target;
}

size_t ListCharactersRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.ListCharactersRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent());
  }

  // string page_token = 3;
  if (!this->_internal_page_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_page_token());
  }

  // string filter = 5;
  if (!this->_internal_filter().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_filter());
  }

  // int32 page_size = 2;
  if (this->_internal_page_size() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_page_size());
  }

  // .ai.inworld.studio.v1alpha.CharacterView view = 4;
  if (this->_internal_view() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_view());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListCharactersRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ListCharactersRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListCharactersRequest::GetClassData() const { return &_class_data_; }


void ListCharactersRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ListCharactersRequest*>(&to_msg);
  auto& from = static_cast<const ListCharactersRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.ListCharactersRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_parent().empty()) {
    _this->_internal_set_parent(from._internal_parent());
  }
  if (!from._internal_page_token().empty()) {
    _this->_internal_set_page_token(from._internal_page_token());
  }
  if (!from._internal_filter().empty()) {
    _this->_internal_set_filter(from._internal_filter());
  }
  if (from._internal_page_size() != 0) {
    _this->_internal_set_page_size(from._internal_page_size());
  }
  if (from._internal_view() != 0) {
    _this->_internal_set_view(from._internal_view());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListCharactersRequest::CopyFrom(const ListCharactersRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.ListCharactersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListCharactersRequest::IsInitialized() const {
  return true;
}

void ListCharactersRequest::InternalSwap(ListCharactersRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.parent_, lhs_arena,
      &other->_impl_.parent_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.page_token_, lhs_arena,
      &other->_impl_.page_token_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.filter_, lhs_arena,
      &other->_impl_.filter_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ListCharactersRequest, _impl_.view_)
      + sizeof(ListCharactersRequest::_impl_.view_)
      - PROTOBUF_FIELD_OFFSET(ListCharactersRequest, _impl_.page_size_)>(
          reinterpret_cast<char*>(&_impl_.page_size_),
          reinterpret_cast<char*>(&other->_impl_.page_size_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ListCharactersRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto[18]);
}

// ===================================================================

class CreateCharacterRequest::_Internal {
 public:
  static const ::ai::inworld::studio::v1alpha::Character& character(const CreateCharacterRequest* msg);
};

const ::ai::inworld::studio::v1alpha::Character&
CreateCharacterRequest::_Internal::character(const CreateCharacterRequest* msg) {
  return *msg->_impl_.character_;
}
CreateCharacterRequest::CreateCharacterRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.CreateCharacterRequest)
}
CreateCharacterRequest::CreateCharacterRequest(const CreateCharacterRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CreateCharacterRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.parent_){}
    , decltype(_impl_.character_){nullptr}
    , decltype(_impl_.skip_auto_create_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.parent_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.parent_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_parent().empty()) {
    _this->_impl_.parent_.Set(from._internal_parent(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_character()) {
    _this->_impl_.character_ = new ::ai::inworld::studio::v1alpha::Character(*from._impl_.character_);
  }
  _this->_impl_.skip_auto_create_ = from._impl_.skip_auto_create_;
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.CreateCharacterRequest)
}

inline void CreateCharacterRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.parent_){}
    , decltype(_impl_.character_){nullptr}
    , decltype(_impl_.skip_auto_create_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.parent_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.parent_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CreateCharacterRequest::~CreateCharacterRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.CreateCharacterRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateCharacterRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.parent_.Destroy();
  if (this != internal_default_instance()) delete _impl_.character_;
}

void CreateCharacterRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CreateCharacterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.CreateCharacterRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.parent_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.character_ != nullptr) {
    delete _impl_.character_;
  }
  _impl_.character_ = nullptr;
  _impl_.skip_auto_create_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateCharacterRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_parent();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.CreateCharacterRequest.parent"));
        } else
          goto handle_unusual;
        continue;
      // .ai.inworld.studio.v1alpha.Character character = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_character(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool skip_auto_create = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.skip_auto_create_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateCharacterRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.CreateCharacterRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent().data(), static_cast<int>(this->_internal_parent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.CreateCharacterRequest.parent");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_parent(), target);
  }

  // .ai.inworld.studio.v1alpha.Character character = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_character()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::character(this),
        _Internal::character(this).GetCachedSize(), target, stream);
  }

  // bool skip_auto_create = 3;
  if (this->_internal_skip_auto_create() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_skip_auto_create(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.CreateCharacterRequest)
  return target;
}

size_t CreateCharacterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.CreateCharacterRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent());
  }

  // .ai.inworld.studio.v1alpha.Character character = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_character()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.character_);
  }

  // bool skip_auto_create = 3;
  if (this->_internal_skip_auto_create() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateCharacterRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CreateCharacterRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateCharacterRequest::GetClassData() const { return &_class_data_; }


void CreateCharacterRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CreateCharacterRequest*>(&to_msg);
  auto& from = static_cast<const CreateCharacterRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.CreateCharacterRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_parent().empty()) {
    _this->_internal_set_parent(from._internal_parent());
  }
  if (from._internal_has_character()) {
    _this->_internal_mutable_character()->::ai::inworld::studio::v1alpha::Character::MergeFrom(
        from._internal_character());
  }
  if (from._internal_skip_auto_create() != 0) {
    _this->_internal_set_skip_auto_create(from._internal_skip_auto_create());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateCharacterRequest::CopyFrom(const CreateCharacterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.CreateCharacterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateCharacterRequest::IsInitialized() const {
  return true;
}

void CreateCharacterRequest::InternalSwap(CreateCharacterRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.parent_, lhs_arena,
      &other->_impl_.parent_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreateCharacterRequest, _impl_.skip_auto_create_)
      + sizeof(CreateCharacterRequest::_impl_.skip_auto_create_)
      - PROTOBUF_FIELD_OFFSET(CreateCharacterRequest, _impl_.character_)>(
          reinterpret_cast<char*>(&_impl_.character_),
          reinterpret_cast<char*>(&other->_impl_.character_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateCharacterRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto[19]);
}

// ===================================================================

class UpdateCharacterRequest::_Internal {
 public:
  static const ::ai::inworld::studio::v1alpha::Character& character(const UpdateCharacterRequest* msg);
  static const ::PROTOBUF_NAMESPACE_ID::FieldMask& update_mask(const UpdateCharacterRequest* msg);
};

const ::ai::inworld::studio::v1alpha::Character&
UpdateCharacterRequest::_Internal::character(const UpdateCharacterRequest* msg) {
  return *msg->_impl_.character_;
}
const ::PROTOBUF_NAMESPACE_ID::FieldMask&
UpdateCharacterRequest::_Internal::update_mask(const UpdateCharacterRequest* msg) {
  return *msg->_impl_.update_mask_;
}
void UpdateCharacterRequest::clear_update_mask() {
  if (GetArenaForAllocation() == nullptr && _impl_.update_mask_ != nullptr) {
    delete _impl_.update_mask_;
  }
  _impl_.update_mask_ = nullptr;
}
UpdateCharacterRequest::UpdateCharacterRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.UpdateCharacterRequest)
}
UpdateCharacterRequest::UpdateCharacterRequest(const UpdateCharacterRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UpdateCharacterRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.character_){nullptr}
    , decltype(_impl_.update_mask_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_character()) {
    _this->_impl_.character_ = new ::ai::inworld::studio::v1alpha::Character(*from._impl_.character_);
  }
  if (from._internal_has_update_mask()) {
    _this->_impl_.update_mask_ = new ::PROTOBUF_NAMESPACE_ID::FieldMask(*from._impl_.update_mask_);
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.UpdateCharacterRequest)
}

inline void UpdateCharacterRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.character_){nullptr}
    , decltype(_impl_.update_mask_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UpdateCharacterRequest::~UpdateCharacterRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.UpdateCharacterRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateCharacterRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.character_;
  if (this != internal_default_instance()) delete _impl_.update_mask_;
}

void UpdateCharacterRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UpdateCharacterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.UpdateCharacterRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.character_ != nullptr) {
    delete _impl_.character_;
  }
  _impl_.character_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.update_mask_ != nullptr) {
    delete _impl_.update_mask_;
  }
  _impl_.update_mask_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateCharacterRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .ai.inworld.studio.v1alpha.Character character = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_character(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = REQUIRED];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_update_mask(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateCharacterRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.UpdateCharacterRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .ai.inworld.studio.v1alpha.Character character = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_character()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::character(this),
        _Internal::character(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_update_mask()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::update_mask(this),
        _Internal::update_mask(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.UpdateCharacterRequest)
  return target;
}

size_t UpdateCharacterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.UpdateCharacterRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ai.inworld.studio.v1alpha.Character character = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_character()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.character_);
  }

  // .google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_has_update_mask()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.update_mask_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateCharacterRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UpdateCharacterRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateCharacterRequest::GetClassData() const { return &_class_data_; }


void UpdateCharacterRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UpdateCharacterRequest*>(&to_msg);
  auto& from = static_cast<const UpdateCharacterRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.UpdateCharacterRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_character()) {
    _this->_internal_mutable_character()->::ai::inworld::studio::v1alpha::Character::MergeFrom(
        from._internal_character());
  }
  if (from._internal_has_update_mask()) {
    _this->_internal_mutable_update_mask()->::PROTOBUF_NAMESPACE_ID::FieldMask::MergeFrom(
        from._internal_update_mask());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateCharacterRequest::CopyFrom(const UpdateCharacterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.UpdateCharacterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateCharacterRequest::IsInitialized() const {
  return true;
}

void UpdateCharacterRequest::InternalSwap(UpdateCharacterRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateCharacterRequest, _impl_.update_mask_)
      + sizeof(UpdateCharacterRequest::_impl_.update_mask_)
      - PROTOBUF_FIELD_OFFSET(UpdateCharacterRequest, _impl_.character_)>(
          reinterpret_cast<char*>(&_impl_.character_),
          reinterpret_cast<char*>(&other->_impl_.character_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateCharacterRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto[20]);
}

// ===================================================================

class DeleteCharacterRequest::_Internal {
 public:
};

DeleteCharacterRequest::DeleteCharacterRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.DeleteCharacterRequest)
}
DeleteCharacterRequest::DeleteCharacterRequest(const DeleteCharacterRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeleteCharacterRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.DeleteCharacterRequest)
}

inline void DeleteCharacterRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteCharacterRequest::~DeleteCharacterRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.DeleteCharacterRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteCharacterRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void DeleteCharacterRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeleteCharacterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.DeleteCharacterRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteCharacterRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.DeleteCharacterRequest.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteCharacterRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.DeleteCharacterRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.DeleteCharacterRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.DeleteCharacterRequest)
  return target;
}

size_t DeleteCharacterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.DeleteCharacterRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteCharacterRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeleteCharacterRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteCharacterRequest::GetClassData() const { return &_class_data_; }


void DeleteCharacterRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeleteCharacterRequest*>(&to_msg);
  auto& from = static_cast<const DeleteCharacterRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.DeleteCharacterRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteCharacterRequest::CopyFrom(const DeleteCharacterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.DeleteCharacterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteCharacterRequest::IsInitialized() const {
  return true;
}

void DeleteCharacterRequest::InternalSwap(DeleteCharacterRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteCharacterRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto[21]);
}

// ===================================================================

class DeployCharacterRequest::_Internal {
 public:
};

DeployCharacterRequest::DeployCharacterRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.DeployCharacterRequest)
}
DeployCharacterRequest::DeployCharacterRequest(const DeployCharacterRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeployCharacterRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.DeployCharacterRequest)
}

inline void DeployCharacterRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeployCharacterRequest::~DeployCharacterRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.DeployCharacterRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeployCharacterRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void DeployCharacterRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeployCharacterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.DeployCharacterRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeployCharacterRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.DeployCharacterRequest.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeployCharacterRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.DeployCharacterRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.DeployCharacterRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.DeployCharacterRequest)
  return target;
}

size_t DeployCharacterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.DeployCharacterRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeployCharacterRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeployCharacterRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeployCharacterRequest::GetClassData() const { return &_class_data_; }


void DeployCharacterRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeployCharacterRequest*>(&to_msg);
  auto& from = static_cast<const DeployCharacterRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.DeployCharacterRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeployCharacterRequest::CopyFrom(const DeployCharacterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.DeployCharacterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeployCharacterRequest::IsInitialized() const {
  return true;
}

void DeployCharacterRequest::InternalSwap(DeployCharacterRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeployCharacterRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto[22]);
}

// ===================================================================

class CloneCharacterRequest::_Internal {
 public:
};

CloneCharacterRequest::CloneCharacterRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.CloneCharacterRequest)
}
CloneCharacterRequest::CloneCharacterRequest(const CloneCharacterRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CloneCharacterRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.workspace_){}
    , decltype(_impl_.new_name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.workspace_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.workspace_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_workspace().empty()) {
    _this->_impl_.workspace_.Set(from._internal_workspace(), 
      _this->GetArenaForAllocation());
  }
  _impl_.new_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.new_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_new_name().empty()) {
    _this->_impl_.new_name_.Set(from._internal_new_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.CloneCharacterRequest)
}

inline void CloneCharacterRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.workspace_){}
    , decltype(_impl_.new_name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.workspace_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.workspace_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.new_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.new_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CloneCharacterRequest::~CloneCharacterRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.CloneCharacterRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CloneCharacterRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.workspace_.Destroy();
  _impl_.new_name_.Destroy();
}

void CloneCharacterRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CloneCharacterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.CloneCharacterRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.workspace_.ClearToEmpty();
  _impl_.new_name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CloneCharacterRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.CloneCharacterRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // string workspace = 2 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_workspace();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.CloneCharacterRequest.workspace"));
        } else
          goto handle_unusual;
        continue;
      // string new_name = 3 [(.google.api.field_behavior) = REQUIRED];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_new_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.CloneCharacterRequest.new_name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CloneCharacterRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.CloneCharacterRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.CloneCharacterRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string workspace = 2 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_workspace().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_workspace().data(), static_cast<int>(this->_internal_workspace().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.CloneCharacterRequest.workspace");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_workspace(), target);
  }

  // string new_name = 3 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_new_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_new_name().data(), static_cast<int>(this->_internal_new_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.CloneCharacterRequest.new_name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_new_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.CloneCharacterRequest)
  return target;
}

size_t CloneCharacterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.CloneCharacterRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string workspace = 2 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_workspace().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_workspace());
  }

  // string new_name = 3 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_new_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_new_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CloneCharacterRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CloneCharacterRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CloneCharacterRequest::GetClassData() const { return &_class_data_; }


void CloneCharacterRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CloneCharacterRequest*>(&to_msg);
  auto& from = static_cast<const CloneCharacterRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.CloneCharacterRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_workspace().empty()) {
    _this->_internal_set_workspace(from._internal_workspace());
  }
  if (!from._internal_new_name().empty()) {
    _this->_internal_set_new_name(from._internal_new_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CloneCharacterRequest::CopyFrom(const CloneCharacterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.CloneCharacterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CloneCharacterRequest::IsInitialized() const {
  return true;
}

void CloneCharacterRequest::InternalSwap(CloneCharacterRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.workspace_, lhs_arena,
      &other->_impl_.workspace_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.new_name_, lhs_arena,
      &other->_impl_.new_name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CloneCharacterRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto[23]);
}

// ===================================================================

class ListCharactersResponse::_Internal {
 public:
};

ListCharactersResponse::ListCharactersResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.ListCharactersResponse)
}
ListCharactersResponse::ListCharactersResponse(const ListCharactersResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ListCharactersResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.characters_){from._impl_.characters_}
    , decltype(_impl_.next_page_token_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.next_page_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.next_page_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_next_page_token().empty()) {
    _this->_impl_.next_page_token_.Set(from._internal_next_page_token(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.ListCharactersResponse)
}

inline void ListCharactersResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.characters_){arena}
    , decltype(_impl_.next_page_token_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.next_page_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.next_page_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ListCharactersResponse::~ListCharactersResponse() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.ListCharactersResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListCharactersResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.characters_.~RepeatedPtrField();
  _impl_.next_page_token_.Destroy();
}

void ListCharactersResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ListCharactersResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.ListCharactersResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.characters_.Clear();
  _impl_.next_page_token_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListCharactersResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .ai.inworld.studio.v1alpha.Character characters = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_characters(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string next_page_token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_next_page_token();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.ListCharactersResponse.next_page_token"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListCharactersResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.ListCharactersResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ai.inworld.studio.v1alpha.Character characters = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_characters_size()); i < n; i++) {
    const auto& repfield = this->_internal_characters(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string next_page_token = 2;
  if (!this->_internal_next_page_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_next_page_token().data(), static_cast<int>(this->_internal_next_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.ListCharactersResponse.next_page_token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_next_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.ListCharactersResponse)
  return target;
}

size_t ListCharactersResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.ListCharactersResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ai.inworld.studio.v1alpha.Character characters = 1;
  total_size += 1UL * this->_internal_characters_size();
  for (const auto& msg : this->_impl_.characters_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string next_page_token = 2;
  if (!this->_internal_next_page_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_next_page_token());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListCharactersResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ListCharactersResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListCharactersResponse::GetClassData() const { return &_class_data_; }


void ListCharactersResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ListCharactersResponse*>(&to_msg);
  auto& from = static_cast<const ListCharactersResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.ListCharactersResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.characters_.MergeFrom(from._impl_.characters_);
  if (!from._internal_next_page_token().empty()) {
    _this->_internal_set_next_page_token(from._internal_next_page_token());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListCharactersResponse::CopyFrom(const ListCharactersResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.ListCharactersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListCharactersResponse::IsInitialized() const {
  return true;
}

void ListCharactersResponse::InternalSwap(ListCharactersResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.characters_.InternalSwap(&other->_impl_.characters_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.next_page_token_, lhs_arena,
      &other->_impl_.next_page_token_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ListCharactersResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto[24]);
}

// ===================================================================

class ReplaceCharacterRpmModelRequest::_Internal {
 public:
};

ReplaceCharacterRpmModelRequest::ReplaceCharacterRpmModelRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.ReplaceCharacterRpmModelRequest)
}
ReplaceCharacterRpmModelRequest::ReplaceCharacterRpmModelRequest(const ReplaceCharacterRpmModelRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ReplaceCharacterRpmModelRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.character_){}
    , decltype(_impl_.rpm_model_uri_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.character_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.character_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_character().empty()) {
    _this->_impl_.character_.Set(from._internal_character(), 
      _this->GetArenaForAllocation());
  }
  _impl_.rpm_model_uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.rpm_model_uri_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_rpm_model_uri().empty()) {
    _this->_impl_.rpm_model_uri_.Set(from._internal_rpm_model_uri(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.ReplaceCharacterRpmModelRequest)
}

inline void ReplaceCharacterRpmModelRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.character_){}
    , decltype(_impl_.rpm_model_uri_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.character_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.character_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.rpm_model_uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.rpm_model_uri_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ReplaceCharacterRpmModelRequest::~ReplaceCharacterRpmModelRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.ReplaceCharacterRpmModelRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ReplaceCharacterRpmModelRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.character_.Destroy();
  _impl_.rpm_model_uri_.Destroy();
}

void ReplaceCharacterRpmModelRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ReplaceCharacterRpmModelRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.ReplaceCharacterRpmModelRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.character_.ClearToEmpty();
  _impl_.rpm_model_uri_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReplaceCharacterRpmModelRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string character = 1 [(.ai.inworld.options.examples) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_character();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.ReplaceCharacterRpmModelRequest.character"));
        } else
          goto handle_unusual;
        continue;
      // string rpm_model_uri = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_rpm_model_uri();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.ReplaceCharacterRpmModelRequest.rpm_model_uri"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReplaceCharacterRpmModelRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.ReplaceCharacterRpmModelRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string character = 1 [(.ai.inworld.options.examples) = {
  if (!this->_internal_character().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_character().data(), static_cast<int>(this->_internal_character().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.ReplaceCharacterRpmModelRequest.character");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_character(), target);
  }

  // string rpm_model_uri = 2;
  if (!this->_internal_rpm_model_uri().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rpm_model_uri().data(), static_cast<int>(this->_internal_rpm_model_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.ReplaceCharacterRpmModelRequest.rpm_model_uri");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rpm_model_uri(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.ReplaceCharacterRpmModelRequest)
  return target;
}

size_t ReplaceCharacterRpmModelRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.ReplaceCharacterRpmModelRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string character = 1 [(.ai.inworld.options.examples) = {
  if (!this->_internal_character().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_character());
  }

  // string rpm_model_uri = 2;
  if (!this->_internal_rpm_model_uri().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rpm_model_uri());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReplaceCharacterRpmModelRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ReplaceCharacterRpmModelRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReplaceCharacterRpmModelRequest::GetClassData() const { return &_class_data_; }


void ReplaceCharacterRpmModelRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ReplaceCharacterRpmModelRequest*>(&to_msg);
  auto& from = static_cast<const ReplaceCharacterRpmModelRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.ReplaceCharacterRpmModelRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_character().empty()) {
    _this->_internal_set_character(from._internal_character());
  }
  if (!from._internal_rpm_model_uri().empty()) {
    _this->_internal_set_rpm_model_uri(from._internal_rpm_model_uri());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReplaceCharacterRpmModelRequest::CopyFrom(const ReplaceCharacterRpmModelRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.ReplaceCharacterRpmModelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReplaceCharacterRpmModelRequest::IsInitialized() const {
  return true;
}

void ReplaceCharacterRpmModelRequest::InternalSwap(ReplaceCharacterRpmModelRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.character_, lhs_arena,
      &other->_impl_.character_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.rpm_model_uri_, lhs_arena,
      &other->_impl_.rpm_model_uri_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ReplaceCharacterRpmModelRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto[25]);
}

// ===================================================================

class ReplaceCharacterImageRequest::_Internal {
 public:
};

ReplaceCharacterImageRequest::ReplaceCharacterImageRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.ReplaceCharacterImageRequest)
}
ReplaceCharacterImageRequest::ReplaceCharacterImageRequest(const ReplaceCharacterImageRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ReplaceCharacterImageRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.character_){}
    , decltype(_impl_.content_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.character_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.character_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_character().empty()) {
    _this->_impl_.character_.Set(from._internal_character(), 
      _this->GetArenaForAllocation());
  }
  _impl_.content_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.content_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_content().empty()) {
    _this->_impl_.content_.Set(from._internal_content(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.ReplaceCharacterImageRequest)
}

inline void ReplaceCharacterImageRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.character_){}
    , decltype(_impl_.content_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.character_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.character_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.content_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.content_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ReplaceCharacterImageRequest::~ReplaceCharacterImageRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.ReplaceCharacterImageRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ReplaceCharacterImageRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.character_.Destroy();
  _impl_.content_.Destroy();
}

void ReplaceCharacterImageRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ReplaceCharacterImageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.ReplaceCharacterImageRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.character_.ClearToEmpty();
  _impl_.content_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReplaceCharacterImageRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string character = 1 [(.ai.inworld.options.examples) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_character();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.ReplaceCharacterImageRequest.character"));
        } else
          goto handle_unusual;
        continue;
      // bytes content = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_content();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReplaceCharacterImageRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.ReplaceCharacterImageRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string character = 1 [(.ai.inworld.options.examples) = {
  if (!this->_internal_character().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_character().data(), static_cast<int>(this->_internal_character().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.ReplaceCharacterImageRequest.character");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_character(), target);
  }

  // bytes content = 2;
  if (!this->_internal_content().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_content(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.ReplaceCharacterImageRequest)
  return target;
}

size_t ReplaceCharacterImageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.ReplaceCharacterImageRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string character = 1 [(.ai.inworld.options.examples) = {
  if (!this->_internal_character().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_character());
  }

  // bytes content = 2;
  if (!this->_internal_content().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_content());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReplaceCharacterImageRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ReplaceCharacterImageRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReplaceCharacterImageRequest::GetClassData() const { return &_class_data_; }


void ReplaceCharacterImageRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ReplaceCharacterImageRequest*>(&to_msg);
  auto& from = static_cast<const ReplaceCharacterImageRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.ReplaceCharacterImageRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_character().empty()) {
    _this->_internal_set_character(from._internal_character());
  }
  if (!from._internal_content().empty()) {
    _this->_internal_set_content(from._internal_content());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReplaceCharacterImageRequest::CopyFrom(const ReplaceCharacterImageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.ReplaceCharacterImageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReplaceCharacterImageRequest::IsInitialized() const {
  return true;
}

void ReplaceCharacterImageRequest::InternalSwap(ReplaceCharacterImageRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.character_, lhs_arena,
      &other->_impl_.character_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.content_, lhs_arena,
      &other->_impl_.content_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ReplaceCharacterImageRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto[26]);
}

// ===================================================================

class PreviewPromptTemplateRequest::_Internal {
 public:
};

PreviewPromptTemplateRequest::PreviewPromptTemplateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.PreviewPromptTemplateRequest)
}
PreviewPromptTemplateRequest::PreviewPromptTemplateRequest(const PreviewPromptTemplateRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PreviewPromptTemplateRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.character_){}
    , decltype(_impl_.template__){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.character_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.character_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_character().empty()) {
    _this->_impl_.character_.Set(from._internal_character(), 
      _this->GetArenaForAllocation());
  }
  _impl_.template__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.template__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_template_().empty()) {
    _this->_impl_.template__.Set(from._internal_template_(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.PreviewPromptTemplateRequest)
}

inline void PreviewPromptTemplateRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.character_){}
    , decltype(_impl_.template__){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.character_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.character_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.template__.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.template__.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

PreviewPromptTemplateRequest::~PreviewPromptTemplateRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.PreviewPromptTemplateRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PreviewPromptTemplateRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.character_.Destroy();
  _impl_.template__.Destroy();
}

void PreviewPromptTemplateRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PreviewPromptTemplateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.PreviewPromptTemplateRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.character_.ClearToEmpty();
  _impl_.template__.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PreviewPromptTemplateRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string character = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_character();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.PreviewPromptTemplateRequest.character"));
        } else
          goto handle_unusual;
        continue;
      // string template = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_template_();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.PreviewPromptTemplateRequest.template"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PreviewPromptTemplateRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.PreviewPromptTemplateRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string character = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_character().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_character().data(), static_cast<int>(this->_internal_character().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.PreviewPromptTemplateRequest.character");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_character(), target);
  }

  // string template = 2;
  if (!this->_internal_template_().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_template_().data(), static_cast<int>(this->_internal_template_().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.PreviewPromptTemplateRequest.template");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_template_(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.PreviewPromptTemplateRequest)
  return target;
}

size_t PreviewPromptTemplateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.PreviewPromptTemplateRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string character = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_character().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_character());
  }

  // string template = 2;
  if (!this->_internal_template_().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_template_());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PreviewPromptTemplateRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PreviewPromptTemplateRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PreviewPromptTemplateRequest::GetClassData() const { return &_class_data_; }


void PreviewPromptTemplateRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PreviewPromptTemplateRequest*>(&to_msg);
  auto& from = static_cast<const PreviewPromptTemplateRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.PreviewPromptTemplateRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_character().empty()) {
    _this->_internal_set_character(from._internal_character());
  }
  if (!from._internal_template_().empty()) {
    _this->_internal_set_template_(from._internal_template_());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PreviewPromptTemplateRequest::CopyFrom(const PreviewPromptTemplateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.PreviewPromptTemplateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PreviewPromptTemplateRequest::IsInitialized() const {
  return true;
}

void PreviewPromptTemplateRequest::InternalSwap(PreviewPromptTemplateRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.character_, lhs_arena,
      &other->_impl_.character_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.template__, lhs_arena,
      &other->_impl_.template__, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata PreviewPromptTemplateRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto[27]);
}

// ===================================================================

class PreviewPromptTempalteResponse::_Internal {
 public:
};

PreviewPromptTempalteResponse::PreviewPromptTempalteResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.PreviewPromptTempalteResponse)
}
PreviewPromptTempalteResponse::PreviewPromptTempalteResponse(const PreviewPromptTempalteResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PreviewPromptTempalteResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.errors_){from._impl_.errors_}
    , decltype(_impl_.prompt_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.prompt_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.prompt_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_prompt().empty()) {
    _this->_impl_.prompt_.Set(from._internal_prompt(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.PreviewPromptTempalteResponse)
}

inline void PreviewPromptTempalteResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.errors_){arena}
    , decltype(_impl_.prompt_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.prompt_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.prompt_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

PreviewPromptTempalteResponse::~PreviewPromptTempalteResponse() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.PreviewPromptTempalteResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PreviewPromptTempalteResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.errors_.~RepeatedPtrField();
  _impl_.prompt_.Destroy();
}

void PreviewPromptTempalteResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PreviewPromptTempalteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.PreviewPromptTempalteResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.errors_.Clear();
  _impl_.prompt_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PreviewPromptTempalteResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string prompt = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_prompt();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.PreviewPromptTempalteResponse.prompt"));
        } else
          goto handle_unusual;
        continue;
      // repeated string errors = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_errors();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.PreviewPromptTempalteResponse.errors"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PreviewPromptTempalteResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.PreviewPromptTempalteResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string prompt = 1;
  if (!this->_internal_prompt().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_prompt().data(), static_cast<int>(this->_internal_prompt().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.PreviewPromptTempalteResponse.prompt");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_prompt(), target);
  }

  // repeated string errors = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
  for (int i = 0, n = this->_internal_errors_size(); i < n; i++) {
    const auto& s = this->_internal_errors(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.PreviewPromptTempalteResponse.errors");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.PreviewPromptTempalteResponse)
  return target;
}

size_t PreviewPromptTempalteResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.PreviewPromptTempalteResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string errors = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.errors_.size());
  for (int i = 0, n = _impl_.errors_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.errors_.Get(i));
  }

  // string prompt = 1;
  if (!this->_internal_prompt().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_prompt());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PreviewPromptTempalteResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PreviewPromptTempalteResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PreviewPromptTempalteResponse::GetClassData() const { return &_class_data_; }


void PreviewPromptTempalteResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PreviewPromptTempalteResponse*>(&to_msg);
  auto& from = static_cast<const PreviewPromptTempalteResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.PreviewPromptTempalteResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.errors_.MergeFrom(from._impl_.errors_);
  if (!from._internal_prompt().empty()) {
    _this->_internal_set_prompt(from._internal_prompt());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PreviewPromptTempalteResponse::CopyFrom(const PreviewPromptTempalteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.PreviewPromptTempalteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PreviewPromptTempalteResponse::IsInitialized() const {
  return true;
}

void PreviewPromptTempalteResponse::InternalSwap(PreviewPromptTempalteResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.errors_.InternalSwap(&other->_impl_.errors_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.prompt_, lhs_arena,
      &other->_impl_.prompt_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata PreviewPromptTempalteResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto[28]);
}

// ===================================================================

class ShareCharacterRequest::_Internal {
 public:
};

ShareCharacterRequest::ShareCharacterRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.ShareCharacterRequest)
}
ShareCharacterRequest::ShareCharacterRequest(const ShareCharacterRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ShareCharacterRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.external_ids_){from._impl_.external_ids_}
    , decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.ShareCharacterRequest)
}

inline void ShareCharacterRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.external_ids_){arena}
    , decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ShareCharacterRequest::~ShareCharacterRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.ShareCharacterRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ShareCharacterRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.external_ids_.~RepeatedPtrField();
  _impl_.name_.Destroy();
}

void ShareCharacterRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ShareCharacterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.ShareCharacterRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.external_ids_.Clear();
  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ShareCharacterRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.ShareCharacterRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // repeated string external_ids = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_external_ids();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.ShareCharacterRequest.external_ids"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ShareCharacterRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.ShareCharacterRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.ShareCharacterRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // repeated string external_ids = 2;
  for (int i = 0, n = this->_internal_external_ids_size(); i < n; i++) {
    const auto& s = this->_internal_external_ids(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.ShareCharacterRequest.external_ids");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.ShareCharacterRequest)
  return target;
}

size_t ShareCharacterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.ShareCharacterRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string external_ids = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.external_ids_.size());
  for (int i = 0, n = _impl_.external_ids_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.external_ids_.Get(i));
  }

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ShareCharacterRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ShareCharacterRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ShareCharacterRequest::GetClassData() const { return &_class_data_; }


void ShareCharacterRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ShareCharacterRequest*>(&to_msg);
  auto& from = static_cast<const ShareCharacterRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.ShareCharacterRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.external_ids_.MergeFrom(from._impl_.external_ids_);
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ShareCharacterRequest::CopyFrom(const ShareCharacterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.ShareCharacterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShareCharacterRequest::IsInitialized() const {
  return true;
}

void ShareCharacterRequest::InternalSwap(ShareCharacterRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.external_ids_.InternalSwap(&other->_impl_.external_ids_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ShareCharacterRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto[29]);
}

// ===================================================================

class ShareCharacterPortalRequest::_Internal {
 public:
};

ShareCharacterPortalRequest::ShareCharacterPortalRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.ShareCharacterPortalRequest)
}
ShareCharacterPortalRequest::ShareCharacterPortalRequest(const ShareCharacterPortalRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ShareCharacterPortalRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.byline_){}
    , decltype(_impl_.prompt_){}
    , decltype(_impl_.allowed_on_showcase_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.byline_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.byline_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_byline().empty()) {
    _this->_impl_.byline_.Set(from._internal_byline(), 
      _this->GetArenaForAllocation());
  }
  _impl_.prompt_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.prompt_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_prompt().empty()) {
    _this->_impl_.prompt_.Set(from._internal_prompt(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.allowed_on_showcase_ = from._impl_.allowed_on_showcase_;
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.ShareCharacterPortalRequest)
}

inline void ShareCharacterPortalRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.byline_){}
    , decltype(_impl_.prompt_){}
    , decltype(_impl_.allowed_on_showcase_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.byline_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.byline_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.prompt_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.prompt_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ShareCharacterPortalRequest::~ShareCharacterPortalRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.ShareCharacterPortalRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ShareCharacterPortalRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.byline_.Destroy();
  _impl_.prompt_.Destroy();
}

void ShareCharacterPortalRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ShareCharacterPortalRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.ShareCharacterPortalRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.byline_.ClearToEmpty();
  _impl_.prompt_.ClearToEmpty();
  _impl_.allowed_on_showcase_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ShareCharacterPortalRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.ShareCharacterPortalRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // string byline = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_byline();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.ShareCharacterPortalRequest.byline"));
        } else
          goto handle_unusual;
        continue;
      // string prompt = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_prompt();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.ShareCharacterPortalRequest.prompt"));
        } else
          goto handle_unusual;
        continue;
      // bool allowed_on_showcase = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.allowed_on_showcase_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ShareCharacterPortalRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.ShareCharacterPortalRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.ShareCharacterPortalRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string byline = 2;
  if (!this->_internal_byline().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_byline().data(), static_cast<int>(this->_internal_byline().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.ShareCharacterPortalRequest.byline");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_byline(), target);
  }

  // string prompt = 3;
  if (!this->_internal_prompt().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_prompt().data(), static_cast<int>(this->_internal_prompt().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.ShareCharacterPortalRequest.prompt");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_prompt(), target);
  }

  // bool allowed_on_showcase = 4;
  if (this->_internal_allowed_on_showcase() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_allowed_on_showcase(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.ShareCharacterPortalRequest)
  return target;
}

size_t ShareCharacterPortalRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.ShareCharacterPortalRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string byline = 2;
  if (!this->_internal_byline().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_byline());
  }

  // string prompt = 3;
  if (!this->_internal_prompt().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_prompt());
  }

  // bool allowed_on_showcase = 4;
  if (this->_internal_allowed_on_showcase() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ShareCharacterPortalRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ShareCharacterPortalRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ShareCharacterPortalRequest::GetClassData() const { return &_class_data_; }


void ShareCharacterPortalRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ShareCharacterPortalRequest*>(&to_msg);
  auto& from = static_cast<const ShareCharacterPortalRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.ShareCharacterPortalRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_byline().empty()) {
    _this->_internal_set_byline(from._internal_byline());
  }
  if (!from._internal_prompt().empty()) {
    _this->_internal_set_prompt(from._internal_prompt());
  }
  if (from._internal_allowed_on_showcase() != 0) {
    _this->_internal_set_allowed_on_showcase(from._internal_allowed_on_showcase());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ShareCharacterPortalRequest::CopyFrom(const ShareCharacterPortalRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.ShareCharacterPortalRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShareCharacterPortalRequest::IsInitialized() const {
  return true;
}

void ShareCharacterPortalRequest::InternalSwap(ShareCharacterPortalRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.byline_, lhs_arena,
      &other->_impl_.byline_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.prompt_, lhs_arena,
      &other->_impl_.prompt_, rhs_arena
  );
  swap(_impl_.allowed_on_showcase_, other->_impl_.allowed_on_showcase_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ShareCharacterPortalRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto[30]);
}

// ===================================================================

class UnshareCharacterPortalRequest::_Internal {
 public:
};

UnshareCharacterPortalRequest::UnshareCharacterPortalRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.UnshareCharacterPortalRequest)
}
UnshareCharacterPortalRequest::UnshareCharacterPortalRequest(const UnshareCharacterPortalRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UnshareCharacterPortalRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.UnshareCharacterPortalRequest)
}

inline void UnshareCharacterPortalRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UnshareCharacterPortalRequest::~UnshareCharacterPortalRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.UnshareCharacterPortalRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UnshareCharacterPortalRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void UnshareCharacterPortalRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UnshareCharacterPortalRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.UnshareCharacterPortalRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnshareCharacterPortalRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.UnshareCharacterPortalRequest.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UnshareCharacterPortalRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.UnshareCharacterPortalRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.UnshareCharacterPortalRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.UnshareCharacterPortalRequest)
  return target;
}

size_t UnshareCharacterPortalRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.UnshareCharacterPortalRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UnshareCharacterPortalRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UnshareCharacterPortalRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UnshareCharacterPortalRequest::GetClassData() const { return &_class_data_; }


void UnshareCharacterPortalRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UnshareCharacterPortalRequest*>(&to_msg);
  auto& from = static_cast<const UnshareCharacterPortalRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.UnshareCharacterPortalRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UnshareCharacterPortalRequest::CopyFrom(const UnshareCharacterPortalRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.UnshareCharacterPortalRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnshareCharacterPortalRequest::IsInitialized() const {
  return true;
}

void UnshareCharacterPortalRequest::InternalSwap(UnshareCharacterPortalRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata UnshareCharacterPortalRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto[31]);
}

// ===================================================================

class ListSharedCharactersRequest::_Internal {
 public:
};

ListSharedCharactersRequest::ListSharedCharactersRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.ListSharedCharactersRequest)
}
ListSharedCharactersRequest::ListSharedCharactersRequest(const ListSharedCharactersRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ListSharedCharactersRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.parent_){}
    , decltype(_impl_.page_token_){}
    , decltype(_impl_.page_size_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.parent_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.parent_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_parent().empty()) {
    _this->_impl_.parent_.Set(from._internal_parent(), 
      _this->GetArenaForAllocation());
  }
  _impl_.page_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.page_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_page_token().empty()) {
    _this->_impl_.page_token_.Set(from._internal_page_token(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.page_size_ = from._impl_.page_size_;
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.ListSharedCharactersRequest)
}

inline void ListSharedCharactersRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.parent_){}
    , decltype(_impl_.page_token_){}
    , decltype(_impl_.page_size_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.parent_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.parent_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.page_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.page_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ListSharedCharactersRequest::~ListSharedCharactersRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.ListSharedCharactersRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListSharedCharactersRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.parent_.Destroy();
  _impl_.page_token_.Destroy();
}

void ListSharedCharactersRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ListSharedCharactersRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.ListSharedCharactersRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.parent_.ClearToEmpty();
  _impl_.page_token_.ClearToEmpty();
  _impl_.page_size_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListSharedCharactersRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_parent();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.ListSharedCharactersRequest.parent"));
        } else
          goto handle_unusual;
        continue;
      // int32 page_size = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.page_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string page_token = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_page_token();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.ListSharedCharactersRequest.page_token"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListSharedCharactersRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.ListSharedCharactersRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent().data(), static_cast<int>(this->_internal_parent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.ListSharedCharactersRequest.parent");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_parent(), target);
  }

  // int32 page_size = 2;
  if (this->_internal_page_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_page_size(), target);
  }

  // string page_token = 3;
  if (!this->_internal_page_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_page_token().data(), static_cast<int>(this->_internal_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.ListSharedCharactersRequest.page_token");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.ListSharedCharactersRequest)
  return target;
}

size_t ListSharedCharactersRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.ListSharedCharactersRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent());
  }

  // string page_token = 3;
  if (!this->_internal_page_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_page_token());
  }

  // int32 page_size = 2;
  if (this->_internal_page_size() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_page_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListSharedCharactersRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ListSharedCharactersRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListSharedCharactersRequest::GetClassData() const { return &_class_data_; }


void ListSharedCharactersRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ListSharedCharactersRequest*>(&to_msg);
  auto& from = static_cast<const ListSharedCharactersRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.ListSharedCharactersRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_parent().empty()) {
    _this->_internal_set_parent(from._internal_parent());
  }
  if (!from._internal_page_token().empty()) {
    _this->_internal_set_page_token(from._internal_page_token());
  }
  if (from._internal_page_size() != 0) {
    _this->_internal_set_page_size(from._internal_page_size());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListSharedCharactersRequest::CopyFrom(const ListSharedCharactersRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.ListSharedCharactersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSharedCharactersRequest::IsInitialized() const {
  return true;
}

void ListSharedCharactersRequest::InternalSwap(ListSharedCharactersRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.parent_, lhs_arena,
      &other->_impl_.parent_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.page_token_, lhs_arena,
      &other->_impl_.page_token_, rhs_arena
  );
  swap(_impl_.page_size_, other->_impl_.page_size_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListSharedCharactersRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto[32]);
}

// ===================================================================

class ListSharedCharactersResponse::_Internal {
 public:
};

ListSharedCharactersResponse::ListSharedCharactersResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.ListSharedCharactersResponse)
}
ListSharedCharactersResponse::ListSharedCharactersResponse(const ListSharedCharactersResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ListSharedCharactersResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.shared_characters_){from._impl_.shared_characters_}
    , decltype(_impl_.next_page_token_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.next_page_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.next_page_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_next_page_token().empty()) {
    _this->_impl_.next_page_token_.Set(from._internal_next_page_token(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.ListSharedCharactersResponse)
}

inline void ListSharedCharactersResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.shared_characters_){arena}
    , decltype(_impl_.next_page_token_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.next_page_token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.next_page_token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ListSharedCharactersResponse::~ListSharedCharactersResponse() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.ListSharedCharactersResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ListSharedCharactersResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.shared_characters_.~RepeatedPtrField();
  _impl_.next_page_token_.Destroy();
}

void ListSharedCharactersResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ListSharedCharactersResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.ListSharedCharactersResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.shared_characters_.Clear();
  _impl_.next_page_token_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListSharedCharactersResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .ai.inworld.studio.v1alpha.Character shared_characters = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_shared_characters(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string next_page_token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_next_page_token();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.ListSharedCharactersResponse.next_page_token"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListSharedCharactersResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.ListSharedCharactersResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ai.inworld.studio.v1alpha.Character shared_characters = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_shared_characters_size()); i < n; i++) {
    const auto& repfield = this->_internal_shared_characters(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string next_page_token = 2;
  if (!this->_internal_next_page_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_next_page_token().data(), static_cast<int>(this->_internal_next_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.ListSharedCharactersResponse.next_page_token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_next_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.ListSharedCharactersResponse)
  return target;
}

size_t ListSharedCharactersResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.ListSharedCharactersResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ai.inworld.studio.v1alpha.Character shared_characters = 1;
  total_size += 1UL * this->_internal_shared_characters_size();
  for (const auto& msg : this->_impl_.shared_characters_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string next_page_token = 2;
  if (!this->_internal_next_page_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_next_page_token());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListSharedCharactersResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ListSharedCharactersResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListSharedCharactersResponse::GetClassData() const { return &_class_data_; }


void ListSharedCharactersResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ListSharedCharactersResponse*>(&to_msg);
  auto& from = static_cast<const ListSharedCharactersResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.ListSharedCharactersResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.shared_characters_.MergeFrom(from._impl_.shared_characters_);
  if (!from._internal_next_page_token().empty()) {
    _this->_internal_set_next_page_token(from._internal_next_page_token());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListSharedCharactersResponse::CopyFrom(const ListSharedCharactersResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.ListSharedCharactersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSharedCharactersResponse::IsInitialized() const {
  return true;
}

void ListSharedCharactersResponse::InternalSwap(ListSharedCharactersResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.shared_characters_.InternalSwap(&other->_impl_.shared_characters_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.next_page_token_, lhs_arena,
      &other->_impl_.next_page_token_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ListSharedCharactersResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto[33]);
}

// ===================================================================

class CharacterAdvancedSettings_ConversationConfig_EngineSpec::_Internal {
 public:
};

CharacterAdvancedSettings_ConversationConfig_EngineSpec::CharacterAdvancedSettings_ConversationConfig_EngineSpec(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig.EngineSpec)
}
CharacterAdvancedSettings_ConversationConfig_EngineSpec::CharacterAdvancedSettings_ConversationConfig_EngineSpec(const CharacterAdvancedSettings_ConversationConfig_EngineSpec& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CharacterAdvancedSettings_ConversationConfig_EngineSpec* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.engine_){}
    , decltype(_impl_.temperature_){}
    , decltype(_impl_.max_tokens_){}
    , decltype(_impl_.frequency_penalty_){}
    , decltype(_impl_.presence_penalty_){}
    , decltype(_impl_.top_p_){}
    , decltype(_impl_.repetition_penalty_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.engine_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.engine_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_engine().empty()) {
    _this->_impl_.engine_.Set(from._internal_engine(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.temperature_, &from._impl_.temperature_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.repetition_penalty_) -
    reinterpret_cast<char*>(&_impl_.temperature_)) + sizeof(_impl_.repetition_penalty_));
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig.EngineSpec)
}

inline void CharacterAdvancedSettings_ConversationConfig_EngineSpec::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.engine_){}
    , decltype(_impl_.temperature_){0}
    , decltype(_impl_.max_tokens_){0}
    , decltype(_impl_.frequency_penalty_){0}
    , decltype(_impl_.presence_penalty_){0}
    , decltype(_impl_.top_p_){0}
    , decltype(_impl_.repetition_penalty_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.engine_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.engine_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CharacterAdvancedSettings_ConversationConfig_EngineSpec::~CharacterAdvancedSettings_ConversationConfig_EngineSpec() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig.EngineSpec)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CharacterAdvancedSettings_ConversationConfig_EngineSpec::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.engine_.Destroy();
}

void CharacterAdvancedSettings_ConversationConfig_EngineSpec::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CharacterAdvancedSettings_ConversationConfig_EngineSpec::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig.EngineSpec)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.engine_.ClearToEmpty();
  ::memset(&_impl_.temperature_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.repetition_penalty_) -
      reinterpret_cast<char*>(&_impl_.temperature_)) + sizeof(_impl_.repetition_penalty_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CharacterAdvancedSettings_ConversationConfig_EngineSpec::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string engine = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_engine();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig.EngineSpec.engine"));
        } else
          goto handle_unusual;
        continue;
      // float temperature = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 21)) {
          _impl_.temperature_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // int32 max_tokens = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.max_tokens_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // float frequency_penalty = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 37)) {
          _impl_.frequency_penalty_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // float presence_penalty = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 45)) {
          _impl_.presence_penalty_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // float top_p = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 53)) {
          _impl_.top_p_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // float repetition_penalty = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 61)) {
          _impl_.repetition_penalty_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CharacterAdvancedSettings_ConversationConfig_EngineSpec::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig.EngineSpec)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string engine = 1;
  if (!this->_internal_engine().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_engine().data(), static_cast<int>(this->_internal_engine().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig.EngineSpec.engine");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_engine(), target);
  }

  // float temperature = 2;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_temperature = this->_internal_temperature();
  uint32_t raw_temperature;
  memcpy(&raw_temperature, &tmp_temperature, sizeof(tmp_temperature));
  if (raw_temperature != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(2, this->_internal_temperature(), target);
  }

  // int32 max_tokens = 3;
  if (this->_internal_max_tokens() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_max_tokens(), target);
  }

  // float frequency_penalty = 4;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_frequency_penalty = this->_internal_frequency_penalty();
  uint32_t raw_frequency_penalty;
  memcpy(&raw_frequency_penalty, &tmp_frequency_penalty, sizeof(tmp_frequency_penalty));
  if (raw_frequency_penalty != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(4, this->_internal_frequency_penalty(), target);
  }

  // float presence_penalty = 5;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_presence_penalty = this->_internal_presence_penalty();
  uint32_t raw_presence_penalty;
  memcpy(&raw_presence_penalty, &tmp_presence_penalty, sizeof(tmp_presence_penalty));
  if (raw_presence_penalty != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(5, this->_internal_presence_penalty(), target);
  }

  // float top_p = 6;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_top_p = this->_internal_top_p();
  uint32_t raw_top_p;
  memcpy(&raw_top_p, &tmp_top_p, sizeof(tmp_top_p));
  if (raw_top_p != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(6, this->_internal_top_p(), target);
  }

  // float repetition_penalty = 7;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_repetition_penalty = this->_internal_repetition_penalty();
  uint32_t raw_repetition_penalty;
  memcpy(&raw_repetition_penalty, &tmp_repetition_penalty, sizeof(tmp_repetition_penalty));
  if (raw_repetition_penalty != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(7, this->_internal_repetition_penalty(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig.EngineSpec)
  return target;
}

size_t CharacterAdvancedSettings_ConversationConfig_EngineSpec::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig.EngineSpec)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string engine = 1;
  if (!this->_internal_engine().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_engine());
  }

  // float temperature = 2;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_temperature = this->_internal_temperature();
  uint32_t raw_temperature;
  memcpy(&raw_temperature, &tmp_temperature, sizeof(tmp_temperature));
  if (raw_temperature != 0) {
    total_size += 1 + 4;
  }

  // int32 max_tokens = 3;
  if (this->_internal_max_tokens() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_max_tokens());
  }

  // float frequency_penalty = 4;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_frequency_penalty = this->_internal_frequency_penalty();
  uint32_t raw_frequency_penalty;
  memcpy(&raw_frequency_penalty, &tmp_frequency_penalty, sizeof(tmp_frequency_penalty));
  if (raw_frequency_penalty != 0) {
    total_size += 1 + 4;
  }

  // float presence_penalty = 5;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_presence_penalty = this->_internal_presence_penalty();
  uint32_t raw_presence_penalty;
  memcpy(&raw_presence_penalty, &tmp_presence_penalty, sizeof(tmp_presence_penalty));
  if (raw_presence_penalty != 0) {
    total_size += 1 + 4;
  }

  // float top_p = 6;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_top_p = this->_internal_top_p();
  uint32_t raw_top_p;
  memcpy(&raw_top_p, &tmp_top_p, sizeof(tmp_top_p));
  if (raw_top_p != 0) {
    total_size += 1 + 4;
  }

  // float repetition_penalty = 7;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_repetition_penalty = this->_internal_repetition_penalty();
  uint32_t raw_repetition_penalty;
  memcpy(&raw_repetition_penalty, &tmp_repetition_penalty, sizeof(tmp_repetition_penalty));
  if (raw_repetition_penalty != 0) {
    total_size += 1 + 4;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CharacterAdvancedSettings_ConversationConfig_EngineSpec::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CharacterAdvancedSettings_ConversationConfig_EngineSpec::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CharacterAdvancedSettings_ConversationConfig_EngineSpec::GetClassData() const { return &_class_data_; }


void CharacterAdvancedSettings_ConversationConfig_EngineSpec::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CharacterAdvancedSettings_ConversationConfig_EngineSpec*>(&to_msg);
  auto& from = static_cast<const CharacterAdvancedSettings_ConversationConfig_EngineSpec&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig.EngineSpec)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_engine().empty()) {
    _this->_internal_set_engine(from._internal_engine());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_temperature = from._internal_temperature();
  uint32_t raw_temperature;
  memcpy(&raw_temperature, &tmp_temperature, sizeof(tmp_temperature));
  if (raw_temperature != 0) {
    _this->_internal_set_temperature(from._internal_temperature());
  }
  if (from._internal_max_tokens() != 0) {
    _this->_internal_set_max_tokens(from._internal_max_tokens());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_frequency_penalty = from._internal_frequency_penalty();
  uint32_t raw_frequency_penalty;
  memcpy(&raw_frequency_penalty, &tmp_frequency_penalty, sizeof(tmp_frequency_penalty));
  if (raw_frequency_penalty != 0) {
    _this->_internal_set_frequency_penalty(from._internal_frequency_penalty());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_presence_penalty = from._internal_presence_penalty();
  uint32_t raw_presence_penalty;
  memcpy(&raw_presence_penalty, &tmp_presence_penalty, sizeof(tmp_presence_penalty));
  if (raw_presence_penalty != 0) {
    _this->_internal_set_presence_penalty(from._internal_presence_penalty());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_top_p = from._internal_top_p();
  uint32_t raw_top_p;
  memcpy(&raw_top_p, &tmp_top_p, sizeof(tmp_top_p));
  if (raw_top_p != 0) {
    _this->_internal_set_top_p(from._internal_top_p());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_repetition_penalty = from._internal_repetition_penalty();
  uint32_t raw_repetition_penalty;
  memcpy(&raw_repetition_penalty, &tmp_repetition_penalty, sizeof(tmp_repetition_penalty));
  if (raw_repetition_penalty != 0) {
    _this->_internal_set_repetition_penalty(from._internal_repetition_penalty());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CharacterAdvancedSettings_ConversationConfig_EngineSpec::CopyFrom(const CharacterAdvancedSettings_ConversationConfig_EngineSpec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig.EngineSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CharacterAdvancedSettings_ConversationConfig_EngineSpec::IsInitialized() const {
  return true;
}

void CharacterAdvancedSettings_ConversationConfig_EngineSpec::InternalSwap(CharacterAdvancedSettings_ConversationConfig_EngineSpec* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.engine_, lhs_arena,
      &other->_impl_.engine_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CharacterAdvancedSettings_ConversationConfig_EngineSpec, _impl_.repetition_penalty_)
      + sizeof(CharacterAdvancedSettings_ConversationConfig_EngineSpec::_impl_.repetition_penalty_)
      - PROTOBUF_FIELD_OFFSET(CharacterAdvancedSettings_ConversationConfig_EngineSpec, _impl_.temperature_)>(
          reinterpret_cast<char*>(&_impl_.temperature_),
          reinterpret_cast<char*>(&other->_impl_.temperature_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CharacterAdvancedSettings_ConversationConfig_EngineSpec::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto[34]);
}

// ===================================================================

class CharacterAdvancedSettings_ConversationConfig::_Internal {
 public:
  static const ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig_EngineSpec& engine_spec(const CharacterAdvancedSettings_ConversationConfig* msg);
};

const ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig_EngineSpec&
CharacterAdvancedSettings_ConversationConfig::_Internal::engine_spec(const CharacterAdvancedSettings_ConversationConfig* msg) {
  return *msg->_impl_.engine_spec_;
}
CharacterAdvancedSettings_ConversationConfig::CharacterAdvancedSettings_ConversationConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig)
}
CharacterAdvancedSettings_ConversationConfig::CharacterAdvancedSettings_ConversationConfig(const CharacterAdvancedSettings_ConversationConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CharacterAdvancedSettings_ConversationConfig* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.engine_spec_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_engine_spec()) {
    _this->_impl_.engine_spec_ = new ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig_EngineSpec(*from._impl_.engine_spec_);
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig)
}

inline void CharacterAdvancedSettings_ConversationConfig::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.engine_spec_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CharacterAdvancedSettings_ConversationConfig::~CharacterAdvancedSettings_ConversationConfig() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CharacterAdvancedSettings_ConversationConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.engine_spec_;
}

void CharacterAdvancedSettings_ConversationConfig::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CharacterAdvancedSettings_ConversationConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.engine_spec_ != nullptr) {
    delete _impl_.engine_spec_;
  }
  _impl_.engine_spec_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CharacterAdvancedSettings_ConversationConfig::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig.EngineSpec engine_spec = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_engine_spec(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CharacterAdvancedSettings_ConversationConfig::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig.EngineSpec engine_spec = 1;
  if (this->_internal_has_engine_spec()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::engine_spec(this),
        _Internal::engine_spec(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig)
  return target;
}

size_t CharacterAdvancedSettings_ConversationConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig.EngineSpec engine_spec = 1;
  if (this->_internal_has_engine_spec()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.engine_spec_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CharacterAdvancedSettings_ConversationConfig::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CharacterAdvancedSettings_ConversationConfig::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CharacterAdvancedSettings_ConversationConfig::GetClassData() const { return &_class_data_; }


void CharacterAdvancedSettings_ConversationConfig::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CharacterAdvancedSettings_ConversationConfig*>(&to_msg);
  auto& from = static_cast<const CharacterAdvancedSettings_ConversationConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_engine_spec()) {
    _this->_internal_mutable_engine_spec()->::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig_EngineSpec::MergeFrom(
        from._internal_engine_spec());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CharacterAdvancedSettings_ConversationConfig::CopyFrom(const CharacterAdvancedSettings_ConversationConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CharacterAdvancedSettings_ConversationConfig::IsInitialized() const {
  return true;
}

void CharacterAdvancedSettings_ConversationConfig::InternalSwap(CharacterAdvancedSettings_ConversationConfig* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.engine_spec_, other->_impl_.engine_spec_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CharacterAdvancedSettings_ConversationConfig::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto[35]);
}

// ===================================================================

class CharacterAdvancedSettings_SafetySpec::_Internal {
 public:
};

CharacterAdvancedSettings_SafetySpec::CharacterAdvancedSettings_SafetySpec(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.SafetySpec)
}
CharacterAdvancedSettings_SafetySpec::CharacterAdvancedSettings_SafetySpec(const CharacterAdvancedSettings_SafetySpec& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CharacterAdvancedSettings_SafetySpec* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.allowed_topics_){from._impl_.allowed_topics_}
    , /*decltype(_impl_._allowed_topics_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.SafetySpec)
}

inline void CharacterAdvancedSettings_SafetySpec::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.allowed_topics_){arena}
    , /*decltype(_impl_._allowed_topics_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CharacterAdvancedSettings_SafetySpec::~CharacterAdvancedSettings_SafetySpec() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.SafetySpec)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CharacterAdvancedSettings_SafetySpec::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.allowed_topics_.~RepeatedField();
}

void CharacterAdvancedSettings_SafetySpec::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CharacterAdvancedSettings_SafetySpec::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.SafetySpec)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.allowed_topics_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CharacterAdvancedSettings_SafetySpec::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .ai.inworld.studio.v1alpha.CharacterAdvancedSettings.SafetyTopicName allowed_topics = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedEnumParser(_internal_mutable_allowed_topics(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 8) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_add_allowed_topics(static_cast<::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_SafetyTopicName>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CharacterAdvancedSettings_SafetySpec::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.SafetySpec)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ai.inworld.studio.v1alpha.CharacterAdvancedSettings.SafetyTopicName allowed_topics = 1;
  {
    int byte_size = _impl_._allowed_topics_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          1, _impl_.allowed_topics_, byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.SafetySpec)
  return target;
}

size_t CharacterAdvancedSettings_SafetySpec::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.SafetySpec)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ai.inworld.studio.v1alpha.CharacterAdvancedSettings.SafetyTopicName allowed_topics = 1;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->_internal_allowed_topics_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
        this->_internal_allowed_topics(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._allowed_topics_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CharacterAdvancedSettings_SafetySpec::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CharacterAdvancedSettings_SafetySpec::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CharacterAdvancedSettings_SafetySpec::GetClassData() const { return &_class_data_; }


void CharacterAdvancedSettings_SafetySpec::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CharacterAdvancedSettings_SafetySpec*>(&to_msg);
  auto& from = static_cast<const CharacterAdvancedSettings_SafetySpec&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.SafetySpec)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.allowed_topics_.MergeFrom(from._impl_.allowed_topics_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CharacterAdvancedSettings_SafetySpec::CopyFrom(const CharacterAdvancedSettings_SafetySpec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings.SafetySpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CharacterAdvancedSettings_SafetySpec::IsInitialized() const {
  return true;
}

void CharacterAdvancedSettings_SafetySpec::InternalSwap(CharacterAdvancedSettings_SafetySpec* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.allowed_topics_.InternalSwap(&other->_impl_.allowed_topics_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CharacterAdvancedSettings_SafetySpec::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto[36]);
}

// ===================================================================

class CharacterAdvancedSettings::_Internal {
 public:
  static const ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig& conversation_config(const CharacterAdvancedSettings* msg);
  static const ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_SafetySpec& speech_safety_spec(const CharacterAdvancedSettings* msg);
};

const ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig&
CharacterAdvancedSettings::_Internal::conversation_config(const CharacterAdvancedSettings* msg) {
  return *msg->_impl_.conversation_config_;
}
const ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_SafetySpec&
CharacterAdvancedSettings::_Internal::speech_safety_spec(const CharacterAdvancedSettings* msg) {
  return *msg->_impl_.speech_safety_spec_;
}
CharacterAdvancedSettings::CharacterAdvancedSettings(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.CharacterAdvancedSettings)
}
CharacterAdvancedSettings::CharacterAdvancedSettings(const CharacterAdvancedSettings& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CharacterAdvancedSettings* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.custom_prompt_template_){}
    , decltype(_impl_.additional_agent_info_){}
    , decltype(_impl_.conversation_config_){nullptr}
    , decltype(_impl_.speech_safety_spec_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.custom_prompt_template_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.custom_prompt_template_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_custom_prompt_template().empty()) {
    _this->_impl_.custom_prompt_template_.Set(from._internal_custom_prompt_template(), 
      _this->GetArenaForAllocation());
  }
  _impl_.additional_agent_info_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.additional_agent_info_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_additional_agent_info().empty()) {
    _this->_impl_.additional_agent_info_.Set(from._internal_additional_agent_info(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_conversation_config()) {
    _this->_impl_.conversation_config_ = new ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig(*from._impl_.conversation_config_);
  }
  if (from._internal_has_speech_safety_spec()) {
    _this->_impl_.speech_safety_spec_ = new ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_SafetySpec(*from._impl_.speech_safety_spec_);
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.CharacterAdvancedSettings)
}

inline void CharacterAdvancedSettings::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.custom_prompt_template_){}
    , decltype(_impl_.additional_agent_info_){}
    , decltype(_impl_.conversation_config_){nullptr}
    , decltype(_impl_.speech_safety_spec_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.custom_prompt_template_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.custom_prompt_template_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.additional_agent_info_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.additional_agent_info_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CharacterAdvancedSettings::~CharacterAdvancedSettings() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.CharacterAdvancedSettings)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CharacterAdvancedSettings::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.custom_prompt_template_.Destroy();
  _impl_.additional_agent_info_.Destroy();
  if (this != internal_default_instance()) delete _impl_.conversation_config_;
  if (this != internal_default_instance()) delete _impl_.speech_safety_spec_;
}

void CharacterAdvancedSettings::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CharacterAdvancedSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.custom_prompt_template_.ClearToEmpty();
  _impl_.additional_agent_info_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.conversation_config_ != nullptr) {
    delete _impl_.conversation_config_;
  }
  _impl_.conversation_config_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.speech_safety_spec_ != nullptr) {
    delete _impl_.speech_safety_spec_;
  }
  _impl_.speech_safety_spec_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CharacterAdvancedSettings::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [(.ai.inworld.options.examples) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.CharacterAdvancedSettings.name"));
        } else
          goto handle_unusual;
        continue;
      // .ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig conversation_config = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_conversation_config(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string custom_prompt_template = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_custom_prompt_template();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.CharacterAdvancedSettings.custom_prompt_template"));
        } else
          goto handle_unusual;
        continue;
      // .ai.inworld.studio.v1alpha.CharacterAdvancedSettings.SafetySpec speech_safety_spec = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_speech_safety_spec(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string additional_agent_info = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_additional_agent_info();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.CharacterAdvancedSettings.additional_agent_info"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CharacterAdvancedSettings::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.ai.inworld.options.examples) = {
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.CharacterAdvancedSettings.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // .ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig conversation_config = 2;
  if (this->_internal_has_conversation_config()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::conversation_config(this),
        _Internal::conversation_config(this).GetCachedSize(), target, stream);
  }

  // string custom_prompt_template = 4;
  if (!this->_internal_custom_prompt_template().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_custom_prompt_template().data(), static_cast<int>(this->_internal_custom_prompt_template().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.CharacterAdvancedSettings.custom_prompt_template");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_custom_prompt_template(), target);
  }

  // .ai.inworld.studio.v1alpha.CharacterAdvancedSettings.SafetySpec speech_safety_spec = 5;
  if (this->_internal_has_speech_safety_spec()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::speech_safety_spec(this),
        _Internal::speech_safety_spec(this).GetCachedSize(), target, stream);
  }

  // string additional_agent_info = 6;
  if (!this->_internal_additional_agent_info().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_additional_agent_info().data(), static_cast<int>(this->_internal_additional_agent_info().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.CharacterAdvancedSettings.additional_agent_info");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_additional_agent_info(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.CharacterAdvancedSettings)
  return target;
}

size_t CharacterAdvancedSettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.ai.inworld.options.examples) = {
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string custom_prompt_template = 4;
  if (!this->_internal_custom_prompt_template().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_custom_prompt_template());
  }

  // string additional_agent_info = 6;
  if (!this->_internal_additional_agent_info().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_additional_agent_info());
  }

  // .ai.inworld.studio.v1alpha.CharacterAdvancedSettings.ConversationConfig conversation_config = 2;
  if (this->_internal_has_conversation_config()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.conversation_config_);
  }

  // .ai.inworld.studio.v1alpha.CharacterAdvancedSettings.SafetySpec speech_safety_spec = 5;
  if (this->_internal_has_speech_safety_spec()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.speech_safety_spec_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CharacterAdvancedSettings::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CharacterAdvancedSettings::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CharacterAdvancedSettings::GetClassData() const { return &_class_data_; }


void CharacterAdvancedSettings::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CharacterAdvancedSettings*>(&to_msg);
  auto& from = static_cast<const CharacterAdvancedSettings&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_custom_prompt_template().empty()) {
    _this->_internal_set_custom_prompt_template(from._internal_custom_prompt_template());
  }
  if (!from._internal_additional_agent_info().empty()) {
    _this->_internal_set_additional_agent_info(from._internal_additional_agent_info());
  }
  if (from._internal_has_conversation_config()) {
    _this->_internal_mutable_conversation_config()->::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig::MergeFrom(
        from._internal_conversation_config());
  }
  if (from._internal_has_speech_safety_spec()) {
    _this->_internal_mutable_speech_safety_spec()->::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_SafetySpec::MergeFrom(
        from._internal_speech_safety_spec());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CharacterAdvancedSettings::CopyFrom(const CharacterAdvancedSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.CharacterAdvancedSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CharacterAdvancedSettings::IsInitialized() const {
  return true;
}

void CharacterAdvancedSettings::InternalSwap(CharacterAdvancedSettings* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.custom_prompt_template_, lhs_arena,
      &other->_impl_.custom_prompt_template_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.additional_agent_info_, lhs_arena,
      &other->_impl_.additional_agent_info_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CharacterAdvancedSettings, _impl_.speech_safety_spec_)
      + sizeof(CharacterAdvancedSettings::_impl_.speech_safety_spec_)
      - PROTOBUF_FIELD_OFFSET(CharacterAdvancedSettings, _impl_.conversation_config_)>(
          reinterpret_cast<char*>(&_impl_.conversation_config_),
          reinterpret_cast<char*>(&other->_impl_.conversation_config_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CharacterAdvancedSettings::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto[37]);
}

// ===================================================================

class GetCharacterShareInfoRequest::_Internal {
 public:
};

GetCharacterShareInfoRequest::GetCharacterShareInfoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.GetCharacterShareInfoRequest)
}
GetCharacterShareInfoRequest::GetCharacterShareInfoRequest(const GetCharacterShareInfoRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetCharacterShareInfoRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.view_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.view_ = from._impl_.view_;
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.GetCharacterShareInfoRequest)
}

inline void GetCharacterShareInfoRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.view_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetCharacterShareInfoRequest::~GetCharacterShareInfoRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.GetCharacterShareInfoRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetCharacterShareInfoRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void GetCharacterShareInfoRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetCharacterShareInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.GetCharacterShareInfoRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.view_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetCharacterShareInfoRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.GetCharacterShareInfoRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // .ai.inworld.studio.v1alpha.CharacterSharePurpose view = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_view(static_cast<::ai::inworld::studio::v1alpha::CharacterSharePurpose>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetCharacterShareInfoRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.GetCharacterShareInfoRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.GetCharacterShareInfoRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // .ai.inworld.studio.v1alpha.CharacterSharePurpose view = 2;
  if (this->_internal_view() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_view(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.GetCharacterShareInfoRequest)
  return target;
}

size_t GetCharacterShareInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.GetCharacterShareInfoRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .ai.inworld.studio.v1alpha.CharacterSharePurpose view = 2;
  if (this->_internal_view() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_view());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetCharacterShareInfoRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetCharacterShareInfoRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetCharacterShareInfoRequest::GetClassData() const { return &_class_data_; }


void GetCharacterShareInfoRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetCharacterShareInfoRequest*>(&to_msg);
  auto& from = static_cast<const GetCharacterShareInfoRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.GetCharacterShareInfoRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_view() != 0) {
    _this->_internal_set_view(from._internal_view());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetCharacterShareInfoRequest::CopyFrom(const GetCharacterShareInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.GetCharacterShareInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCharacterShareInfoRequest::IsInitialized() const {
  return true;
}

void GetCharacterShareInfoRequest::InternalSwap(GetCharacterShareInfoRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  swap(_impl_.view_, other->_impl_.view_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetCharacterShareInfoRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto[38]);
}

// ===================================================================

class CharacterShareInfo::_Internal {
 public:
};

CharacterShareInfo::CharacterShareInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.CharacterShareInfo)
}
CharacterShareInfo::CharacterShareInfo(const CharacterShareInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CharacterShareInfo* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.external_ids_){from._impl_.external_ids_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.CharacterShareInfo)
}

inline void CharacterShareInfo::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.external_ids_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CharacterShareInfo::~CharacterShareInfo() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.CharacterShareInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CharacterShareInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.external_ids_.~RepeatedPtrField();
}

void CharacterShareInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CharacterShareInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.CharacterShareInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.external_ids_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CharacterShareInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string external_ids = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_external_ids();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.CharacterShareInfo.external_ids"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CharacterShareInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.CharacterShareInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string external_ids = 1;
  for (int i = 0, n = this->_internal_external_ids_size(); i < n; i++) {
    const auto& s = this->_internal_external_ids(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.CharacterShareInfo.external_ids");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.CharacterShareInfo)
  return target;
}

size_t CharacterShareInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.CharacterShareInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string external_ids = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.external_ids_.size());
  for (int i = 0, n = _impl_.external_ids_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.external_ids_.Get(i));
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CharacterShareInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CharacterShareInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CharacterShareInfo::GetClassData() const { return &_class_data_; }


void CharacterShareInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CharacterShareInfo*>(&to_msg);
  auto& from = static_cast<const CharacterShareInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.CharacterShareInfo)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.external_ids_.MergeFrom(from._impl_.external_ids_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CharacterShareInfo::CopyFrom(const CharacterShareInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.CharacterShareInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CharacterShareInfo::IsInitialized() const {
  return true;
}

void CharacterShareInfo::InternalSwap(CharacterShareInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.external_ids_.InternalSwap(&other->_impl_.external_ids_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CharacterShareInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto[39]);
}

// ===================================================================

class CheckDeployInfoRequest::_Internal {
 public:
};

CheckDeployInfoRequest::CheckDeployInfoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.CheckDeployInfoRequest)
}
CheckDeployInfoRequest::CheckDeployInfoRequest(const CheckDeployInfoRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CheckDeployInfoRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.character_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.character_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.character_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_character().empty()) {
    _this->_impl_.character_.Set(from._internal_character(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.CheckDeployInfoRequest)
}

inline void CheckDeployInfoRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.character_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.character_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.character_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CheckDeployInfoRequest::~CheckDeployInfoRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.CheckDeployInfoRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CheckDeployInfoRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.character_.Destroy();
}

void CheckDeployInfoRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CheckDeployInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.CheckDeployInfoRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.character_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CheckDeployInfoRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string character = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_character();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "ai.inworld.studio.v1alpha.CheckDeployInfoRequest.character"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CheckDeployInfoRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.CheckDeployInfoRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string character = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_character().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_character().data(), static_cast<int>(this->_internal_character().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ai.inworld.studio.v1alpha.CheckDeployInfoRequest.character");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_character(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.CheckDeployInfoRequest)
  return target;
}

size_t CheckDeployInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.CheckDeployInfoRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string character = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_character().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_character());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CheckDeployInfoRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CheckDeployInfoRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CheckDeployInfoRequest::GetClassData() const { return &_class_data_; }


void CheckDeployInfoRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CheckDeployInfoRequest*>(&to_msg);
  auto& from = static_cast<const CheckDeployInfoRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.CheckDeployInfoRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_character().empty()) {
    _this->_internal_set_character(from._internal_character());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CheckDeployInfoRequest::CopyFrom(const CheckDeployInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.CheckDeployInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckDeployInfoRequest::IsInitialized() const {
  return true;
}

void CheckDeployInfoRequest::InternalSwap(CheckDeployInfoRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.character_, lhs_arena,
      &other->_impl_.character_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CheckDeployInfoRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto[40]);
}

// ===================================================================

class DeployCharacterAsyncMetadata::_Internal {
 public:
};

DeployCharacterAsyncMetadata::DeployCharacterAsyncMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.DeployCharacterAsyncMetadata)
}
DeployCharacterAsyncMetadata::DeployCharacterAsyncMetadata(const DeployCharacterAsyncMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  DeployCharacterAsyncMetadata* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.DeployCharacterAsyncMetadata)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeployCharacterAsyncMetadata::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeployCharacterAsyncMetadata::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata DeployCharacterAsyncMetadata::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto[41]);
}

// ===================================================================

class DeployCharacterAsyncResponse::_Internal {
 public:
};

DeployCharacterAsyncResponse::DeployCharacterAsyncResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.DeployCharacterAsyncResponse)
}
DeployCharacterAsyncResponse::DeployCharacterAsyncResponse(const DeployCharacterAsyncResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  DeployCharacterAsyncResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.DeployCharacterAsyncResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeployCharacterAsyncResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeployCharacterAsyncResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata DeployCharacterAsyncResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto[42]);
}

// ===================================================================

class CreateCharacterMetadata::_Internal {
 public:
};

CreateCharacterMetadata::CreateCharacterMetadata(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.CreateCharacterMetadata)
}
CreateCharacterMetadata::CreateCharacterMetadata(const CreateCharacterMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  CreateCharacterMetadata* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.CreateCharacterMetadata)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateCharacterMetadata::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateCharacterMetadata::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata CreateCharacterMetadata::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto[43]);
}

// ===================================================================

class CheckDeployInfoResponse::_Internal {
 public:
};

CheckDeployInfoResponse::CheckDeployInfoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.CheckDeployInfoResponse)
}
CheckDeployInfoResponse::CheckDeployInfoResponse(const CheckDeployInfoResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CheckDeployInfoResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.is_fresh_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.is_fresh_ = from._impl_.is_fresh_;
  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.CheckDeployInfoResponse)
}

inline void CheckDeployInfoResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.is_fresh_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CheckDeployInfoResponse::~CheckDeployInfoResponse() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.CheckDeployInfoResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CheckDeployInfoResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CheckDeployInfoResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CheckDeployInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.CheckDeployInfoResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.is_fresh_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CheckDeployInfoResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool is_fresh = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.is_fresh_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CheckDeployInfoResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.CheckDeployInfoResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_fresh = 1;
  if (this->_internal_is_fresh() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_is_fresh(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.CheckDeployInfoResponse)
  return target;
}

size_t CheckDeployInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.CheckDeployInfoResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool is_fresh = 1;
  if (this->_internal_is_fresh() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CheckDeployInfoResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CheckDeployInfoResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CheckDeployInfoResponse::GetClassData() const { return &_class_data_; }


void CheckDeployInfoResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CheckDeployInfoResponse*>(&to_msg);
  auto& from = static_cast<const CheckDeployInfoResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.CheckDeployInfoResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_is_fresh() != 0) {
    _this->_internal_set_is_fresh(from._internal_is_fresh());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CheckDeployInfoResponse::CopyFrom(const CheckDeployInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.CheckDeployInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckDeployInfoResponse::IsInitialized() const {
  return true;
}

void CheckDeployInfoResponse::InternalSwap(CheckDeployInfoResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.is_fresh_, other->_impl_.is_fresh_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CheckDeployInfoResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fcharacters_2eproto[44]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1alpha
}  // namespace studio
}  // namespace inworld
}  // namespace ai
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::Character_CharacterDescription_CustomDialogStyle*
Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::Character_CharacterDescription_CustomDialogStyle >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::Character_CharacterDescription_CustomDialogStyle >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::Character_CharacterDescription*
Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::Character_CharacterDescription >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::Character_CharacterDescription >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::Character_BrainSettings_ConversationConfig_FillerSpec*
Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::Character_BrainSettings_ConversationConfig_FillerSpec >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::Character_BrainSettings_ConversationConfig_FillerSpec >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::Character_BrainSettings_ConversationConfig*
Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::Character_BrainSettings_ConversationConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::Character_BrainSettings_ConversationConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::Character_BrainSettings*
Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::Character_BrainSettings >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::Character_BrainSettings >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::Character_BrainTrigger*
Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::Character_BrainTrigger >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::Character_BrainTrigger >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::Character_CharacterAssets*
Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::Character_CharacterAssets >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::Character_CharacterAssets >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::Character_CharacterInitialMood*
Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::Character_CharacterInitialMood >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::Character_CharacterInitialMood >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::Character_CharacterPersonality*
Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::Character_CharacterPersonality >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::Character_CharacterPersonality >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::Character_Fact*
Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::Character_Fact >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::Character_Fact >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::Character_Meta*
Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::Character_Meta >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::Character_Meta >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::Character_SharedPortalInfo_InteractionCountStat*
Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::Character_SharedPortalInfo_InteractionCountStat >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::Character_SharedPortalInfo_InteractionCountStat >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::Character_SharedPortalInfo*
Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::Character_SharedPortalInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::Character_SharedPortalInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::Character_SafetyConfigEntry_DoNotUse*
Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::Character_SafetyConfigEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::Character_SafetyConfigEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::Character*
Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::Character >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::Character >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::GetCharacterRequest*
Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::GetCharacterRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::GetCharacterRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::GetCharacterAdvancedSettingsRequest*
Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::GetCharacterAdvancedSettingsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::GetCharacterAdvancedSettingsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::UpdateCharacterAdvancedSettingsRequest*
Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::UpdateCharacterAdvancedSettingsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::UpdateCharacterAdvancedSettingsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::ListCharactersRequest*
Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::ListCharactersRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::ListCharactersRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::CreateCharacterRequest*
Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::CreateCharacterRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::CreateCharacterRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::UpdateCharacterRequest*
Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::UpdateCharacterRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::UpdateCharacterRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::DeleteCharacterRequest*
Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::DeleteCharacterRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::DeleteCharacterRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::DeployCharacterRequest*
Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::DeployCharacterRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::DeployCharacterRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::CloneCharacterRequest*
Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::CloneCharacterRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::CloneCharacterRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::ListCharactersResponse*
Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::ListCharactersResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::ListCharactersResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::ReplaceCharacterRpmModelRequest*
Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::ReplaceCharacterRpmModelRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::ReplaceCharacterRpmModelRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::ReplaceCharacterImageRequest*
Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::ReplaceCharacterImageRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::ReplaceCharacterImageRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::PreviewPromptTemplateRequest*
Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::PreviewPromptTemplateRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::PreviewPromptTemplateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::PreviewPromptTempalteResponse*
Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::PreviewPromptTempalteResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::PreviewPromptTempalteResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::ShareCharacterRequest*
Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::ShareCharacterRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::ShareCharacterRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::ShareCharacterPortalRequest*
Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::ShareCharacterPortalRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::ShareCharacterPortalRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::UnshareCharacterPortalRequest*
Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::UnshareCharacterPortalRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::UnshareCharacterPortalRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::ListSharedCharactersRequest*
Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::ListSharedCharactersRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::ListSharedCharactersRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::ListSharedCharactersResponse*
Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::ListSharedCharactersResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::ListSharedCharactersResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig_EngineSpec*
Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig_EngineSpec >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig_EngineSpec >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig*
Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_ConversationConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_SafetySpec*
Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_SafetySpec >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings_SafetySpec >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings*
Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::CharacterAdvancedSettings >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::GetCharacterShareInfoRequest*
Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::GetCharacterShareInfoRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::GetCharacterShareInfoRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::CharacterShareInfo*
Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::CharacterShareInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::CharacterShareInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::CheckDeployInfoRequest*
Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::CheckDeployInfoRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::CheckDeployInfoRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::DeployCharacterAsyncMetadata*
Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::DeployCharacterAsyncMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::DeployCharacterAsyncMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::DeployCharacterAsyncResponse*
Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::DeployCharacterAsyncResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::DeployCharacterAsyncResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::CreateCharacterMetadata*
Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::CreateCharacterMetadata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::CreateCharacterMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::ai::inworld::studio::v1alpha::CheckDeployInfoResponse*
Arena::CreateMaybeMessage< ::ai::inworld::studio::v1alpha::CheckDeployInfoResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ai::inworld::studio::v1alpha::CheckDeployInfoResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
