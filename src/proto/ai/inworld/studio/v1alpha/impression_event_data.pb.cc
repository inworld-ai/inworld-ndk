#include "ProtoDisableWarning.h"
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ai/inworld/studio/v1alpha/impression_event_data.proto

#include "ai/inworld/studio/v1alpha/impression_event_data.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace ai {
namespace inworld {
namespace studio {
namespace v1alpha {

inline constexpr ImpressionEventData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        feature_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        variant_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        payload_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        stickiness_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        workspace_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        event_time_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ImpressionEventData::ImpressionEventData(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ImpressionEventDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ImpressionEventDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ImpressionEventDataDefaultTypeInternal() {}
  union {
    ImpressionEventData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ImpressionEventDataDefaultTypeInternal _ImpressionEventData_default_instance_;
}  // namespace v1alpha
}  // namespace studio
}  // namespace inworld
}  // namespace ai
static ::_pb::Metadata file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fimpression_5fevent_5fdata_2eproto[1];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_ai_2finworld_2fstudio_2fv1alpha_2fimpression_5fevent_5fdata_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_ai_2finworld_2fstudio_2fv1alpha_2fimpression_5fevent_5fdata_2eproto = nullptr;
const ::uint32_t TableStruct_ai_2finworld_2fstudio_2fv1alpha_2fimpression_5fevent_5fdata_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ImpressionEventData, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ImpressionEventData, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ImpressionEventData, _impl_.feature_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ImpressionEventData, _impl_.variant_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ImpressionEventData, _impl_.payload_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ImpressionEventData, _impl_.stickiness_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ImpressionEventData, _impl_.event_time_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ImpressionEventData, _impl_.workspace_id_),
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    0,
    ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 14, -1, sizeof(::ai::inworld::studio::v1alpha::ImpressionEventData)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::ai::inworld::studio::v1alpha::_ImpressionEventData_default_instance_._instance,
};
const char descriptor_table_protodef_ai_2finworld_2fstudio_2fv1alpha_2fimpression_5fevent_5fdata_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n5ai/inworld/studio/v1alpha/impression_e"
    "vent_data.proto\022\031ai.inworld.studio.v1alp"
    "ha\032\037google/protobuf/timestamp.proto\032\034goo"
    "gle/api/annotations.proto\032\031google/api/re"
    "source.proto\"\242\001\n\023ImpressionEventData\022\017\n\007"
    "feature\030\001 \001(\t\022\017\n\007variant\030\002 \001(\t\022\017\n\007payloa"
    "d\030\003 \001(\t\022\022\n\nstickiness\030\004 \001(\t\022.\n\nevent_tim"
    "e\030\005 \001(\0132\032.google.protobuf.Timestamp\022\024\n\014w"
    "orkspace_id\030\006 \001(\tB\242\001\n\031ai.inworld.studio."
    "v1alphaB\030ImpressionEventDataProtoP\001ZMgit"
    "hub.com/inworld-ai/inworld/serving/grpc-"
    "gateway/build/proto/studio/v1alpha\252\002\031Ai."
    "Inworld.Studio.V1Alphab\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fimpression_5fevent_5fdata_2eproto_deps[3] =
    {
        &::descriptor_table_google_2fapi_2fannotations_2eproto,
        &::descriptor_table_google_2fapi_2fresource_2eproto,
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::absl::once_flag descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fimpression_5fevent_5fdata_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fimpression_5fevent_5fdata_2eproto = {
    false,
    false,
    510,
    descriptor_table_protodef_ai_2finworld_2fstudio_2fv1alpha_2fimpression_5fevent_5fdata_2eproto,
    "ai/inworld/studio/v1alpha/impression_event_data.proto",
    &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fimpression_5fevent_5fdata_2eproto_once,
    descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fimpression_5fevent_5fdata_2eproto_deps,
    3,
    1,
    schemas,
    file_default_instances,
    TableStruct_ai_2finworld_2fstudio_2fv1alpha_2fimpression_5fevent_5fdata_2eproto::offsets,
    file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fimpression_5fevent_5fdata_2eproto,
    file_level_enum_descriptors_ai_2finworld_2fstudio_2fv1alpha_2fimpression_5fevent_5fdata_2eproto,
    file_level_service_descriptors_ai_2finworld_2fstudio_2fv1alpha_2fimpression_5fevent_5fdata_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fimpression_5fevent_5fdata_2eproto_getter() {
  return &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fimpression_5fevent_5fdata_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_ai_2finworld_2fstudio_2fv1alpha_2fimpression_5fevent_5fdata_2eproto(&descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fimpression_5fevent_5fdata_2eproto);
namespace ai {
namespace inworld {
namespace studio {
namespace v1alpha {
// ===================================================================

class ImpressionEventData::_Internal {
 public:
  using HasBits = decltype(std::declval<ImpressionEventData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ImpressionEventData, _impl_._has_bits_);
  static const ::google::protobuf::Timestamp& event_time(const ImpressionEventData* msg);
  static void set_has_event_time(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::google::protobuf::Timestamp& ImpressionEventData::_Internal::event_time(const ImpressionEventData* msg) {
  return *msg->_impl_.event_time_;
}
void ImpressionEventData::clear_event_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.event_time_ != nullptr) _impl_.event_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ImpressionEventData::ImpressionEventData(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.ImpressionEventData)
}
inline PROTOBUF_NDEBUG_INLINE ImpressionEventData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        feature_(arena, from.feature_),
        variant_(arena, from.variant_),
        payload_(arena, from.payload_),
        stickiness_(arena, from.stickiness_),
        workspace_id_(arena, from.workspace_id_) {}

ImpressionEventData::ImpressionEventData(
    ::google::protobuf::Arena* arena,
    const ImpressionEventData& from)
    : ::google::protobuf::Message(arena) {
  ImpressionEventData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.event_time_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.event_time_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.ImpressionEventData)
}
inline PROTOBUF_NDEBUG_INLINE ImpressionEventData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        feature_(arena),
        variant_(arena),
        payload_(arena),
        stickiness_(arena),
        workspace_id_(arena) {}

inline void ImpressionEventData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.event_time_ = {};
}
ImpressionEventData::~ImpressionEventData() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.ImpressionEventData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ImpressionEventData::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.feature_.Destroy();
  _impl_.variant_.Destroy();
  _impl_.payload_.Destroy();
  _impl_.stickiness_.Destroy();
  _impl_.workspace_id_.Destroy();
  delete _impl_.event_time_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ImpressionEventData::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.ImpressionEventData)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.feature_.ClearToEmpty();
  _impl_.variant_.ClearToEmpty();
  _impl_.payload_.ClearToEmpty();
  _impl_.stickiness_.ClearToEmpty();
  _impl_.workspace_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.event_time_ != nullptr);
    _impl_.event_time_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ImpressionEventData::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 97, 2> ImpressionEventData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ImpressionEventData, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ImpressionEventData_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string feature = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ImpressionEventData, _impl_.feature_)}},
    // string variant = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ImpressionEventData, _impl_.variant_)}},
    // string payload = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(ImpressionEventData, _impl_.payload_)}},
    // string stickiness = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(ImpressionEventData, _impl_.stickiness_)}},
    // .google.protobuf.Timestamp event_time = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(ImpressionEventData, _impl_.event_time_)}},
    // string workspace_id = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(ImpressionEventData, _impl_.workspace_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string feature = 1;
    {PROTOBUF_FIELD_OFFSET(ImpressionEventData, _impl_.feature_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string variant = 2;
    {PROTOBUF_FIELD_OFFSET(ImpressionEventData, _impl_.variant_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string payload = 3;
    {PROTOBUF_FIELD_OFFSET(ImpressionEventData, _impl_.payload_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string stickiness = 4;
    {PROTOBUF_FIELD_OFFSET(ImpressionEventData, _impl_.stickiness_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp event_time = 5;
    {PROTOBUF_FIELD_OFFSET(ImpressionEventData, _impl_.event_time_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string workspace_id = 6;
    {PROTOBUF_FIELD_OFFSET(ImpressionEventData, _impl_.workspace_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\55\7\7\7\12\0\14\0"
    "ai.inworld.studio.v1alpha.ImpressionEventData"
    "feature"
    "variant"
    "payload"
    "stickiness"
    "workspace_id"
  }},
};

::uint8_t* ImpressionEventData::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.ImpressionEventData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string feature = 1;
  if (!this->_internal_feature().empty()) {
    const std::string& _s = this->_internal_feature();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ai.inworld.studio.v1alpha.ImpressionEventData.feature");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string variant = 2;
  if (!this->_internal_variant().empty()) {
    const std::string& _s = this->_internal_variant();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ai.inworld.studio.v1alpha.ImpressionEventData.variant");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string payload = 3;
  if (!this->_internal_payload().empty()) {
    const std::string& _s = this->_internal_payload();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ai.inworld.studio.v1alpha.ImpressionEventData.payload");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string stickiness = 4;
  if (!this->_internal_stickiness().empty()) {
    const std::string& _s = this->_internal_stickiness();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ai.inworld.studio.v1alpha.ImpressionEventData.stickiness");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Timestamp event_time = 5;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, _Internal::event_time(this),
        _Internal::event_time(this).GetCachedSize(), target, stream);
  }

  // string workspace_id = 6;
  if (!this->_internal_workspace_id().empty()) {
    const std::string& _s = this->_internal_workspace_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ai.inworld.studio.v1alpha.ImpressionEventData.workspace_id");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.ImpressionEventData)
  return target;
}

::size_t ImpressionEventData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.ImpressionEventData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string feature = 1;
  if (!this->_internal_feature().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_feature());
  }

  // string variant = 2;
  if (!this->_internal_variant().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_variant());
  }

  // string payload = 3;
  if (!this->_internal_payload().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_payload());
  }

  // string stickiness = 4;
  if (!this->_internal_stickiness().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_stickiness());
  }

  // string workspace_id = 6;
  if (!this->_internal_workspace_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_workspace_id());
  }

  // .google.protobuf.Timestamp event_time = 5;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.event_time_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ImpressionEventData::_class_data_ = {
    ImpressionEventData::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ImpressionEventData::GetClassData() const {
  return &_class_data_;
}

void ImpressionEventData::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ImpressionEventData*>(&to_msg);
  auto& from = static_cast<const ImpressionEventData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.ImpressionEventData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_feature().empty()) {
    _this->_internal_set_feature(from._internal_feature());
  }
  if (!from._internal_variant().empty()) {
    _this->_internal_set_variant(from._internal_variant());
  }
  if (!from._internal_payload().empty()) {
    _this->_internal_set_payload(from._internal_payload());
  }
  if (!from._internal_stickiness().empty()) {
    _this->_internal_set_stickiness(from._internal_stickiness());
  }
  if (!from._internal_workspace_id().empty()) {
    _this->_internal_set_workspace_id(from._internal_workspace_id());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_event_time()->::google::protobuf::Timestamp::MergeFrom(
        from._internal_event_time());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ImpressionEventData::CopyFrom(const ImpressionEventData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.ImpressionEventData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ImpressionEventData::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ImpressionEventData::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ImpressionEventData::InternalSwap(ImpressionEventData* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.feature_, &other->_impl_.feature_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.variant_, &other->_impl_.variant_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.payload_, &other->_impl_.payload_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.stickiness_, &other->_impl_.stickiness_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.workspace_id_, &other->_impl_.workspace_id_, arena);
  swap(_impl_.event_time_, other->_impl_.event_time_);
}

::google::protobuf::Metadata ImpressionEventData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fimpression_5fevent_5fdata_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fimpression_5fevent_5fdata_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fimpression_5fevent_5fdata_2eproto[0]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1alpha
}  // namespace studio
}  // namespace inworld
}  // namespace ai
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
