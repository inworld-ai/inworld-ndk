#include "ProtoDisableWarning.h"
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ai/inworld/studio/v1alpha/apikeys.proto

#include "ai/inworld/studio/v1alpha/apikeys.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace ai {
namespace inworld {
namespace studio {
namespace v1alpha {

inline constexpr SuspendApiKeyRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SuspendApiKeyRequest::SuspendApiKeyRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SuspendApiKeyRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SuspendApiKeyRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SuspendApiKeyRequestDefaultTypeInternal() {}
  union {
    SuspendApiKeyRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SuspendApiKeyRequestDefaultTypeInternal _SuspendApiKeyRequest_default_instance_;

inline constexpr ListApiKeysRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : parent_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        page_token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        page_size_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ListApiKeysRequest::ListApiKeysRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ListApiKeysRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListApiKeysRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListApiKeysRequestDefaultTypeInternal() {}
  union {
    ListApiKeysRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListApiKeysRequestDefaultTypeInternal _ListApiKeysRequest_default_instance_;

inline constexpr GenerateApiKeyRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : parent_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GenerateApiKeyRequest::GenerateApiKeyRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GenerateApiKeyRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GenerateApiKeyRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GenerateApiKeyRequestDefaultTypeInternal() {}
  union {
    GenerateApiKeyRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GenerateApiKeyRequestDefaultTypeInternal _GenerateApiKeyRequest_default_instance_;

inline constexpr DeleteApiKeyRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DeleteApiKeyRequest::DeleteApiKeyRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DeleteApiKeyRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteApiKeyRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteApiKeyRequestDefaultTypeInternal() {}
  union {
    DeleteApiKeyRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteApiKeyRequestDefaultTypeInternal _DeleteApiKeyRequest_default_instance_;

inline constexpr ActivateApiKeyRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ActivateApiKeyRequest::ActivateApiKeyRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ActivateApiKeyRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ActivateApiKeyRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ActivateApiKeyRequestDefaultTypeInternal() {}
  union {
    ActivateApiKeyRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ActivateApiKeyRequestDefaultTypeInternal _ActivateApiKeyRequest_default_instance_;

inline constexpr ApiKey_UsageLimits::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        expiration_time_{nullptr},
        daily_limit_seconds_amount_{::int64_t{0}},
        total_limit_seconds_amount_{::int64_t{0}},
        max_concurrent_sessions_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ApiKey_UsageLimits::ApiKey_UsageLimits(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ApiKey_UsageLimitsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ApiKey_UsageLimitsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ApiKey_UsageLimitsDefaultTypeInternal() {}
  union {
    ApiKey_UsageLimits _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ApiKey_UsageLimitsDefaultTypeInternal _ApiKey_UsageLimits_default_instance_;

inline constexpr ApiKey::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        secret_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        usage_limits_{nullptr},
        state_{static_cast< ::ai::inworld::studio::v1alpha::ApiKey_State >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR ApiKey::ApiKey(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ApiKeyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ApiKeyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ApiKeyDefaultTypeInternal() {}
  union {
    ApiKey _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ApiKeyDefaultTypeInternal _ApiKey_default_instance_;

inline constexpr ListApiKeysResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : api_keys_{},
        next_page_token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ListApiKeysResponse::ListApiKeysResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ListApiKeysResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListApiKeysResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListApiKeysResponseDefaultTypeInternal() {}
  union {
    ListApiKeysResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListApiKeysResponseDefaultTypeInternal _ListApiKeysResponse_default_instance_;
}  // namespace v1alpha
}  // namespace studio
}  // namespace inworld
}  // namespace ai
static ::_pb::Metadata file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fapikeys_2eproto[8];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_ai_2finworld_2fstudio_2fv1alpha_2fapikeys_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_ai_2finworld_2fstudio_2fv1alpha_2fapikeys_2eproto = nullptr;
const ::uint32_t TableStruct_ai_2finworld_2fstudio_2fv1alpha_2fapikeys_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ApiKey_UsageLimits, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ApiKey_UsageLimits, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ApiKey_UsageLimits, _impl_.max_concurrent_sessions_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ApiKey_UsageLimits, _impl_.daily_limit_seconds_amount_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ApiKey_UsageLimits, _impl_.total_limit_seconds_amount_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ApiKey_UsageLimits, _impl_.expiration_time_),
    ~0u,
    ~0u,
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ApiKey, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ApiKey, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ApiKey, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ApiKey, _impl_.key_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ApiKey, _impl_.secret_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ApiKey, _impl_.state_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ApiKey, _impl_.usage_limits_),
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::GenerateApiKeyRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::GenerateApiKeyRequest, _impl_.parent_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ListApiKeysRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ListApiKeysRequest, _impl_.parent_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ListApiKeysRequest, _impl_.page_size_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ListApiKeysRequest, _impl_.page_token_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::SuspendApiKeyRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::SuspendApiKeyRequest, _impl_.name_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ActivateApiKeyRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ActivateApiKeyRequest, _impl_.name_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::DeleteApiKeyRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::DeleteApiKeyRequest, _impl_.name_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ListApiKeysResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ListApiKeysResponse, _impl_.api_keys_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ListApiKeysResponse, _impl_.next_page_token_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 12, -1, sizeof(::ai::inworld::studio::v1alpha::ApiKey_UsageLimits)},
        {16, 29, -1, sizeof(::ai::inworld::studio::v1alpha::ApiKey)},
        {34, -1, -1, sizeof(::ai::inworld::studio::v1alpha::GenerateApiKeyRequest)},
        {43, -1, -1, sizeof(::ai::inworld::studio::v1alpha::ListApiKeysRequest)},
        {54, -1, -1, sizeof(::ai::inworld::studio::v1alpha::SuspendApiKeyRequest)},
        {63, -1, -1, sizeof(::ai::inworld::studio::v1alpha::ActivateApiKeyRequest)},
        {72, -1, -1, sizeof(::ai::inworld::studio::v1alpha::DeleteApiKeyRequest)},
        {81, -1, -1, sizeof(::ai::inworld::studio::v1alpha::ListApiKeysResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::ai::inworld::studio::v1alpha::_ApiKey_UsageLimits_default_instance_._instance,
    &::ai::inworld::studio::v1alpha::_ApiKey_default_instance_._instance,
    &::ai::inworld::studio::v1alpha::_GenerateApiKeyRequest_default_instance_._instance,
    &::ai::inworld::studio::v1alpha::_ListApiKeysRequest_default_instance_._instance,
    &::ai::inworld::studio::v1alpha::_SuspendApiKeyRequest_default_instance_._instance,
    &::ai::inworld::studio::v1alpha::_ActivateApiKeyRequest_default_instance_._instance,
    &::ai::inworld::studio::v1alpha::_DeleteApiKeyRequest_default_instance_._instance,
    &::ai::inworld::studio::v1alpha::_ListApiKeysResponse_default_instance_._instance,
};
const char descriptor_table_protodef_ai_2finworld_2fstudio_2fv1alpha_2fapikeys_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\'ai/inworld/studio/v1alpha/apikeys.prot"
    "o\022\031ai.inworld.studio.v1alpha\032\034google/api"
    "/annotations.proto\032\027google/api/client.pr"
    "oto\032\037google/api/field_behavior.proto\032\031go"
    "ogle/api/resource.proto\032\033google/protobuf"
    "/empty.proto\032\037google/protobuf/timestamp."
    "proto\032 ai/inworld/options/options.proto\""
    "\203\004\n\006ApiKey\022\014\n\004name\030\001 \001(\t\022\013\n\003key\030\002 \001(\t\022\016\n"
    "\006secret\030\003 \001(\t\0226\n\005state\030\004 \001(\0162\'.ai.inworl"
    "d.studio.v1alpha.ApiKey.State\022C\n\014usage_l"
    "imits\030\005 \001(\0132-.ai.inworld.studio.v1alpha."
    "ApiKey.UsageLimits\032\303\001\n\013UsageLimits\022%\n\027ma"
    "x_concurrent_sessions\030\001 \001(\005B\004\342A\001\001\022(\n\032dai"
    "ly_limit_seconds_amount\030\002 \001(\003B\004\342A\001\001\022(\n\032t"
    "otal_limit_seconds_amount\030\003 \001(\003B\004\342A\001\001\0229\n"
    "\017expiration_time\030\004 \001(\0132\032.google.protobuf"
    ".TimestampB\004\342A\001\001\"F\n\005State\022\025\n\021STATE_UNSPE"
    "CIFIED\020\000\022\n\n\006ACTIVE\020\001\022\r\n\tSUSPENDED\020\002\022\013\n\007D"
    "ELETED\020\003:C\352A@\n\025api.inworld.ai/ApiKey\022\'wo"
    "rkspaces/{workspace}/apikeys/{apikey}\"e\n"
    "\025GenerateApiKeyRequest\022L\n\006parent\030\001 \001(\tB<"
    "\342A\001\002\372A\027\022\025api.inworld.ai/ApiKey\242\317\"\032\n\030\032\026wo"
    "rkspaces/workspace-1\"\211\001\n\022ListApiKeysRequ"
    "est\022L\n\006parent\030\001 \001(\tB<\342A\001\002\372A\027\022\025api.inworl"
    "d.ai/ApiKey\242\317\"\032\n\030\032\026workspaces/workspace-"
    "1\022\021\n\tpage_size\030\002 \001(\005\022\022\n\npage_token\030\003 \001(\t"
    "\"\220\001\n\024SuspendApiKeyRequest\022x\n\004name\030\001 \001(\tB"
    "j\342A\001\002\372A\027\n\025api.inworld.ai/ApiKey\242\317\"H\nF\032Dw"
    "orkspaces/workspace-1/apikeys/00000000-0"
    "000-0000-0000-1000000000000\"\221\001\n\025Activate"
    "ApiKeyRequest\022x\n\004name\030\001 \001(\tBj\342A\001\002\372A\027\n\025ap"
    "i.inworld.ai/ApiKey\242\317\"H\nF\032Dworkspaces/wo"
    "rkspace-1/apikeys/00000000-0000-0000-000"
    "0-1000000000000\"\217\001\n\023DeleteApiKeyRequest\022"
    "x\n\004name\030\001 \001(\tBj\342A\001\002\372A\027\n\025api.inworld.ai/A"
    "piKey\242\317\"H\nF\032Dworkspaces/workspace-1/apik"
    "eys/00000000-0000-0000-0000-100000000000"
    "0\"c\n\023ListApiKeysResponse\0223\n\010api_keys\030\001 \003"
    "(\0132!.ai.inworld.studio.v1alpha.ApiKey\022\027\n"
    "\017next_page_token\030\002 \001(\t2\300\006\n\007ApiKeys\022\245\001\n\013L"
    "istApiKeys\022-.ai.inworld.studio.v1alpha.L"
    "istApiKeysRequest\032..ai.inworld.studio.v1"
    "alpha.ListApiKeysResponse\"7\332A\006parent\202\323\344\223"
    "\002(\022&/v1alpha/{parent=workspaces/*}/apike"
    "ys\022\245\001\n\rSuspendApiKey\022/.ai.inworld.studio"
    ".v1alpha.SuspendApiKeyRequest\032!.ai.inwor"
    "ld.studio.v1alpha.ApiKey\"@\332A\004name\202\323\344\223\0023\""
    "./v1alpha/{name=workspaces/*/apikeys/*}:"
    "suspend:\001*\022\250\001\n\016ActivateApiKey\0220.ai.inwor"
    "ld.studio.v1alpha.ActivateApiKeyRequest\032"
    "!.ai.inworld.studio.v1alpha.ApiKey\"A\332A\004n"
    "ame\202\323\344\223\0024\"//v1alpha/{name=workspaces/*/a"
    "pikeys/*}:activate:\001*\022\215\001\n\014DeleteApiKey\022."
    ".ai.inworld.studio.v1alpha.DeleteApiKeyR"
    "equest\032\026.google.protobuf.Empty\"5\332A\004name\202"
    "\323\344\223\002(*&/v1alpha/{name=workspaces/*/apike"
    "ys/*}\022\251\001\n\016GenerateApiKey\0220.ai.inworld.st"
    "udio.v1alpha.GenerateApiKeyRequest\032!.ai."
    "inworld.studio.v1alpha.ApiKey\"B\332A\006parent"
    "\202\323\344\223\0023\"./v1alpha/{parent=workspaces/*}/a"
    "pikey:generate:\001*B\226\001\n\031ai.inworld.studio."
    "v1alphaB\014ApiKeysProtoP\001ZMgithub.com/inwo"
    "rld-ai/inworld/serving/grpc-gateway/buil"
    "d/proto/studio/v1alpha\252\002\031Ai.Inworld.Stud"
    "io.V1Alphab\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fapikeys_2eproto_deps[7] =
    {
        &::descriptor_table_ai_2finworld_2foptions_2foptions_2eproto,
        &::descriptor_table_google_2fapi_2fannotations_2eproto,
        &::descriptor_table_google_2fapi_2fclient_2eproto,
        &::descriptor_table_google_2fapi_2ffield_5fbehavior_2eproto,
        &::descriptor_table_google_2fapi_2fresource_2eproto,
        &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::absl::once_flag descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fapikeys_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fapikeys_2eproto = {
    false,
    false,
    2578,
    descriptor_table_protodef_ai_2finworld_2fstudio_2fv1alpha_2fapikeys_2eproto,
    "ai/inworld/studio/v1alpha/apikeys.proto",
    &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fapikeys_2eproto_once,
    descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fapikeys_2eproto_deps,
    7,
    8,
    schemas,
    file_default_instances,
    TableStruct_ai_2finworld_2fstudio_2fv1alpha_2fapikeys_2eproto::offsets,
    file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fapikeys_2eproto,
    file_level_enum_descriptors_ai_2finworld_2fstudio_2fv1alpha_2fapikeys_2eproto,
    file_level_service_descriptors_ai_2finworld_2fstudio_2fv1alpha_2fapikeys_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fapikeys_2eproto_getter() {
  return &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fapikeys_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_ai_2finworld_2fstudio_2fv1alpha_2fapikeys_2eproto(&descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fapikeys_2eproto);
namespace ai {
namespace inworld {
namespace studio {
namespace v1alpha {
const ::google::protobuf::EnumDescriptor* ApiKey_State_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fapikeys_2eproto);
  return file_level_enum_descriptors_ai_2finworld_2fstudio_2fv1alpha_2fapikeys_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t ApiKey_State_internal_data_[] = {
    262144u, 0u, };
bool ApiKey_State_IsValid(int value) {
  return 0 <= value && value <= 3;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr ApiKey_State ApiKey::STATE_UNSPECIFIED;
constexpr ApiKey_State ApiKey::ACTIVE;
constexpr ApiKey_State ApiKey::SUSPENDED;
constexpr ApiKey_State ApiKey::DELETED;
constexpr ApiKey_State ApiKey::State_MIN;
constexpr ApiKey_State ApiKey::State_MAX;
constexpr int ApiKey::State_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class ApiKey_UsageLimits::_Internal {
 public:
  using HasBits = decltype(std::declval<ApiKey_UsageLimits>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ApiKey_UsageLimits, _impl_._has_bits_);
  static const ::google::protobuf::Timestamp& expiration_time(const ApiKey_UsageLimits* msg);
  static void set_has_expiration_time(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::google::protobuf::Timestamp& ApiKey_UsageLimits::_Internal::expiration_time(const ApiKey_UsageLimits* msg) {
  return *msg->_impl_.expiration_time_;
}
void ApiKey_UsageLimits::clear_expiration_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.expiration_time_ != nullptr) _impl_.expiration_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ApiKey_UsageLimits::ApiKey_UsageLimits(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.ApiKey.UsageLimits)
}
inline PROTOBUF_NDEBUG_INLINE ApiKey_UsageLimits::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ApiKey_UsageLimits::ApiKey_UsageLimits(
    ::google::protobuf::Arena* arena,
    const ApiKey_UsageLimits& from)
    : ::google::protobuf::Message(arena) {
  ApiKey_UsageLimits* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.expiration_time_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::google::protobuf::Timestamp>(arena, *from._impl_.expiration_time_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, daily_limit_seconds_amount_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, daily_limit_seconds_amount_),
           offsetof(Impl_, max_concurrent_sessions_) -
               offsetof(Impl_, daily_limit_seconds_amount_) +
               sizeof(Impl_::max_concurrent_sessions_));

  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.ApiKey.UsageLimits)
}
inline PROTOBUF_NDEBUG_INLINE ApiKey_UsageLimits::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ApiKey_UsageLimits::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, expiration_time_),
           0,
           offsetof(Impl_, max_concurrent_sessions_) -
               offsetof(Impl_, expiration_time_) +
               sizeof(Impl_::max_concurrent_sessions_));
}
ApiKey_UsageLimits::~ApiKey_UsageLimits() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.ApiKey.UsageLimits)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ApiKey_UsageLimits::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.expiration_time_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ApiKey_UsageLimits::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.ApiKey.UsageLimits)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.expiration_time_ != nullptr);
    _impl_.expiration_time_->Clear();
  }
  ::memset(&_impl_.daily_limit_seconds_amount_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.max_concurrent_sessions_) -
      reinterpret_cast<char*>(&_impl_.daily_limit_seconds_amount_)) + sizeof(_impl_.max_concurrent_sessions_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ApiKey_UsageLimits::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 0, 2> ApiKey_UsageLimits::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ApiKey_UsageLimits, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ApiKey_UsageLimits_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .google.protobuf.Timestamp expiration_time = 4 [(.google.api.field_behavior) = OPTIONAL];
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(ApiKey_UsageLimits, _impl_.expiration_time_)}},
    // int32 max_concurrent_sessions = 1 [(.google.api.field_behavior) = OPTIONAL];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ApiKey_UsageLimits, _impl_.max_concurrent_sessions_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ApiKey_UsageLimits, _impl_.max_concurrent_sessions_)}},
    // int64 daily_limit_seconds_amount = 2 [(.google.api.field_behavior) = OPTIONAL];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ApiKey_UsageLimits, _impl_.daily_limit_seconds_amount_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ApiKey_UsageLimits, _impl_.daily_limit_seconds_amount_)}},
    // int64 total_limit_seconds_amount = 3 [(.google.api.field_behavior) = OPTIONAL];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ApiKey_UsageLimits, _impl_.total_limit_seconds_amount_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(ApiKey_UsageLimits, _impl_.total_limit_seconds_amount_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 max_concurrent_sessions = 1 [(.google.api.field_behavior) = OPTIONAL];
    {PROTOBUF_FIELD_OFFSET(ApiKey_UsageLimits, _impl_.max_concurrent_sessions_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int64 daily_limit_seconds_amount = 2 [(.google.api.field_behavior) = OPTIONAL];
    {PROTOBUF_FIELD_OFFSET(ApiKey_UsageLimits, _impl_.daily_limit_seconds_amount_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 total_limit_seconds_amount = 3 [(.google.api.field_behavior) = OPTIONAL];
    {PROTOBUF_FIELD_OFFSET(ApiKey_UsageLimits, _impl_.total_limit_seconds_amount_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // .google.protobuf.Timestamp expiration_time = 4 [(.google.api.field_behavior) = OPTIONAL];
    {PROTOBUF_FIELD_OFFSET(ApiKey_UsageLimits, _impl_.expiration_time_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
  }},
};

::uint8_t* ApiKey_UsageLimits::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.ApiKey.UsageLimits)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 max_concurrent_sessions = 1 [(.google.api.field_behavior) = OPTIONAL];
  if (this->_internal_max_concurrent_sessions() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_max_concurrent_sessions(), target);
  }

  // int64 daily_limit_seconds_amount = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (this->_internal_daily_limit_seconds_amount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<2>(
            stream, this->_internal_daily_limit_seconds_amount(), target);
  }

  // int64 total_limit_seconds_amount = 3 [(.google.api.field_behavior) = OPTIONAL];
  if (this->_internal_total_limit_seconds_amount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<3>(
            stream, this->_internal_total_limit_seconds_amount(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Timestamp expiration_time = 4 [(.google.api.field_behavior) = OPTIONAL];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, _Internal::expiration_time(this),
        _Internal::expiration_time(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.ApiKey.UsageLimits)
  return target;
}

::size_t ApiKey_UsageLimits::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.ApiKey.UsageLimits)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Timestamp expiration_time = 4 [(.google.api.field_behavior) = OPTIONAL];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.expiration_time_);
  }

  // int64 daily_limit_seconds_amount = 2 [(.google.api.field_behavior) = OPTIONAL];
  if (this->_internal_daily_limit_seconds_amount() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_daily_limit_seconds_amount());
  }

  // int64 total_limit_seconds_amount = 3 [(.google.api.field_behavior) = OPTIONAL];
  if (this->_internal_total_limit_seconds_amount() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_total_limit_seconds_amount());
  }

  // int32 max_concurrent_sessions = 1 [(.google.api.field_behavior) = OPTIONAL];
  if (this->_internal_max_concurrent_sessions() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_max_concurrent_sessions());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ApiKey_UsageLimits::_class_data_ = {
    ApiKey_UsageLimits::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ApiKey_UsageLimits::GetClassData() const {
  return &_class_data_;
}

void ApiKey_UsageLimits::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ApiKey_UsageLimits*>(&to_msg);
  auto& from = static_cast<const ApiKey_UsageLimits&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.ApiKey.UsageLimits)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_expiration_time()->::google::protobuf::Timestamp::MergeFrom(
        from._internal_expiration_time());
  }
  if (from._internal_daily_limit_seconds_amount() != 0) {
    _this->_internal_set_daily_limit_seconds_amount(from._internal_daily_limit_seconds_amount());
  }
  if (from._internal_total_limit_seconds_amount() != 0) {
    _this->_internal_set_total_limit_seconds_amount(from._internal_total_limit_seconds_amount());
  }
  if (from._internal_max_concurrent_sessions() != 0) {
    _this->_internal_set_max_concurrent_sessions(from._internal_max_concurrent_sessions());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ApiKey_UsageLimits::CopyFrom(const ApiKey_UsageLimits& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.ApiKey.UsageLimits)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ApiKey_UsageLimits::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ApiKey_UsageLimits::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ApiKey_UsageLimits::InternalSwap(ApiKey_UsageLimits* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ApiKey_UsageLimits, _impl_.max_concurrent_sessions_)
      + sizeof(ApiKey_UsageLimits::_impl_.max_concurrent_sessions_)
      - PROTOBUF_FIELD_OFFSET(ApiKey_UsageLimits, _impl_.expiration_time_)>(
          reinterpret_cast<char*>(&_impl_.expiration_time_),
          reinterpret_cast<char*>(&other->_impl_.expiration_time_));
}

::google::protobuf::Metadata ApiKey_UsageLimits::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fapikeys_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fapikeys_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fapikeys_2eproto[0]);
}
// ===================================================================

class ApiKey::_Internal {
 public:
  using HasBits = decltype(std::declval<ApiKey>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(ApiKey, _impl_._has_bits_);
  static const ::ai::inworld::studio::v1alpha::ApiKey_UsageLimits& usage_limits(const ApiKey* msg);
  static void set_has_usage_limits(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::ai::inworld::studio::v1alpha::ApiKey_UsageLimits& ApiKey::_Internal::usage_limits(const ApiKey* msg) {
  return *msg->_impl_.usage_limits_;
}
ApiKey::ApiKey(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.ApiKey)
}
inline PROTOBUF_NDEBUG_INLINE ApiKey::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        name_(arena, from.name_),
        key_(arena, from.key_),
        secret_(arena, from.secret_) {}

ApiKey::ApiKey(
    ::google::protobuf::Arena* arena,
    const ApiKey& from)
    : ::google::protobuf::Message(arena) {
  ApiKey* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.usage_limits_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::ai::inworld::studio::v1alpha::ApiKey_UsageLimits>(arena, *from._impl_.usage_limits_)
                : nullptr;
  _impl_.state_ = from._impl_.state_;

  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.ApiKey)
}
inline PROTOBUF_NDEBUG_INLINE ApiKey::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        name_(arena),
        key_(arena),
        secret_(arena) {}

inline void ApiKey::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, usage_limits_),
           0,
           offsetof(Impl_, state_) -
               offsetof(Impl_, usage_limits_) +
               sizeof(Impl_::state_));
}
ApiKey::~ApiKey() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.ApiKey)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ApiKey::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.key_.Destroy();
  _impl_.secret_.Destroy();
  delete _impl_.usage_limits_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ApiKey::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.ApiKey)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.key_.ClearToEmpty();
  _impl_.secret_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.usage_limits_ != nullptr);
    _impl_.usage_limits_->Clear();
  }
  _impl_.state_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ApiKey::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 54, 2> ApiKey::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ApiKey, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ApiKey_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ApiKey, _impl_.name_)}},
    // string key = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ApiKey, _impl_.key_)}},
    // string secret = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(ApiKey, _impl_.secret_)}},
    // .ai.inworld.studio.v1alpha.ApiKey.State state = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ApiKey, _impl_.state_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(ApiKey, _impl_.state_)}},
    // .ai.inworld.studio.v1alpha.ApiKey.UsageLimits usage_limits = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(ApiKey, _impl_.usage_limits_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(ApiKey, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string key = 2;
    {PROTOBUF_FIELD_OFFSET(ApiKey, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string secret = 3;
    {PROTOBUF_FIELD_OFFSET(ApiKey, _impl_.secret_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .ai.inworld.studio.v1alpha.ApiKey.State state = 4;
    {PROTOBUF_FIELD_OFFSET(ApiKey, _impl_.state_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .ai.inworld.studio.v1alpha.ApiKey.UsageLimits usage_limits = 5;
    {PROTOBUF_FIELD_OFFSET(ApiKey, _impl_.usage_limits_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::ai::inworld::studio::v1alpha::ApiKey_UsageLimits>()},
  }}, {{
    "\40\4\3\6\0\0\0\0"
    "ai.inworld.studio.v1alpha.ApiKey"
    "name"
    "key"
    "secret"
  }},
};

::uint8_t* ApiKey::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.ApiKey)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ai.inworld.studio.v1alpha.ApiKey.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string key = 2;
  if (!this->_internal_key().empty()) {
    const std::string& _s = this->_internal_key();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ai.inworld.studio.v1alpha.ApiKey.key");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string secret = 3;
  if (!this->_internal_secret().empty()) {
    const std::string& _s = this->_internal_secret();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ai.inworld.studio.v1alpha.ApiKey.secret");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // .ai.inworld.studio.v1alpha.ApiKey.State state = 4;
  if (this->_internal_state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        4, this->_internal_state(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .ai.inworld.studio.v1alpha.ApiKey.UsageLimits usage_limits = 5;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, _Internal::usage_limits(this),
        _Internal::usage_limits(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.ApiKey)
  return target;
}

::size_t ApiKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.ApiKey)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // string key = 2;
  if (!this->_internal_key().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_key());
  }

  // string secret = 3;
  if (!this->_internal_secret().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_secret());
  }

  // .ai.inworld.studio.v1alpha.ApiKey.UsageLimits usage_limits = 5;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.usage_limits_);
  }

  // .ai.inworld.studio.v1alpha.ApiKey.State state = 4;
  if (this->_internal_state() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_state());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ApiKey::_class_data_ = {
    ApiKey::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ApiKey::GetClassData() const {
  return &_class_data_;
}

void ApiKey::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ApiKey*>(&to_msg);
  auto& from = static_cast<const ApiKey&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.ApiKey)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_key().empty()) {
    _this->_internal_set_key(from._internal_key());
  }
  if (!from._internal_secret().empty()) {
    _this->_internal_set_secret(from._internal_secret());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_usage_limits()->::ai::inworld::studio::v1alpha::ApiKey_UsageLimits::MergeFrom(
        from._internal_usage_limits());
  }
  if (from._internal_state() != 0) {
    _this->_internal_set_state(from._internal_state());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ApiKey::CopyFrom(const ApiKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.ApiKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ApiKey::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ApiKey::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ApiKey::InternalSwap(ApiKey* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.key_, &other->_impl_.key_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.secret_, &other->_impl_.secret_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ApiKey, _impl_.state_)
      + sizeof(ApiKey::_impl_.state_)
      - PROTOBUF_FIELD_OFFSET(ApiKey, _impl_.usage_limits_)>(
          reinterpret_cast<char*>(&_impl_.usage_limits_),
          reinterpret_cast<char*>(&other->_impl_.usage_limits_));
}

::google::protobuf::Metadata ApiKey::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fapikeys_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fapikeys_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fapikeys_2eproto[1]);
}
// ===================================================================

class GenerateApiKeyRequest::_Internal {
 public:
};

GenerateApiKeyRequest::GenerateApiKeyRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.GenerateApiKeyRequest)
}
inline PROTOBUF_NDEBUG_INLINE GenerateApiKeyRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : parent_(arena, from.parent_),
        _cached_size_{0} {}

GenerateApiKeyRequest::GenerateApiKeyRequest(
    ::google::protobuf::Arena* arena,
    const GenerateApiKeyRequest& from)
    : ::google::protobuf::Message(arena) {
  GenerateApiKeyRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.GenerateApiKeyRequest)
}
inline PROTOBUF_NDEBUG_INLINE GenerateApiKeyRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : parent_(arena),
        _cached_size_{0} {}

inline void GenerateApiKeyRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GenerateApiKeyRequest::~GenerateApiKeyRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.GenerateApiKeyRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GenerateApiKeyRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.parent_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GenerateApiKeyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.GenerateApiKeyRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.parent_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GenerateApiKeyRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 62, 2> GenerateApiKeyRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GenerateApiKeyRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GenerateApiKeyRequest, _impl_.parent_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
    {PROTOBUF_FIELD_OFFSET(GenerateApiKeyRequest, _impl_.parent_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\57\6\0\0\0\0\0\0"
    "ai.inworld.studio.v1alpha.GenerateApiKeyRequest"
    "parent"
  }},
};

::uint8_t* GenerateApiKeyRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.GenerateApiKeyRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    const std::string& _s = this->_internal_parent();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ai.inworld.studio.v1alpha.GenerateApiKeyRequest.parent");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.GenerateApiKeyRequest)
  return target;
}

::size_t GenerateApiKeyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.GenerateApiKeyRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_parent());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GenerateApiKeyRequest::_class_data_ = {
    GenerateApiKeyRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GenerateApiKeyRequest::GetClassData() const {
  return &_class_data_;
}

void GenerateApiKeyRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GenerateApiKeyRequest*>(&to_msg);
  auto& from = static_cast<const GenerateApiKeyRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.GenerateApiKeyRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_parent().empty()) {
    _this->_internal_set_parent(from._internal_parent());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GenerateApiKeyRequest::CopyFrom(const GenerateApiKeyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.GenerateApiKeyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GenerateApiKeyRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GenerateApiKeyRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GenerateApiKeyRequest::InternalSwap(GenerateApiKeyRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.parent_, &other->_impl_.parent_, arena);
}

::google::protobuf::Metadata GenerateApiKeyRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fapikeys_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fapikeys_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fapikeys_2eproto[2]);
}
// ===================================================================

class ListApiKeysRequest::_Internal {
 public:
};

ListApiKeysRequest::ListApiKeysRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.ListApiKeysRequest)
}
inline PROTOBUF_NDEBUG_INLINE ListApiKeysRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : parent_(arena, from.parent_),
        page_token_(arena, from.page_token_),
        _cached_size_{0} {}

ListApiKeysRequest::ListApiKeysRequest(
    ::google::protobuf::Arena* arena,
    const ListApiKeysRequest& from)
    : ::google::protobuf::Message(arena) {
  ListApiKeysRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.page_size_ = from._impl_.page_size_;

  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.ListApiKeysRequest)
}
inline PROTOBUF_NDEBUG_INLINE ListApiKeysRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : parent_(arena),
        page_token_(arena),
        _cached_size_{0} {}

inline void ListApiKeysRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.page_size_ = {};
}
ListApiKeysRequest::~ListApiKeysRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.ListApiKeysRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ListApiKeysRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.parent_.Destroy();
  _impl_.page_token_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ListApiKeysRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.ListApiKeysRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.parent_.ClearToEmpty();
  _impl_.page_token_.ClearToEmpty();
  _impl_.page_size_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ListApiKeysRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 69, 2> ListApiKeysRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ListApiKeysRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ListApiKeysRequest, _impl_.parent_)}},
    // int32 page_size = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ListApiKeysRequest, _impl_.page_size_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ListApiKeysRequest, _impl_.page_size_)}},
    // string page_token = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(ListApiKeysRequest, _impl_.page_token_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
    {PROTOBUF_FIELD_OFFSET(ListApiKeysRequest, _impl_.parent_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 page_size = 2;
    {PROTOBUF_FIELD_OFFSET(ListApiKeysRequest, _impl_.page_size_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string page_token = 3;
    {PROTOBUF_FIELD_OFFSET(ListApiKeysRequest, _impl_.page_token_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\54\6\0\12\0\0\0\0"
    "ai.inworld.studio.v1alpha.ListApiKeysRequest"
    "parent"
    "page_token"
  }},
};

::uint8_t* ListApiKeysRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.ListApiKeysRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    const std::string& _s = this->_internal_parent();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ai.inworld.studio.v1alpha.ListApiKeysRequest.parent");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // int32 page_size = 2;
  if (this->_internal_page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_page_size(), target);
  }

  // string page_token = 3;
  if (!this->_internal_page_token().empty()) {
    const std::string& _s = this->_internal_page_token();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ai.inworld.studio.v1alpha.ListApiKeysRequest.page_token");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.ListApiKeysRequest)
  return target;
}

::size_t ListApiKeysRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.ListApiKeysRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_parent().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_parent());
  }

  // string page_token = 3;
  if (!this->_internal_page_token().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_page_token());
  }

  // int32 page_size = 2;
  if (this->_internal_page_size() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_page_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ListApiKeysRequest::_class_data_ = {
    ListApiKeysRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ListApiKeysRequest::GetClassData() const {
  return &_class_data_;
}

void ListApiKeysRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ListApiKeysRequest*>(&to_msg);
  auto& from = static_cast<const ListApiKeysRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.ListApiKeysRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_parent().empty()) {
    _this->_internal_set_parent(from._internal_parent());
  }
  if (!from._internal_page_token().empty()) {
    _this->_internal_set_page_token(from._internal_page_token());
  }
  if (from._internal_page_size() != 0) {
    _this->_internal_set_page_size(from._internal_page_size());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ListApiKeysRequest::CopyFrom(const ListApiKeysRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.ListApiKeysRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ListApiKeysRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ListApiKeysRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ListApiKeysRequest::InternalSwap(ListApiKeysRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.parent_, &other->_impl_.parent_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.page_token_, &other->_impl_.page_token_, arena);
        swap(_impl_.page_size_, other->_impl_.page_size_);
}

::google::protobuf::Metadata ListApiKeysRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fapikeys_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fapikeys_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fapikeys_2eproto[3]);
}
// ===================================================================

class SuspendApiKeyRequest::_Internal {
 public:
};

SuspendApiKeyRequest::SuspendApiKeyRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.SuspendApiKeyRequest)
}
inline PROTOBUF_NDEBUG_INLINE SuspendApiKeyRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : name_(arena, from.name_),
        _cached_size_{0} {}

SuspendApiKeyRequest::SuspendApiKeyRequest(
    ::google::protobuf::Arena* arena,
    const SuspendApiKeyRequest& from)
    : ::google::protobuf::Message(arena) {
  SuspendApiKeyRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.SuspendApiKeyRequest)
}
inline PROTOBUF_NDEBUG_INLINE SuspendApiKeyRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        _cached_size_{0} {}

inline void SuspendApiKeyRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SuspendApiKeyRequest::~SuspendApiKeyRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.SuspendApiKeyRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SuspendApiKeyRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SuspendApiKeyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.SuspendApiKeyRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SuspendApiKeyRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 59, 2> SuspendApiKeyRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SuspendApiKeyRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SuspendApiKeyRequest, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
    {PROTOBUF_FIELD_OFFSET(SuspendApiKeyRequest, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\56\4\0\0\0\0\0\0"
    "ai.inworld.studio.v1alpha.SuspendApiKeyRequest"
    "name"
  }},
};

::uint8_t* SuspendApiKeyRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.SuspendApiKeyRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ai.inworld.studio.v1alpha.SuspendApiKeyRequest.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.SuspendApiKeyRequest)
  return target;
}

::size_t SuspendApiKeyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.SuspendApiKeyRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SuspendApiKeyRequest::_class_data_ = {
    SuspendApiKeyRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SuspendApiKeyRequest::GetClassData() const {
  return &_class_data_;
}

void SuspendApiKeyRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SuspendApiKeyRequest*>(&to_msg);
  auto& from = static_cast<const SuspendApiKeyRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.SuspendApiKeyRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SuspendApiKeyRequest::CopyFrom(const SuspendApiKeyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.SuspendApiKeyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SuspendApiKeyRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SuspendApiKeyRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SuspendApiKeyRequest::InternalSwap(SuspendApiKeyRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
}

::google::protobuf::Metadata SuspendApiKeyRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fapikeys_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fapikeys_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fapikeys_2eproto[4]);
}
// ===================================================================

class ActivateApiKeyRequest::_Internal {
 public:
};

ActivateApiKeyRequest::ActivateApiKeyRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.ActivateApiKeyRequest)
}
inline PROTOBUF_NDEBUG_INLINE ActivateApiKeyRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : name_(arena, from.name_),
        _cached_size_{0} {}

ActivateApiKeyRequest::ActivateApiKeyRequest(
    ::google::protobuf::Arena* arena,
    const ActivateApiKeyRequest& from)
    : ::google::protobuf::Message(arena) {
  ActivateApiKeyRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.ActivateApiKeyRequest)
}
inline PROTOBUF_NDEBUG_INLINE ActivateApiKeyRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        _cached_size_{0} {}

inline void ActivateApiKeyRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ActivateApiKeyRequest::~ActivateApiKeyRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.ActivateApiKeyRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ActivateApiKeyRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ActivateApiKeyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.ActivateApiKeyRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ActivateApiKeyRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 60, 2> ActivateApiKeyRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ActivateApiKeyRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ActivateApiKeyRequest, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
    {PROTOBUF_FIELD_OFFSET(ActivateApiKeyRequest, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\57\4\0\0\0\0\0\0"
    "ai.inworld.studio.v1alpha.ActivateApiKeyRequest"
    "name"
  }},
};

::uint8_t* ActivateApiKeyRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.ActivateApiKeyRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ai.inworld.studio.v1alpha.ActivateApiKeyRequest.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.ActivateApiKeyRequest)
  return target;
}

::size_t ActivateApiKeyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.ActivateApiKeyRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ActivateApiKeyRequest::_class_data_ = {
    ActivateApiKeyRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ActivateApiKeyRequest::GetClassData() const {
  return &_class_data_;
}

void ActivateApiKeyRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ActivateApiKeyRequest*>(&to_msg);
  auto& from = static_cast<const ActivateApiKeyRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.ActivateApiKeyRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ActivateApiKeyRequest::CopyFrom(const ActivateApiKeyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.ActivateApiKeyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ActivateApiKeyRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ActivateApiKeyRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ActivateApiKeyRequest::InternalSwap(ActivateApiKeyRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
}

::google::protobuf::Metadata ActivateApiKeyRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fapikeys_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fapikeys_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fapikeys_2eproto[5]);
}
// ===================================================================

class DeleteApiKeyRequest::_Internal {
 public:
};

DeleteApiKeyRequest::DeleteApiKeyRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.DeleteApiKeyRequest)
}
inline PROTOBUF_NDEBUG_INLINE DeleteApiKeyRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : name_(arena, from.name_),
        _cached_size_{0} {}

DeleteApiKeyRequest::DeleteApiKeyRequest(
    ::google::protobuf::Arena* arena,
    const DeleteApiKeyRequest& from)
    : ::google::protobuf::Message(arena) {
  DeleteApiKeyRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.DeleteApiKeyRequest)
}
inline PROTOBUF_NDEBUG_INLINE DeleteApiKeyRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        _cached_size_{0} {}

inline void DeleteApiKeyRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
DeleteApiKeyRequest::~DeleteApiKeyRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.DeleteApiKeyRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DeleteApiKeyRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DeleteApiKeyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.DeleteApiKeyRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DeleteApiKeyRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 58, 2> DeleteApiKeyRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_DeleteApiKeyRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DeleteApiKeyRequest, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
    {PROTOBUF_FIELD_OFFSET(DeleteApiKeyRequest, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\55\4\0\0\0\0\0\0"
    "ai.inworld.studio.v1alpha.DeleteApiKeyRequest"
    "name"
  }},
};

::uint8_t* DeleteApiKeyRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.DeleteApiKeyRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ai.inworld.studio.v1alpha.DeleteApiKeyRequest.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.DeleteApiKeyRequest)
  return target;
}

::size_t DeleteApiKeyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.DeleteApiKeyRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DeleteApiKeyRequest::_class_data_ = {
    DeleteApiKeyRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DeleteApiKeyRequest::GetClassData() const {
  return &_class_data_;
}

void DeleteApiKeyRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DeleteApiKeyRequest*>(&to_msg);
  auto& from = static_cast<const DeleteApiKeyRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.DeleteApiKeyRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteApiKeyRequest::CopyFrom(const DeleteApiKeyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.DeleteApiKeyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DeleteApiKeyRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DeleteApiKeyRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DeleteApiKeyRequest::InternalSwap(DeleteApiKeyRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
}

::google::protobuf::Metadata DeleteApiKeyRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fapikeys_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fapikeys_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fapikeys_2eproto[6]);
}
// ===================================================================

class ListApiKeysResponse::_Internal {
 public:
};

ListApiKeysResponse::ListApiKeysResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.ListApiKeysResponse)
}
inline PROTOBUF_NDEBUG_INLINE ListApiKeysResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : api_keys_{visibility, arena, from.api_keys_},
        next_page_token_(arena, from.next_page_token_),
        _cached_size_{0} {}

ListApiKeysResponse::ListApiKeysResponse(
    ::google::protobuf::Arena* arena,
    const ListApiKeysResponse& from)
    : ::google::protobuf::Message(arena) {
  ListApiKeysResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.ListApiKeysResponse)
}
inline PROTOBUF_NDEBUG_INLINE ListApiKeysResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : api_keys_{visibility, arena},
        next_page_token_(arena),
        _cached_size_{0} {}

inline void ListApiKeysResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ListApiKeysResponse::~ListApiKeysResponse() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.ListApiKeysResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ListApiKeysResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.next_page_token_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ListApiKeysResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.ListApiKeysResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.api_keys_.Clear();
  _impl_.next_page_token_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ListApiKeysResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 69, 2> ListApiKeysResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ListApiKeysResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string next_page_token = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ListApiKeysResponse, _impl_.next_page_token_)}},
    // repeated .ai.inworld.studio.v1alpha.ApiKey api_keys = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ListApiKeysResponse, _impl_.api_keys_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .ai.inworld.studio.v1alpha.ApiKey api_keys = 1;
    {PROTOBUF_FIELD_OFFSET(ListApiKeysResponse, _impl_.api_keys_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string next_page_token = 2;
    {PROTOBUF_FIELD_OFFSET(ListApiKeysResponse, _impl_.next_page_token_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::ai::inworld::studio::v1alpha::ApiKey>()},
  }}, {{
    "\55\0\17\0\0\0\0\0"
    "ai.inworld.studio.v1alpha.ListApiKeysResponse"
    "next_page_token"
  }},
};

::uint8_t* ListApiKeysResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.ListApiKeysResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .ai.inworld.studio.v1alpha.ApiKey api_keys = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_api_keys_size()); i < n; i++) {
    const auto& repfield = this->_internal_api_keys().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string next_page_token = 2;
  if (!this->_internal_next_page_token().empty()) {
    const std::string& _s = this->_internal_next_page_token();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ai.inworld.studio.v1alpha.ListApiKeysResponse.next_page_token");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.ListApiKeysResponse)
  return target;
}

::size_t ListApiKeysResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.ListApiKeysResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ai.inworld.studio.v1alpha.ApiKey api_keys = 1;
  total_size += 1UL * this->_internal_api_keys_size();
  for (const auto& msg : this->_internal_api_keys()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string next_page_token = 2;
  if (!this->_internal_next_page_token().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_next_page_token());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ListApiKeysResponse::_class_data_ = {
    ListApiKeysResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ListApiKeysResponse::GetClassData() const {
  return &_class_data_;
}

void ListApiKeysResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ListApiKeysResponse*>(&to_msg);
  auto& from = static_cast<const ListApiKeysResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.ListApiKeysResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_api_keys()->MergeFrom(
      from._internal_api_keys());
  if (!from._internal_next_page_token().empty()) {
    _this->_internal_set_next_page_token(from._internal_next_page_token());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ListApiKeysResponse::CopyFrom(const ListApiKeysResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.ListApiKeysResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ListApiKeysResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ListApiKeysResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ListApiKeysResponse::InternalSwap(ListApiKeysResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.api_keys_.InternalSwap(&other->_impl_.api_keys_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.next_page_token_, &other->_impl_.next_page_token_, arena);
}

::google::protobuf::Metadata ListApiKeysResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fapikeys_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fapikeys_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fapikeys_2eproto[7]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1alpha
}  // namespace studio
}  // namespace inworld
}  // namespace ai
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
