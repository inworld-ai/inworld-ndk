// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ai/inworld/studio/v1alpha/behavioral_contexts.proto
// Protobuf C++ Version: 4.25.0

#ifndef GOOGLE_PROTOBUF_INCLUDED_ai_2finworld_2fstudio_2fv1alpha_2fbehavioral_5fcontexts_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_ai_2finworld_2fstudio_2fv1alpha_2fbehavioral_5fcontexts_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025000 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "google/api/field_behavior.pb.h"
#include "google/api/resource.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_ai_2finworld_2fstudio_2fv1alpha_2fbehavioral_5fcontexts_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_ai_2finworld_2fstudio_2fv1alpha_2fbehavioral_5fcontexts_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fbehavioral_5fcontexts_2eproto;
namespace ai {
namespace inworld {
namespace studio {
namespace v1alpha {
class BehavioralContext;
struct BehavioralContextDefaultTypeInternal;
extern BehavioralContextDefaultTypeInternal _BehavioralContext_default_instance_;
class BehavioralContextAction;
struct BehavioralContextActionDefaultTypeInternal;
extern BehavioralContextActionDefaultTypeInternal _BehavioralContextAction_default_instance_;
class BehavioralContextInteraction;
struct BehavioralContextInteractionDefaultTypeInternal;
extern BehavioralContextInteractionDefaultTypeInternal _BehavioralContextInteraction_default_instance_;
class BehavioralContextProperties;
struct BehavioralContextPropertiesDefaultTypeInternal;
extern BehavioralContextPropertiesDefaultTypeInternal _BehavioralContextProperties_default_instance_;
class SendCustomEventContextAction;
struct SendCustomEventContextActionDefaultTypeInternal;
extern SendCustomEventContextActionDefaultTypeInternal _SendCustomEventContextAction_default_instance_;
class SetEmotionContextAction;
struct SetEmotionContextActionDefaultTypeInternal;
extern SetEmotionContextActionDefaultTypeInternal _SetEmotionContextAction_default_instance_;
class TellExactTextContextAction;
struct TellExactTextContextActionDefaultTypeInternal;
extern TellExactTextContextActionDefaultTypeInternal _TellExactTextContextAction_default_instance_;
class TellInstructedContextAction;
struct TellInstructedContextActionDefaultTypeInternal;
extern TellInstructedContextActionDefaultTypeInternal _TellInstructedContextAction_default_instance_;
}  // namespace v1alpha
}  // namespace studio
}  // namespace inworld
}  // namespace ai
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace ai {
namespace inworld {
namespace studio {
namespace v1alpha {
enum BehavioralContextInteractionType : int {
  BEHAVIORAL_CONTEXT_INTERACTION_TYPE_UNSPECIFIED = 0,
  BEHAVIORAL_CONTEXT_INTERACTION_TYPE_EXECUTE_SEQUENCE = 1,
  BehavioralContextInteractionType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  BehavioralContextInteractionType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool BehavioralContextInteractionType_IsValid(int value);
extern const uint32_t BehavioralContextInteractionType_internal_data_[];
constexpr BehavioralContextInteractionType BehavioralContextInteractionType_MIN = static_cast<BehavioralContextInteractionType>(0);
constexpr BehavioralContextInteractionType BehavioralContextInteractionType_MAX = static_cast<BehavioralContextInteractionType>(1);
constexpr int BehavioralContextInteractionType_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor*
BehavioralContextInteractionType_descriptor();
template <typename T>
const std::string& BehavioralContextInteractionType_Name(T value) {
  static_assert(std::is_same<T, BehavioralContextInteractionType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to BehavioralContextInteractionType_Name().");
  return BehavioralContextInteractionType_Name(static_cast<BehavioralContextInteractionType>(value));
}
template <>
inline const std::string& BehavioralContextInteractionType_Name(BehavioralContextInteractionType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<BehavioralContextInteractionType_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool BehavioralContextInteractionType_Parse(absl::string_view name, BehavioralContextInteractionType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BehavioralContextInteractionType>(
      BehavioralContextInteractionType_descriptor(), name, value);
}
enum SpaffCode : int {
  SPAFF_CODE_UNSPECIFIED = 0,
  NEUTRAL = 1,
  DISGUST = 2,
  CONTEMPT = 3,
  BELLIGERENCE = 4,
  DOMINEERING = 5,
  CRITICISM = 6,
  ANGER = 7,
  TENSION = 8,
  TENSE_HUMOR = 9,
  DEFENSIVENESS = 10,
  WHINING = 11,
  SADNESS = 12,
  STONEWALLING = 13,
  INTEREST = 14,
  VALIDATION = 15,
  AFFECTION = 16,
  HUMOR = 17,
  SURPRISE = 18,
  JOY = 19,
  SpaffCode_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  SpaffCode_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool SpaffCode_IsValid(int value);
extern const uint32_t SpaffCode_internal_data_[];
constexpr SpaffCode SpaffCode_MIN = static_cast<SpaffCode>(0);
constexpr SpaffCode SpaffCode_MAX = static_cast<SpaffCode>(19);
constexpr int SpaffCode_ARRAYSIZE = 19 + 1;
const ::google::protobuf::EnumDescriptor*
SpaffCode_descriptor();
template <typename T>
const std::string& SpaffCode_Name(T value) {
  static_assert(std::is_same<T, SpaffCode>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to SpaffCode_Name().");
  return SpaffCode_Name(static_cast<SpaffCode>(value));
}
template <>
inline const std::string& SpaffCode_Name(SpaffCode value) {
  return ::google::protobuf::internal::NameOfDenseEnum<SpaffCode_descriptor,
                                                 0, 19>(
      static_cast<int>(value));
}
inline bool SpaffCode_Parse(absl::string_view name, SpaffCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SpaffCode>(
      SpaffCode_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class TellInstructedContextAction final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ai.inworld.studio.v1alpha.TellInstructedContextAction) */ {
 public:
  inline TellInstructedContextAction() : TellInstructedContextAction(nullptr) {}
  ~TellInstructedContextAction() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR TellInstructedContextAction(::google::protobuf::internal::ConstantInitialized);

  inline TellInstructedContextAction(const TellInstructedContextAction& from)
      : TellInstructedContextAction(nullptr, from) {}
  TellInstructedContextAction(TellInstructedContextAction&& from) noexcept
    : TellInstructedContextAction() {
    *this = ::std::move(from);
  }

  inline TellInstructedContextAction& operator=(const TellInstructedContextAction& from) {
    CopyFrom(from);
    return *this;
  }
  inline TellInstructedContextAction& operator=(TellInstructedContextAction&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TellInstructedContextAction& default_instance() {
    return *internal_default_instance();
  }
  static inline const TellInstructedContextAction* internal_default_instance() {
    return reinterpret_cast<const TellInstructedContextAction*>(
               &_TellInstructedContextAction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(TellInstructedContextAction& a, TellInstructedContextAction& b) {
    a.Swap(&b);
  }
  inline void Swap(TellInstructedContextAction* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TellInstructedContextAction* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TellInstructedContextAction* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TellInstructedContextAction>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TellInstructedContextAction& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const TellInstructedContextAction& from) {
    TellInstructedContextAction::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TellInstructedContextAction* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ai.inworld.studio.v1alpha.TellInstructedContextAction";
  }
  protected:
  explicit TellInstructedContextAction(::google::protobuf::Arena* arena);
  TellInstructedContextAction(::google::protobuf::Arena* arena, const TellInstructedContextAction& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSpeechInstructionFieldNumber = 1,
  };
  // string speech_instruction = 1;
  void clear_speech_instruction() ;
  const std::string& speech_instruction() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_speech_instruction(Arg_&& arg, Args_... args);
  std::string* mutable_speech_instruction();
  PROTOBUF_NODISCARD std::string* release_speech_instruction();
  void set_allocated_speech_instruction(std::string* value);

  private:
  const std::string& _internal_speech_instruction() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_speech_instruction(
      const std::string& value);
  std::string* _internal_mutable_speech_instruction();

  public:
  // @@protoc_insertion_point(class_scope:ai.inworld.studio.v1alpha.TellInstructedContextAction)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      80, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr speech_instruction_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ai_2finworld_2fstudio_2fv1alpha_2fbehavioral_5fcontexts_2eproto;
};// -------------------------------------------------------------------

class TellExactTextContextAction final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ai.inworld.studio.v1alpha.TellExactTextContextAction) */ {
 public:
  inline TellExactTextContextAction() : TellExactTextContextAction(nullptr) {}
  ~TellExactTextContextAction() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR TellExactTextContextAction(::google::protobuf::internal::ConstantInitialized);

  inline TellExactTextContextAction(const TellExactTextContextAction& from)
      : TellExactTextContextAction(nullptr, from) {}
  TellExactTextContextAction(TellExactTextContextAction&& from) noexcept
    : TellExactTextContextAction() {
    *this = ::std::move(from);
  }

  inline TellExactTextContextAction& operator=(const TellExactTextContextAction& from) {
    CopyFrom(from);
    return *this;
  }
  inline TellExactTextContextAction& operator=(TellExactTextContextAction&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TellExactTextContextAction& default_instance() {
    return *internal_default_instance();
  }
  static inline const TellExactTextContextAction* internal_default_instance() {
    return reinterpret_cast<const TellExactTextContextAction*>(
               &_TellExactTextContextAction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(TellExactTextContextAction& a, TellExactTextContextAction& b) {
    a.Swap(&b);
  }
  inline void Swap(TellExactTextContextAction* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TellExactTextContextAction* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TellExactTextContextAction* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TellExactTextContextAction>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TellExactTextContextAction& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const TellExactTextContextAction& from) {
    TellExactTextContextAction::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TellExactTextContextAction* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ai.inworld.studio.v1alpha.TellExactTextContextAction";
  }
  protected:
  explicit TellExactTextContextAction(::google::protobuf::Arena* arena);
  TellExactTextContextAction(::google::protobuf::Arena* arena, const TellExactTextContextAction& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kExactTextFieldNumber = 1,
  };
  // string exact_text = 1;
  void clear_exact_text() ;
  const std::string& exact_text() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_exact_text(Arg_&& arg, Args_... args);
  std::string* mutable_exact_text();
  PROTOBUF_NODISCARD std::string* release_exact_text();
  void set_allocated_exact_text(std::string* value);

  private:
  const std::string& _internal_exact_text() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_exact_text(
      const std::string& value);
  std::string* _internal_mutable_exact_text();

  public:
  // @@protoc_insertion_point(class_scope:ai.inworld.studio.v1alpha.TellExactTextContextAction)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      71, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr exact_text_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ai_2finworld_2fstudio_2fv1alpha_2fbehavioral_5fcontexts_2eproto;
};// -------------------------------------------------------------------

class SetEmotionContextAction final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ai.inworld.studio.v1alpha.SetEmotionContextAction) */ {
 public:
  inline SetEmotionContextAction() : SetEmotionContextAction(nullptr) {}
  ~SetEmotionContextAction() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetEmotionContextAction(::google::protobuf::internal::ConstantInitialized);

  inline SetEmotionContextAction(const SetEmotionContextAction& from)
      : SetEmotionContextAction(nullptr, from) {}
  SetEmotionContextAction(SetEmotionContextAction&& from) noexcept
    : SetEmotionContextAction() {
    *this = ::std::move(from);
  }

  inline SetEmotionContextAction& operator=(const SetEmotionContextAction& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetEmotionContextAction& operator=(SetEmotionContextAction&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetEmotionContextAction& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetEmotionContextAction* internal_default_instance() {
    return reinterpret_cast<const SetEmotionContextAction*>(
               &_SetEmotionContextAction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(SetEmotionContextAction& a, SetEmotionContextAction& b) {
    a.Swap(&b);
  }
  inline void Swap(SetEmotionContextAction* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetEmotionContextAction* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetEmotionContextAction* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetEmotionContextAction>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetEmotionContextAction& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetEmotionContextAction& from) {
    SetEmotionContextAction::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SetEmotionContextAction* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ai.inworld.studio.v1alpha.SetEmotionContextAction";
  }
  protected:
  explicit SetEmotionContextAction(::google::protobuf::Arena* arena);
  SetEmotionContextAction(::google::protobuf::Arena* arena, const SetEmotionContextAction& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBehaviorFieldNumber = 1,
  };
  // .ai.inworld.studio.v1alpha.SpaffCode behavior = 1;
  void clear_behavior() ;
  ::ai::inworld::studio::v1alpha::SpaffCode behavior() const;
  void set_behavior(::ai::inworld::studio::v1alpha::SpaffCode value);

  private:
  ::ai::inworld::studio::v1alpha::SpaffCode _internal_behavior() const;
  void _internal_set_behavior(::ai::inworld::studio::v1alpha::SpaffCode value);

  public:
  // @@protoc_insertion_point(class_scope:ai.inworld.studio.v1alpha.SetEmotionContextAction)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    int behavior_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ai_2finworld_2fstudio_2fv1alpha_2fbehavioral_5fcontexts_2eproto;
};// -------------------------------------------------------------------

class SendCustomEventContextAction final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ai.inworld.studio.v1alpha.SendCustomEventContextAction) */ {
 public:
  inline SendCustomEventContextAction() : SendCustomEventContextAction(nullptr) {}
  ~SendCustomEventContextAction() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SendCustomEventContextAction(::google::protobuf::internal::ConstantInitialized);

  inline SendCustomEventContextAction(const SendCustomEventContextAction& from)
      : SendCustomEventContextAction(nullptr, from) {}
  SendCustomEventContextAction(SendCustomEventContextAction&& from) noexcept
    : SendCustomEventContextAction() {
    *this = ::std::move(from);
  }

  inline SendCustomEventContextAction& operator=(const SendCustomEventContextAction& from) {
    CopyFrom(from);
    return *this;
  }
  inline SendCustomEventContextAction& operator=(SendCustomEventContextAction&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SendCustomEventContextAction& default_instance() {
    return *internal_default_instance();
  }
  static inline const SendCustomEventContextAction* internal_default_instance() {
    return reinterpret_cast<const SendCustomEventContextAction*>(
               &_SendCustomEventContextAction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(SendCustomEventContextAction& a, SendCustomEventContextAction& b) {
    a.Swap(&b);
  }
  inline void Swap(SendCustomEventContextAction* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SendCustomEventContextAction* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SendCustomEventContextAction* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SendCustomEventContextAction>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SendCustomEventContextAction& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SendCustomEventContextAction& from) {
    SendCustomEventContextAction::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SendCustomEventContextAction* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ai.inworld.studio.v1alpha.SendCustomEventContextAction";
  }
  protected:
  explicit SendCustomEventContextAction(::google::protobuf::Arena* arena);
  SendCustomEventContextAction(::google::protobuf::Arena* arena, const SendCustomEventContextAction& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCustomEventFieldNumber = 1,
  };
  // string custom_event = 1;
  void clear_custom_event() ;
  const std::string& custom_event() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_custom_event(Arg_&& arg, Args_... args);
  std::string* mutable_custom_event();
  PROTOBUF_NODISCARD std::string* release_custom_event();
  void set_allocated_custom_event(std::string* value);

  private:
  const std::string& _internal_custom_event() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_custom_event(
      const std::string& value);
  std::string* _internal_mutable_custom_event();

  public:
  // @@protoc_insertion_point(class_scope:ai.inworld.studio.v1alpha.SendCustomEventContextAction)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      75, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr custom_event_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ai_2finworld_2fstudio_2fv1alpha_2fbehavioral_5fcontexts_2eproto;
};// -------------------------------------------------------------------

class BehavioralContextProperties final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ai.inworld.studio.v1alpha.BehavioralContextProperties) */ {
 public:
  inline BehavioralContextProperties() : BehavioralContextProperties(nullptr) {}
  ~BehavioralContextProperties() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR BehavioralContextProperties(::google::protobuf::internal::ConstantInitialized);

  inline BehavioralContextProperties(const BehavioralContextProperties& from)
      : BehavioralContextProperties(nullptr, from) {}
  BehavioralContextProperties(BehavioralContextProperties&& from) noexcept
    : BehavioralContextProperties() {
    *this = ::std::move(from);
  }

  inline BehavioralContextProperties& operator=(const BehavioralContextProperties& from) {
    CopyFrom(from);
    return *this;
  }
  inline BehavioralContextProperties& operator=(BehavioralContextProperties&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BehavioralContextProperties& default_instance() {
    return *internal_default_instance();
  }
  static inline const BehavioralContextProperties* internal_default_instance() {
    return reinterpret_cast<const BehavioralContextProperties*>(
               &_BehavioralContextProperties_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(BehavioralContextProperties& a, BehavioralContextProperties& b) {
    a.Swap(&b);
  }
  inline void Swap(BehavioralContextProperties* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BehavioralContextProperties* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BehavioralContextProperties* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<BehavioralContextProperties>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BehavioralContextProperties& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const BehavioralContextProperties& from) {
    BehavioralContextProperties::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(BehavioralContextProperties* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ai.inworld.studio.v1alpha.BehavioralContextProperties";
  }
  protected:
  explicit BehavioralContextProperties(::google::protobuf::Arena* arena);
  BehavioralContextProperties(::google::protobuf::Arena* arena, const BehavioralContextProperties& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPriorityFieldNumber = 2,
    kStartConversationFieldNumber = 1,
    kIsDefaultFieldNumber = 3,
  };
  // int32 priority = 2;
  void clear_priority() ;
  ::int32_t priority() const;
  void set_priority(::int32_t value);

  private:
  ::int32_t _internal_priority() const;
  void _internal_set_priority(::int32_t value);

  public:
  // bool start_conversation = 1;
  void clear_start_conversation() ;
  bool start_conversation() const;
  void set_start_conversation(bool value);

  private:
  bool _internal_start_conversation() const;
  void _internal_set_start_conversation(bool value);

  public:
  // bool is_default = 3;
  void clear_is_default() ;
  bool is_default() const;
  void set_is_default(bool value);

  private:
  bool _internal_is_default() const;
  void _internal_set_is_default(bool value);

  public:
  // @@protoc_insertion_point(class_scope:ai.inworld.studio.v1alpha.BehavioralContextProperties)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int32_t priority_;
    bool start_conversation_;
    bool is_default_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ai_2finworld_2fstudio_2fv1alpha_2fbehavioral_5fcontexts_2eproto;
};// -------------------------------------------------------------------

class BehavioralContextAction final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ai.inworld.studio.v1alpha.BehavioralContextAction) */ {
 public:
  inline BehavioralContextAction() : BehavioralContextAction(nullptr) {}
  ~BehavioralContextAction() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR BehavioralContextAction(::google::protobuf::internal::ConstantInitialized);

  inline BehavioralContextAction(const BehavioralContextAction& from)
      : BehavioralContextAction(nullptr, from) {}
  BehavioralContextAction(BehavioralContextAction&& from) noexcept
    : BehavioralContextAction() {
    *this = ::std::move(from);
  }

  inline BehavioralContextAction& operator=(const BehavioralContextAction& from) {
    CopyFrom(from);
    return *this;
  }
  inline BehavioralContextAction& operator=(BehavioralContextAction&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BehavioralContextAction& default_instance() {
    return *internal_default_instance();
  }
  enum ActionCase {
    kTellExact = 2,
    kTellInstructed = 3,
    kSendCustomEvent = 4,
    kSetEmotion = 5,
    ACTION_NOT_SET = 0,
  };

  static inline const BehavioralContextAction* internal_default_instance() {
    return reinterpret_cast<const BehavioralContextAction*>(
               &_BehavioralContextAction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(BehavioralContextAction& a, BehavioralContextAction& b) {
    a.Swap(&b);
  }
  inline void Swap(BehavioralContextAction* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BehavioralContextAction* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BehavioralContextAction* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<BehavioralContextAction>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BehavioralContextAction& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const BehavioralContextAction& from) {
    BehavioralContextAction::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(BehavioralContextAction* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ai.inworld.studio.v1alpha.BehavioralContextAction";
  }
  protected:
  explicit BehavioralContextAction(::google::protobuf::Arena* arena);
  BehavioralContextAction(::google::protobuf::Arena* arena, const BehavioralContextAction& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUuidFieldNumber = 1,
    kTellExactFieldNumber = 2,
    kTellInstructedFieldNumber = 3,
    kSendCustomEventFieldNumber = 4,
    kSetEmotionFieldNumber = 5,
  };
  // string uuid = 1;
  void clear_uuid() ;
  const std::string& uuid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_uuid(Arg_&& arg, Args_... args);
  std::string* mutable_uuid();
  PROTOBUF_NODISCARD std::string* release_uuid();
  void set_allocated_uuid(std::string* value);

  private:
  const std::string& _internal_uuid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_uuid(
      const std::string& value);
  std::string* _internal_mutable_uuid();

  public:
  // .ai.inworld.studio.v1alpha.TellExactTextContextAction tell_exact = 2;
  bool has_tell_exact() const;
  private:
  bool _internal_has_tell_exact() const;

  public:
  void clear_tell_exact() ;
  const ::ai::inworld::studio::v1alpha::TellExactTextContextAction& tell_exact() const;
  PROTOBUF_NODISCARD ::ai::inworld::studio::v1alpha::TellExactTextContextAction* release_tell_exact();
  ::ai::inworld::studio::v1alpha::TellExactTextContextAction* mutable_tell_exact();
  void set_allocated_tell_exact(::ai::inworld::studio::v1alpha::TellExactTextContextAction* value);
  void unsafe_arena_set_allocated_tell_exact(::ai::inworld::studio::v1alpha::TellExactTextContextAction* value);
  ::ai::inworld::studio::v1alpha::TellExactTextContextAction* unsafe_arena_release_tell_exact();

  private:
  const ::ai::inworld::studio::v1alpha::TellExactTextContextAction& _internal_tell_exact() const;
  ::ai::inworld::studio::v1alpha::TellExactTextContextAction* _internal_mutable_tell_exact();

  public:
  // .ai.inworld.studio.v1alpha.TellInstructedContextAction tell_instructed = 3;
  bool has_tell_instructed() const;
  private:
  bool _internal_has_tell_instructed() const;

  public:
  void clear_tell_instructed() ;
  const ::ai::inworld::studio::v1alpha::TellInstructedContextAction& tell_instructed() const;
  PROTOBUF_NODISCARD ::ai::inworld::studio::v1alpha::TellInstructedContextAction* release_tell_instructed();
  ::ai::inworld::studio::v1alpha::TellInstructedContextAction* mutable_tell_instructed();
  void set_allocated_tell_instructed(::ai::inworld::studio::v1alpha::TellInstructedContextAction* value);
  void unsafe_arena_set_allocated_tell_instructed(::ai::inworld::studio::v1alpha::TellInstructedContextAction* value);
  ::ai::inworld::studio::v1alpha::TellInstructedContextAction* unsafe_arena_release_tell_instructed();

  private:
  const ::ai::inworld::studio::v1alpha::TellInstructedContextAction& _internal_tell_instructed() const;
  ::ai::inworld::studio::v1alpha::TellInstructedContextAction* _internal_mutable_tell_instructed();

  public:
  // .ai.inworld.studio.v1alpha.SendCustomEventContextAction send_custom_event = 4;
  bool has_send_custom_event() const;
  private:
  bool _internal_has_send_custom_event() const;

  public:
  void clear_send_custom_event() ;
  const ::ai::inworld::studio::v1alpha::SendCustomEventContextAction& send_custom_event() const;
  PROTOBUF_NODISCARD ::ai::inworld::studio::v1alpha::SendCustomEventContextAction* release_send_custom_event();
  ::ai::inworld::studio::v1alpha::SendCustomEventContextAction* mutable_send_custom_event();
  void set_allocated_send_custom_event(::ai::inworld::studio::v1alpha::SendCustomEventContextAction* value);
  void unsafe_arena_set_allocated_send_custom_event(::ai::inworld::studio::v1alpha::SendCustomEventContextAction* value);
  ::ai::inworld::studio::v1alpha::SendCustomEventContextAction* unsafe_arena_release_send_custom_event();

  private:
  const ::ai::inworld::studio::v1alpha::SendCustomEventContextAction& _internal_send_custom_event() const;
  ::ai::inworld::studio::v1alpha::SendCustomEventContextAction* _internal_mutable_send_custom_event();

  public:
  // .ai.inworld.studio.v1alpha.SetEmotionContextAction set_emotion = 5;
  bool has_set_emotion() const;
  private:
  bool _internal_has_set_emotion() const;

  public:
  void clear_set_emotion() ;
  const ::ai::inworld::studio::v1alpha::SetEmotionContextAction& set_emotion() const;
  PROTOBUF_NODISCARD ::ai::inworld::studio::v1alpha::SetEmotionContextAction* release_set_emotion();
  ::ai::inworld::studio::v1alpha::SetEmotionContextAction* mutable_set_emotion();
  void set_allocated_set_emotion(::ai::inworld::studio::v1alpha::SetEmotionContextAction* value);
  void unsafe_arena_set_allocated_set_emotion(::ai::inworld::studio::v1alpha::SetEmotionContextAction* value);
  ::ai::inworld::studio::v1alpha::SetEmotionContextAction* unsafe_arena_release_set_emotion();

  private:
  const ::ai::inworld::studio::v1alpha::SetEmotionContextAction& _internal_set_emotion() const;
  ::ai::inworld::studio::v1alpha::SetEmotionContextAction* _internal_mutable_set_emotion();

  public:
  void clear_action();
  ActionCase action_case() const;
  // @@protoc_insertion_point(class_scope:ai.inworld.studio.v1alpha.BehavioralContextAction)
 private:
  class _Internal;
  void set_has_tell_exact();
  void set_has_tell_instructed();
  void set_has_send_custom_event();
  void set_has_set_emotion();

  inline bool has_action() const;
  inline void clear_has_action();

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 5, 4,
      62, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr uuid_;
    union ActionUnion {
      constexpr ActionUnion() : _constinit_{} {}
        ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::ai::inworld::studio::v1alpha::TellExactTextContextAction* tell_exact_;
      ::ai::inworld::studio::v1alpha::TellInstructedContextAction* tell_instructed_;
      ::ai::inworld::studio::v1alpha::SendCustomEventContextAction* send_custom_event_;
      ::ai::inworld::studio::v1alpha::SetEmotionContextAction* set_emotion_;
    } action_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];

    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ai_2finworld_2fstudio_2fv1alpha_2fbehavioral_5fcontexts_2eproto;
};// -------------------------------------------------------------------

class BehavioralContextInteraction final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ai.inworld.studio.v1alpha.BehavioralContextInteraction) */ {
 public:
  inline BehavioralContextInteraction() : BehavioralContextInteraction(nullptr) {}
  ~BehavioralContextInteraction() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR BehavioralContextInteraction(::google::protobuf::internal::ConstantInitialized);

  inline BehavioralContextInteraction(const BehavioralContextInteraction& from)
      : BehavioralContextInteraction(nullptr, from) {}
  BehavioralContextInteraction(BehavioralContextInteraction&& from) noexcept
    : BehavioralContextInteraction() {
    *this = ::std::move(from);
  }

  inline BehavioralContextInteraction& operator=(const BehavioralContextInteraction& from) {
    CopyFrom(from);
    return *this;
  }
  inline BehavioralContextInteraction& operator=(BehavioralContextInteraction&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BehavioralContextInteraction& default_instance() {
    return *internal_default_instance();
  }
  static inline const BehavioralContextInteraction* internal_default_instance() {
    return reinterpret_cast<const BehavioralContextInteraction*>(
               &_BehavioralContextInteraction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(BehavioralContextInteraction& a, BehavioralContextInteraction& b) {
    a.Swap(&b);
  }
  inline void Swap(BehavioralContextInteraction* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BehavioralContextInteraction* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BehavioralContextInteraction* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<BehavioralContextInteraction>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BehavioralContextInteraction& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const BehavioralContextInteraction& from) {
    BehavioralContextInteraction::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(BehavioralContextInteraction* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ai.inworld.studio.v1alpha.BehavioralContextInteraction";
  }
  protected:
  explicit BehavioralContextInteraction(::google::protobuf::Arena* arena);
  BehavioralContextInteraction(::google::protobuf::Arena* arena, const BehavioralContextInteraction& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kActionsFieldNumber = 2,
    kUuidFieldNumber = 3,
    kInteractionTypeFieldNumber = 1,
  };
  // repeated .ai.inworld.studio.v1alpha.BehavioralContextAction actions = 2;
  int actions_size() const;
  private:
  int _internal_actions_size() const;

  public:
  void clear_actions() ;
  ::ai::inworld::studio::v1alpha::BehavioralContextAction* mutable_actions(int index);
  ::google::protobuf::RepeatedPtrField< ::ai::inworld::studio::v1alpha::BehavioralContextAction >*
      mutable_actions();
  private:
  const ::google::protobuf::RepeatedPtrField<::ai::inworld::studio::v1alpha::BehavioralContextAction>& _internal_actions() const;
  ::google::protobuf::RepeatedPtrField<::ai::inworld::studio::v1alpha::BehavioralContextAction>* _internal_mutable_actions();
  public:
  const ::ai::inworld::studio::v1alpha::BehavioralContextAction& actions(int index) const;
  ::ai::inworld::studio::v1alpha::BehavioralContextAction* add_actions();
  const ::google::protobuf::RepeatedPtrField< ::ai::inworld::studio::v1alpha::BehavioralContextAction >&
      actions() const;
  // string uuid = 3;
  void clear_uuid() ;
  const std::string& uuid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_uuid(Arg_&& arg, Args_... args);
  std::string* mutable_uuid();
  PROTOBUF_NODISCARD std::string* release_uuid();
  void set_allocated_uuid(std::string* value);

  private:
  const std::string& _internal_uuid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_uuid(
      const std::string& value);
  std::string* _internal_mutable_uuid();

  public:
  // .ai.inworld.studio.v1alpha.BehavioralContextInteractionType interaction_type = 1;
  void clear_interaction_type() ;
  ::ai::inworld::studio::v1alpha::BehavioralContextInteractionType interaction_type() const;
  void set_interaction_type(::ai::inworld::studio::v1alpha::BehavioralContextInteractionType value);

  private:
  ::ai::inworld::studio::v1alpha::BehavioralContextInteractionType _internal_interaction_type() const;
  void _internal_set_interaction_type(::ai::inworld::studio::v1alpha::BehavioralContextInteractionType value);

  public:
  // @@protoc_insertion_point(class_scope:ai.inworld.studio.v1alpha.BehavioralContextInteraction)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      67, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::ai::inworld::studio::v1alpha::BehavioralContextAction > actions_;
    ::google::protobuf::internal::ArenaStringPtr uuid_;
    int interaction_type_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ai_2finworld_2fstudio_2fv1alpha_2fbehavioral_5fcontexts_2eproto;
};// -------------------------------------------------------------------

class BehavioralContext final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ai.inworld.studio.v1alpha.BehavioralContext) */ {
 public:
  inline BehavioralContext() : BehavioralContext(nullptr) {}
  ~BehavioralContext() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR BehavioralContext(::google::protobuf::internal::ConstantInitialized);

  inline BehavioralContext(const BehavioralContext& from)
      : BehavioralContext(nullptr, from) {}
  BehavioralContext(BehavioralContext&& from) noexcept
    : BehavioralContext() {
    *this = ::std::move(from);
  }

  inline BehavioralContext& operator=(const BehavioralContext& from) {
    CopyFrom(from);
    return *this;
  }
  inline BehavioralContext& operator=(BehavioralContext&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BehavioralContext& default_instance() {
    return *internal_default_instance();
  }
  static inline const BehavioralContext* internal_default_instance() {
    return reinterpret_cast<const BehavioralContext*>(
               &_BehavioralContext_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(BehavioralContext& a, BehavioralContext& b) {
    a.Swap(&b);
  }
  inline void Swap(BehavioralContext* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BehavioralContext* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BehavioralContext* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<BehavioralContext>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BehavioralContext& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const BehavioralContext& from) {
    BehavioralContext::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(BehavioralContext* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ai.inworld.studio.v1alpha.BehavioralContext";
  }
  protected:
  explicit BehavioralContext(::google::protobuf::Arena* arena);
  BehavioralContext(::google::protobuf::Arena* arena, const BehavioralContext& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTriggersFieldNumber = 4,
    kBehavioralContextInteractionFieldNumber = 5,
    kNameFieldNumber = 1,
    kMotivationFieldNumber = 2,
    kPropertiesFieldNumber = 3,
  };
  // repeated string triggers = 4 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  int triggers_size() const;
  private:
  int _internal_triggers_size() const;

  public:
  void clear_triggers() ;
  const std::string& triggers(int index) const;
  std::string* mutable_triggers(int index);
  void set_triggers(int index, const std::string& value);
  void set_triggers(int index, std::string&& value);
  void set_triggers(int index, const char* value);
  void set_triggers(int index, const char* value, std::size_t size);
  void set_triggers(int index, absl::string_view value);
  std::string* add_triggers();
  void add_triggers(const std::string& value);
  void add_triggers(std::string&& value);
  void add_triggers(const char* value);
  void add_triggers(const char* value, std::size_t size);
  void add_triggers(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& triggers() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_triggers();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_triggers() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_triggers();

  public:
  // repeated .ai.inworld.studio.v1alpha.BehavioralContextInteraction behavioral_context_interaction = 5;
  int behavioral_context_interaction_size() const;
  private:
  int _internal_behavioral_context_interaction_size() const;

  public:
  void clear_behavioral_context_interaction() ;
  ::ai::inworld::studio::v1alpha::BehavioralContextInteraction* mutable_behavioral_context_interaction(int index);
  ::google::protobuf::RepeatedPtrField< ::ai::inworld::studio::v1alpha::BehavioralContextInteraction >*
      mutable_behavioral_context_interaction();
  private:
  const ::google::protobuf::RepeatedPtrField<::ai::inworld::studio::v1alpha::BehavioralContextInteraction>& _internal_behavioral_context_interaction() const;
  ::google::protobuf::RepeatedPtrField<::ai::inworld::studio::v1alpha::BehavioralContextInteraction>* _internal_mutable_behavioral_context_interaction();
  public:
  const ::ai::inworld::studio::v1alpha::BehavioralContextInteraction& behavioral_context_interaction(int index) const;
  ::ai::inworld::studio::v1alpha::BehavioralContextInteraction* add_behavioral_context_interaction();
  const ::google::protobuf::RepeatedPtrField< ::ai::inworld::studio::v1alpha::BehavioralContextInteraction >&
      behavioral_context_interaction() const;
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string motivation = 2;
  void clear_motivation() ;
  const std::string& motivation() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_motivation(Arg_&& arg, Args_... args);
  std::string* mutable_motivation();
  PROTOBUF_NODISCARD std::string* release_motivation();
  void set_allocated_motivation(std::string* value);

  private:
  const std::string& _internal_motivation() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_motivation(
      const std::string& value);
  std::string* _internal_mutable_motivation();

  public:
  // .ai.inworld.studio.v1alpha.BehavioralContextProperties properties = 3;
  bool has_properties() const;
  void clear_properties() ;
  const ::ai::inworld::studio::v1alpha::BehavioralContextProperties& properties() const;
  PROTOBUF_NODISCARD ::ai::inworld::studio::v1alpha::BehavioralContextProperties* release_properties();
  ::ai::inworld::studio::v1alpha::BehavioralContextProperties* mutable_properties();
  void set_allocated_properties(::ai::inworld::studio::v1alpha::BehavioralContextProperties* value);
  void unsafe_arena_set_allocated_properties(::ai::inworld::studio::v1alpha::BehavioralContextProperties* value);
  ::ai::inworld::studio::v1alpha::BehavioralContextProperties* unsafe_arena_release_properties();

  private:
  const ::ai::inworld::studio::v1alpha::BehavioralContextProperties& _internal_properties() const;
  ::ai::inworld::studio::v1alpha::BehavioralContextProperties* _internal_mutable_properties();

  public:
  // @@protoc_insertion_point(class_scope:ai.inworld.studio.v1alpha.BehavioralContext)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 2,
      74, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> triggers_;
    ::google::protobuf::RepeatedPtrField< ::ai::inworld::studio::v1alpha::BehavioralContextInteraction > behavioral_context_interaction_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr motivation_;
    ::ai::inworld::studio::v1alpha::BehavioralContextProperties* properties_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ai_2finworld_2fstudio_2fv1alpha_2fbehavioral_5fcontexts_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// BehavioralContextProperties

// bool start_conversation = 1;
inline void BehavioralContextProperties::clear_start_conversation() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.start_conversation_ = false;
}
inline bool BehavioralContextProperties::start_conversation() const {
  // @@protoc_insertion_point(field_get:ai.inworld.studio.v1alpha.BehavioralContextProperties.start_conversation)
  return _internal_start_conversation();
}
inline void BehavioralContextProperties::set_start_conversation(bool value) {
  _internal_set_start_conversation(value);
  // @@protoc_insertion_point(field_set:ai.inworld.studio.v1alpha.BehavioralContextProperties.start_conversation)
}
inline bool BehavioralContextProperties::_internal_start_conversation() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.start_conversation_;
}
inline void BehavioralContextProperties::_internal_set_start_conversation(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.start_conversation_ = value;
}

// int32 priority = 2;
inline void BehavioralContextProperties::clear_priority() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.priority_ = 0;
}
inline ::int32_t BehavioralContextProperties::priority() const {
  // @@protoc_insertion_point(field_get:ai.inworld.studio.v1alpha.BehavioralContextProperties.priority)
  return _internal_priority();
}
inline void BehavioralContextProperties::set_priority(::int32_t value) {
  _internal_set_priority(value);
  // @@protoc_insertion_point(field_set:ai.inworld.studio.v1alpha.BehavioralContextProperties.priority)
}
inline ::int32_t BehavioralContextProperties::_internal_priority() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.priority_;
}
inline void BehavioralContextProperties::_internal_set_priority(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.priority_ = value;
}

// bool is_default = 3;
inline void BehavioralContextProperties::clear_is_default() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.is_default_ = false;
}
inline bool BehavioralContextProperties::is_default() const {
  // @@protoc_insertion_point(field_get:ai.inworld.studio.v1alpha.BehavioralContextProperties.is_default)
  return _internal_is_default();
}
inline void BehavioralContextProperties::set_is_default(bool value) {
  _internal_set_is_default(value);
  // @@protoc_insertion_point(field_set:ai.inworld.studio.v1alpha.BehavioralContextProperties.is_default)
}
inline bool BehavioralContextProperties::_internal_is_default() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.is_default_;
}
inline void BehavioralContextProperties::_internal_set_is_default(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.is_default_ = value;
}

// -------------------------------------------------------------------

// TellExactTextContextAction

// string exact_text = 1;
inline void TellExactTextContextAction::clear_exact_text() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.exact_text_.ClearToEmpty();
}
inline const std::string& TellExactTextContextAction::exact_text() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ai.inworld.studio.v1alpha.TellExactTextContextAction.exact_text)
  return _internal_exact_text();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TellExactTextContextAction::set_exact_text(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.exact_text_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ai.inworld.studio.v1alpha.TellExactTextContextAction.exact_text)
}
inline std::string* TellExactTextContextAction::mutable_exact_text() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_exact_text();
  // @@protoc_insertion_point(field_mutable:ai.inworld.studio.v1alpha.TellExactTextContextAction.exact_text)
  return _s;
}
inline const std::string& TellExactTextContextAction::_internal_exact_text() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.exact_text_.Get();
}
inline void TellExactTextContextAction::_internal_set_exact_text(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.exact_text_.Set(value, GetArena());
}
inline std::string* TellExactTextContextAction::_internal_mutable_exact_text() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.exact_text_.Mutable( GetArena());
}
inline std::string* TellExactTextContextAction::release_exact_text() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:ai.inworld.studio.v1alpha.TellExactTextContextAction.exact_text)
  return _impl_.exact_text_.Release();
}
inline void TellExactTextContextAction::set_allocated_exact_text(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.exact_text_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.exact_text_.IsDefault()) {
          _impl_.exact_text_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ai.inworld.studio.v1alpha.TellExactTextContextAction.exact_text)
}

// -------------------------------------------------------------------

// TellInstructedContextAction

// string speech_instruction = 1;
inline void TellInstructedContextAction::clear_speech_instruction() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.speech_instruction_.ClearToEmpty();
}
inline const std::string& TellInstructedContextAction::speech_instruction() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ai.inworld.studio.v1alpha.TellInstructedContextAction.speech_instruction)
  return _internal_speech_instruction();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TellInstructedContextAction::set_speech_instruction(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.speech_instruction_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ai.inworld.studio.v1alpha.TellInstructedContextAction.speech_instruction)
}
inline std::string* TellInstructedContextAction::mutable_speech_instruction() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_speech_instruction();
  // @@protoc_insertion_point(field_mutable:ai.inworld.studio.v1alpha.TellInstructedContextAction.speech_instruction)
  return _s;
}
inline const std::string& TellInstructedContextAction::_internal_speech_instruction() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.speech_instruction_.Get();
}
inline void TellInstructedContextAction::_internal_set_speech_instruction(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.speech_instruction_.Set(value, GetArena());
}
inline std::string* TellInstructedContextAction::_internal_mutable_speech_instruction() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.speech_instruction_.Mutable( GetArena());
}
inline std::string* TellInstructedContextAction::release_speech_instruction() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:ai.inworld.studio.v1alpha.TellInstructedContextAction.speech_instruction)
  return _impl_.speech_instruction_.Release();
}
inline void TellInstructedContextAction::set_allocated_speech_instruction(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.speech_instruction_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.speech_instruction_.IsDefault()) {
          _impl_.speech_instruction_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ai.inworld.studio.v1alpha.TellInstructedContextAction.speech_instruction)
}

// -------------------------------------------------------------------

// SendCustomEventContextAction

// string custom_event = 1;
inline void SendCustomEventContextAction::clear_custom_event() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.custom_event_.ClearToEmpty();
}
inline const std::string& SendCustomEventContextAction::custom_event() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ai.inworld.studio.v1alpha.SendCustomEventContextAction.custom_event)
  return _internal_custom_event();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SendCustomEventContextAction::set_custom_event(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.custom_event_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ai.inworld.studio.v1alpha.SendCustomEventContextAction.custom_event)
}
inline std::string* SendCustomEventContextAction::mutable_custom_event() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_custom_event();
  // @@protoc_insertion_point(field_mutable:ai.inworld.studio.v1alpha.SendCustomEventContextAction.custom_event)
  return _s;
}
inline const std::string& SendCustomEventContextAction::_internal_custom_event() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.custom_event_.Get();
}
inline void SendCustomEventContextAction::_internal_set_custom_event(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.custom_event_.Set(value, GetArena());
}
inline std::string* SendCustomEventContextAction::_internal_mutable_custom_event() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.custom_event_.Mutable( GetArena());
}
inline std::string* SendCustomEventContextAction::release_custom_event() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:ai.inworld.studio.v1alpha.SendCustomEventContextAction.custom_event)
  return _impl_.custom_event_.Release();
}
inline void SendCustomEventContextAction::set_allocated_custom_event(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.custom_event_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.custom_event_.IsDefault()) {
          _impl_.custom_event_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ai.inworld.studio.v1alpha.SendCustomEventContextAction.custom_event)
}

// -------------------------------------------------------------------

// SetEmotionContextAction

// .ai.inworld.studio.v1alpha.SpaffCode behavior = 1;
inline void SetEmotionContextAction::clear_behavior() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.behavior_ = 0;
}
inline ::ai::inworld::studio::v1alpha::SpaffCode SetEmotionContextAction::behavior() const {
  // @@protoc_insertion_point(field_get:ai.inworld.studio.v1alpha.SetEmotionContextAction.behavior)
  return _internal_behavior();
}
inline void SetEmotionContextAction::set_behavior(::ai::inworld::studio::v1alpha::SpaffCode value) {
  _internal_set_behavior(value);
  // @@protoc_insertion_point(field_set:ai.inworld.studio.v1alpha.SetEmotionContextAction.behavior)
}
inline ::ai::inworld::studio::v1alpha::SpaffCode SetEmotionContextAction::_internal_behavior() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::ai::inworld::studio::v1alpha::SpaffCode>(_impl_.behavior_);
}
inline void SetEmotionContextAction::_internal_set_behavior(::ai::inworld::studio::v1alpha::SpaffCode value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.behavior_ = value;
}

// -------------------------------------------------------------------

// BehavioralContextAction

// string uuid = 1;
inline void BehavioralContextAction::clear_uuid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.uuid_.ClearToEmpty();
}
inline const std::string& BehavioralContextAction::uuid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ai.inworld.studio.v1alpha.BehavioralContextAction.uuid)
  return _internal_uuid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BehavioralContextAction::set_uuid(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.uuid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ai.inworld.studio.v1alpha.BehavioralContextAction.uuid)
}
inline std::string* BehavioralContextAction::mutable_uuid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_uuid();
  // @@protoc_insertion_point(field_mutable:ai.inworld.studio.v1alpha.BehavioralContextAction.uuid)
  return _s;
}
inline const std::string& BehavioralContextAction::_internal_uuid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.uuid_.Get();
}
inline void BehavioralContextAction::_internal_set_uuid(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.uuid_.Set(value, GetArena());
}
inline std::string* BehavioralContextAction::_internal_mutable_uuid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.uuid_.Mutable( GetArena());
}
inline std::string* BehavioralContextAction::release_uuid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:ai.inworld.studio.v1alpha.BehavioralContextAction.uuid)
  return _impl_.uuid_.Release();
}
inline void BehavioralContextAction::set_allocated_uuid(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.uuid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.uuid_.IsDefault()) {
          _impl_.uuid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ai.inworld.studio.v1alpha.BehavioralContextAction.uuid)
}

// .ai.inworld.studio.v1alpha.TellExactTextContextAction tell_exact = 2;
inline bool BehavioralContextAction::has_tell_exact() const {
  return action_case() == kTellExact;
}
inline bool BehavioralContextAction::_internal_has_tell_exact() const {
  return action_case() == kTellExact;
}
inline void BehavioralContextAction::set_has_tell_exact() {
  _impl_._oneof_case_[0] = kTellExact;
}
inline void BehavioralContextAction::clear_tell_exact() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (action_case() == kTellExact) {
    if (GetArena() == nullptr) {
      delete _impl_.action_.tell_exact_;
    }
    clear_has_action();
  }
}
inline ::ai::inworld::studio::v1alpha::TellExactTextContextAction* BehavioralContextAction::release_tell_exact() {
  // @@protoc_insertion_point(field_release:ai.inworld.studio.v1alpha.BehavioralContextAction.tell_exact)
  if (action_case() == kTellExact) {
    clear_has_action();
    auto* temp = _impl_.action_.tell_exact_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.action_.tell_exact_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::ai::inworld::studio::v1alpha::TellExactTextContextAction& BehavioralContextAction::_internal_tell_exact() const {
  return action_case() == kTellExact ? *_impl_.action_.tell_exact_ : reinterpret_cast<::ai::inworld::studio::v1alpha::TellExactTextContextAction&>(::ai::inworld::studio::v1alpha::_TellExactTextContextAction_default_instance_);
}
inline const ::ai::inworld::studio::v1alpha::TellExactTextContextAction& BehavioralContextAction::tell_exact() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ai.inworld.studio.v1alpha.BehavioralContextAction.tell_exact)
  return _internal_tell_exact();
}
inline ::ai::inworld::studio::v1alpha::TellExactTextContextAction* BehavioralContextAction::unsafe_arena_release_tell_exact() {
  // @@protoc_insertion_point(field_unsafe_arena_release:ai.inworld.studio.v1alpha.BehavioralContextAction.tell_exact)
  if (action_case() == kTellExact) {
    clear_has_action();
    auto* temp = _impl_.action_.tell_exact_;
    _impl_.action_.tell_exact_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void BehavioralContextAction::unsafe_arena_set_allocated_tell_exact(::ai::inworld::studio::v1alpha::TellExactTextContextAction* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_action();
  if (value) {
    set_has_tell_exact();
    _impl_.action_.tell_exact_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ai.inworld.studio.v1alpha.BehavioralContextAction.tell_exact)
}
inline ::ai::inworld::studio::v1alpha::TellExactTextContextAction* BehavioralContextAction::_internal_mutable_tell_exact() {
  if (action_case() != kTellExact) {
    clear_action();
    set_has_tell_exact();
    _impl_.action_.tell_exact_ = CreateMaybeMessage<::ai::inworld::studio::v1alpha::TellExactTextContextAction>(GetArena());
  }
  return _impl_.action_.tell_exact_;
}
inline ::ai::inworld::studio::v1alpha::TellExactTextContextAction* BehavioralContextAction::mutable_tell_exact() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::ai::inworld::studio::v1alpha::TellExactTextContextAction* _msg = _internal_mutable_tell_exact();
  // @@protoc_insertion_point(field_mutable:ai.inworld.studio.v1alpha.BehavioralContextAction.tell_exact)
  return _msg;
}

// .ai.inworld.studio.v1alpha.TellInstructedContextAction tell_instructed = 3;
inline bool BehavioralContextAction::has_tell_instructed() const {
  return action_case() == kTellInstructed;
}
inline bool BehavioralContextAction::_internal_has_tell_instructed() const {
  return action_case() == kTellInstructed;
}
inline void BehavioralContextAction::set_has_tell_instructed() {
  _impl_._oneof_case_[0] = kTellInstructed;
}
inline void BehavioralContextAction::clear_tell_instructed() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (action_case() == kTellInstructed) {
    if (GetArena() == nullptr) {
      delete _impl_.action_.tell_instructed_;
    }
    clear_has_action();
  }
}
inline ::ai::inworld::studio::v1alpha::TellInstructedContextAction* BehavioralContextAction::release_tell_instructed() {
  // @@protoc_insertion_point(field_release:ai.inworld.studio.v1alpha.BehavioralContextAction.tell_instructed)
  if (action_case() == kTellInstructed) {
    clear_has_action();
    auto* temp = _impl_.action_.tell_instructed_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.action_.tell_instructed_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::ai::inworld::studio::v1alpha::TellInstructedContextAction& BehavioralContextAction::_internal_tell_instructed() const {
  return action_case() == kTellInstructed ? *_impl_.action_.tell_instructed_ : reinterpret_cast<::ai::inworld::studio::v1alpha::TellInstructedContextAction&>(::ai::inworld::studio::v1alpha::_TellInstructedContextAction_default_instance_);
}
inline const ::ai::inworld::studio::v1alpha::TellInstructedContextAction& BehavioralContextAction::tell_instructed() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ai.inworld.studio.v1alpha.BehavioralContextAction.tell_instructed)
  return _internal_tell_instructed();
}
inline ::ai::inworld::studio::v1alpha::TellInstructedContextAction* BehavioralContextAction::unsafe_arena_release_tell_instructed() {
  // @@protoc_insertion_point(field_unsafe_arena_release:ai.inworld.studio.v1alpha.BehavioralContextAction.tell_instructed)
  if (action_case() == kTellInstructed) {
    clear_has_action();
    auto* temp = _impl_.action_.tell_instructed_;
    _impl_.action_.tell_instructed_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void BehavioralContextAction::unsafe_arena_set_allocated_tell_instructed(::ai::inworld::studio::v1alpha::TellInstructedContextAction* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_action();
  if (value) {
    set_has_tell_instructed();
    _impl_.action_.tell_instructed_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ai.inworld.studio.v1alpha.BehavioralContextAction.tell_instructed)
}
inline ::ai::inworld::studio::v1alpha::TellInstructedContextAction* BehavioralContextAction::_internal_mutable_tell_instructed() {
  if (action_case() != kTellInstructed) {
    clear_action();
    set_has_tell_instructed();
    _impl_.action_.tell_instructed_ = CreateMaybeMessage<::ai::inworld::studio::v1alpha::TellInstructedContextAction>(GetArena());
  }
  return _impl_.action_.tell_instructed_;
}
inline ::ai::inworld::studio::v1alpha::TellInstructedContextAction* BehavioralContextAction::mutable_tell_instructed() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::ai::inworld::studio::v1alpha::TellInstructedContextAction* _msg = _internal_mutable_tell_instructed();
  // @@protoc_insertion_point(field_mutable:ai.inworld.studio.v1alpha.BehavioralContextAction.tell_instructed)
  return _msg;
}

// .ai.inworld.studio.v1alpha.SendCustomEventContextAction send_custom_event = 4;
inline bool BehavioralContextAction::has_send_custom_event() const {
  return action_case() == kSendCustomEvent;
}
inline bool BehavioralContextAction::_internal_has_send_custom_event() const {
  return action_case() == kSendCustomEvent;
}
inline void BehavioralContextAction::set_has_send_custom_event() {
  _impl_._oneof_case_[0] = kSendCustomEvent;
}
inline void BehavioralContextAction::clear_send_custom_event() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (action_case() == kSendCustomEvent) {
    if (GetArena() == nullptr) {
      delete _impl_.action_.send_custom_event_;
    }
    clear_has_action();
  }
}
inline ::ai::inworld::studio::v1alpha::SendCustomEventContextAction* BehavioralContextAction::release_send_custom_event() {
  // @@protoc_insertion_point(field_release:ai.inworld.studio.v1alpha.BehavioralContextAction.send_custom_event)
  if (action_case() == kSendCustomEvent) {
    clear_has_action();
    auto* temp = _impl_.action_.send_custom_event_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.action_.send_custom_event_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::ai::inworld::studio::v1alpha::SendCustomEventContextAction& BehavioralContextAction::_internal_send_custom_event() const {
  return action_case() == kSendCustomEvent ? *_impl_.action_.send_custom_event_ : reinterpret_cast<::ai::inworld::studio::v1alpha::SendCustomEventContextAction&>(::ai::inworld::studio::v1alpha::_SendCustomEventContextAction_default_instance_);
}
inline const ::ai::inworld::studio::v1alpha::SendCustomEventContextAction& BehavioralContextAction::send_custom_event() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ai.inworld.studio.v1alpha.BehavioralContextAction.send_custom_event)
  return _internal_send_custom_event();
}
inline ::ai::inworld::studio::v1alpha::SendCustomEventContextAction* BehavioralContextAction::unsafe_arena_release_send_custom_event() {
  // @@protoc_insertion_point(field_unsafe_arena_release:ai.inworld.studio.v1alpha.BehavioralContextAction.send_custom_event)
  if (action_case() == kSendCustomEvent) {
    clear_has_action();
    auto* temp = _impl_.action_.send_custom_event_;
    _impl_.action_.send_custom_event_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void BehavioralContextAction::unsafe_arena_set_allocated_send_custom_event(::ai::inworld::studio::v1alpha::SendCustomEventContextAction* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_action();
  if (value) {
    set_has_send_custom_event();
    _impl_.action_.send_custom_event_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ai.inworld.studio.v1alpha.BehavioralContextAction.send_custom_event)
}
inline ::ai::inworld::studio::v1alpha::SendCustomEventContextAction* BehavioralContextAction::_internal_mutable_send_custom_event() {
  if (action_case() != kSendCustomEvent) {
    clear_action();
    set_has_send_custom_event();
    _impl_.action_.send_custom_event_ = CreateMaybeMessage<::ai::inworld::studio::v1alpha::SendCustomEventContextAction>(GetArena());
  }
  return _impl_.action_.send_custom_event_;
}
inline ::ai::inworld::studio::v1alpha::SendCustomEventContextAction* BehavioralContextAction::mutable_send_custom_event() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::ai::inworld::studio::v1alpha::SendCustomEventContextAction* _msg = _internal_mutable_send_custom_event();
  // @@protoc_insertion_point(field_mutable:ai.inworld.studio.v1alpha.BehavioralContextAction.send_custom_event)
  return _msg;
}

// .ai.inworld.studio.v1alpha.SetEmotionContextAction set_emotion = 5;
inline bool BehavioralContextAction::has_set_emotion() const {
  return action_case() == kSetEmotion;
}
inline bool BehavioralContextAction::_internal_has_set_emotion() const {
  return action_case() == kSetEmotion;
}
inline void BehavioralContextAction::set_has_set_emotion() {
  _impl_._oneof_case_[0] = kSetEmotion;
}
inline void BehavioralContextAction::clear_set_emotion() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (action_case() == kSetEmotion) {
    if (GetArena() == nullptr) {
      delete _impl_.action_.set_emotion_;
    }
    clear_has_action();
  }
}
inline ::ai::inworld::studio::v1alpha::SetEmotionContextAction* BehavioralContextAction::release_set_emotion() {
  // @@protoc_insertion_point(field_release:ai.inworld.studio.v1alpha.BehavioralContextAction.set_emotion)
  if (action_case() == kSetEmotion) {
    clear_has_action();
    auto* temp = _impl_.action_.set_emotion_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.action_.set_emotion_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::ai::inworld::studio::v1alpha::SetEmotionContextAction& BehavioralContextAction::_internal_set_emotion() const {
  return action_case() == kSetEmotion ? *_impl_.action_.set_emotion_ : reinterpret_cast<::ai::inworld::studio::v1alpha::SetEmotionContextAction&>(::ai::inworld::studio::v1alpha::_SetEmotionContextAction_default_instance_);
}
inline const ::ai::inworld::studio::v1alpha::SetEmotionContextAction& BehavioralContextAction::set_emotion() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ai.inworld.studio.v1alpha.BehavioralContextAction.set_emotion)
  return _internal_set_emotion();
}
inline ::ai::inworld::studio::v1alpha::SetEmotionContextAction* BehavioralContextAction::unsafe_arena_release_set_emotion() {
  // @@protoc_insertion_point(field_unsafe_arena_release:ai.inworld.studio.v1alpha.BehavioralContextAction.set_emotion)
  if (action_case() == kSetEmotion) {
    clear_has_action();
    auto* temp = _impl_.action_.set_emotion_;
    _impl_.action_.set_emotion_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void BehavioralContextAction::unsafe_arena_set_allocated_set_emotion(::ai::inworld::studio::v1alpha::SetEmotionContextAction* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_action();
  if (value) {
    set_has_set_emotion();
    _impl_.action_.set_emotion_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ai.inworld.studio.v1alpha.BehavioralContextAction.set_emotion)
}
inline ::ai::inworld::studio::v1alpha::SetEmotionContextAction* BehavioralContextAction::_internal_mutable_set_emotion() {
  if (action_case() != kSetEmotion) {
    clear_action();
    set_has_set_emotion();
    _impl_.action_.set_emotion_ = CreateMaybeMessage<::ai::inworld::studio::v1alpha::SetEmotionContextAction>(GetArena());
  }
  return _impl_.action_.set_emotion_;
}
inline ::ai::inworld::studio::v1alpha::SetEmotionContextAction* BehavioralContextAction::mutable_set_emotion() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::ai::inworld::studio::v1alpha::SetEmotionContextAction* _msg = _internal_mutable_set_emotion();
  // @@protoc_insertion_point(field_mutable:ai.inworld.studio.v1alpha.BehavioralContextAction.set_emotion)
  return _msg;
}

inline bool BehavioralContextAction::has_action() const {
  return action_case() != ACTION_NOT_SET;
}
inline void BehavioralContextAction::clear_has_action() {
  _impl_._oneof_case_[0] = ACTION_NOT_SET;
}
inline BehavioralContextAction::ActionCase BehavioralContextAction::action_case() const {
  return BehavioralContextAction::ActionCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// BehavioralContextInteraction

// .ai.inworld.studio.v1alpha.BehavioralContextInteractionType interaction_type = 1;
inline void BehavioralContextInteraction::clear_interaction_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.interaction_type_ = 0;
}
inline ::ai::inworld::studio::v1alpha::BehavioralContextInteractionType BehavioralContextInteraction::interaction_type() const {
  // @@protoc_insertion_point(field_get:ai.inworld.studio.v1alpha.BehavioralContextInteraction.interaction_type)
  return _internal_interaction_type();
}
inline void BehavioralContextInteraction::set_interaction_type(::ai::inworld::studio::v1alpha::BehavioralContextInteractionType value) {
  _internal_set_interaction_type(value);
  // @@protoc_insertion_point(field_set:ai.inworld.studio.v1alpha.BehavioralContextInteraction.interaction_type)
}
inline ::ai::inworld::studio::v1alpha::BehavioralContextInteractionType BehavioralContextInteraction::_internal_interaction_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::ai::inworld::studio::v1alpha::BehavioralContextInteractionType>(_impl_.interaction_type_);
}
inline void BehavioralContextInteraction::_internal_set_interaction_type(::ai::inworld::studio::v1alpha::BehavioralContextInteractionType value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.interaction_type_ = value;
}

// repeated .ai.inworld.studio.v1alpha.BehavioralContextAction actions = 2;
inline int BehavioralContextInteraction::_internal_actions_size() const {
  return _internal_actions().size();
}
inline int BehavioralContextInteraction::actions_size() const {
  return _internal_actions_size();
}
inline void BehavioralContextInteraction::clear_actions() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.actions_.Clear();
}
inline ::ai::inworld::studio::v1alpha::BehavioralContextAction* BehavioralContextInteraction::mutable_actions(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:ai.inworld.studio.v1alpha.BehavioralContextInteraction.actions)
  return _internal_mutable_actions()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::ai::inworld::studio::v1alpha::BehavioralContextAction>* BehavioralContextInteraction::mutable_actions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:ai.inworld.studio.v1alpha.BehavioralContextInteraction.actions)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_actions();
}
inline const ::ai::inworld::studio::v1alpha::BehavioralContextAction& BehavioralContextInteraction::actions(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ai.inworld.studio.v1alpha.BehavioralContextInteraction.actions)
  return _internal_actions().Get(index);
}
inline ::ai::inworld::studio::v1alpha::BehavioralContextAction* BehavioralContextInteraction::add_actions() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::ai::inworld::studio::v1alpha::BehavioralContextAction* _add = _internal_mutable_actions()->Add();
  // @@protoc_insertion_point(field_add:ai.inworld.studio.v1alpha.BehavioralContextInteraction.actions)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::ai::inworld::studio::v1alpha::BehavioralContextAction>& BehavioralContextInteraction::actions() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:ai.inworld.studio.v1alpha.BehavioralContextInteraction.actions)
  return _internal_actions();
}
inline const ::google::protobuf::RepeatedPtrField<::ai::inworld::studio::v1alpha::BehavioralContextAction>&
BehavioralContextInteraction::_internal_actions() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.actions_;
}
inline ::google::protobuf::RepeatedPtrField<::ai::inworld::studio::v1alpha::BehavioralContextAction>*
BehavioralContextInteraction::_internal_mutable_actions() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.actions_;
}

// string uuid = 3;
inline void BehavioralContextInteraction::clear_uuid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.uuid_.ClearToEmpty();
}
inline const std::string& BehavioralContextInteraction::uuid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ai.inworld.studio.v1alpha.BehavioralContextInteraction.uuid)
  return _internal_uuid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BehavioralContextInteraction::set_uuid(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.uuid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ai.inworld.studio.v1alpha.BehavioralContextInteraction.uuid)
}
inline std::string* BehavioralContextInteraction::mutable_uuid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_uuid();
  // @@protoc_insertion_point(field_mutable:ai.inworld.studio.v1alpha.BehavioralContextInteraction.uuid)
  return _s;
}
inline const std::string& BehavioralContextInteraction::_internal_uuid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.uuid_.Get();
}
inline void BehavioralContextInteraction::_internal_set_uuid(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.uuid_.Set(value, GetArena());
}
inline std::string* BehavioralContextInteraction::_internal_mutable_uuid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.uuid_.Mutable( GetArena());
}
inline std::string* BehavioralContextInteraction::release_uuid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:ai.inworld.studio.v1alpha.BehavioralContextInteraction.uuid)
  return _impl_.uuid_.Release();
}
inline void BehavioralContextInteraction::set_allocated_uuid(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.uuid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.uuid_.IsDefault()) {
          _impl_.uuid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ai.inworld.studio.v1alpha.BehavioralContextInteraction.uuid)
}

// -------------------------------------------------------------------

// BehavioralContext

// string name = 1;
inline void BehavioralContext::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& BehavioralContext::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ai.inworld.studio.v1alpha.BehavioralContext.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BehavioralContext::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ai.inworld.studio.v1alpha.BehavioralContext.name)
}
inline std::string* BehavioralContext::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:ai.inworld.studio.v1alpha.BehavioralContext.name)
  return _s;
}
inline const std::string& BehavioralContext::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void BehavioralContext::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* BehavioralContext::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* BehavioralContext::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:ai.inworld.studio.v1alpha.BehavioralContext.name)
  return _impl_.name_.Release();
}
inline void BehavioralContext::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ai.inworld.studio.v1alpha.BehavioralContext.name)
}

// string motivation = 2;
inline void BehavioralContext::clear_motivation() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.motivation_.ClearToEmpty();
}
inline const std::string& BehavioralContext::motivation() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ai.inworld.studio.v1alpha.BehavioralContext.motivation)
  return _internal_motivation();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BehavioralContext::set_motivation(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.motivation_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:ai.inworld.studio.v1alpha.BehavioralContext.motivation)
}
inline std::string* BehavioralContext::mutable_motivation() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_motivation();
  // @@protoc_insertion_point(field_mutable:ai.inworld.studio.v1alpha.BehavioralContext.motivation)
  return _s;
}
inline const std::string& BehavioralContext::_internal_motivation() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.motivation_.Get();
}
inline void BehavioralContext::_internal_set_motivation(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.motivation_.Set(value, GetArena());
}
inline std::string* BehavioralContext::_internal_mutable_motivation() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.motivation_.Mutable( GetArena());
}
inline std::string* BehavioralContext::release_motivation() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:ai.inworld.studio.v1alpha.BehavioralContext.motivation)
  return _impl_.motivation_.Release();
}
inline void BehavioralContext::set_allocated_motivation(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.motivation_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.motivation_.IsDefault()) {
          _impl_.motivation_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:ai.inworld.studio.v1alpha.BehavioralContext.motivation)
}

// .ai.inworld.studio.v1alpha.BehavioralContextProperties properties = 3;
inline bool BehavioralContext::has_properties() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.properties_ != nullptr);
  return value;
}
inline void BehavioralContext::clear_properties() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.properties_ != nullptr) _impl_.properties_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::ai::inworld::studio::v1alpha::BehavioralContextProperties& BehavioralContext::_internal_properties() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::ai::inworld::studio::v1alpha::BehavioralContextProperties* p = _impl_.properties_;
  return p != nullptr ? *p : reinterpret_cast<const ::ai::inworld::studio::v1alpha::BehavioralContextProperties&>(::ai::inworld::studio::v1alpha::_BehavioralContextProperties_default_instance_);
}
inline const ::ai::inworld::studio::v1alpha::BehavioralContextProperties& BehavioralContext::properties() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ai.inworld.studio.v1alpha.BehavioralContext.properties)
  return _internal_properties();
}
inline void BehavioralContext::unsafe_arena_set_allocated_properties(::ai::inworld::studio::v1alpha::BehavioralContextProperties* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.properties_);
  }
  _impl_.properties_ = reinterpret_cast<::ai::inworld::studio::v1alpha::BehavioralContextProperties*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ai.inworld.studio.v1alpha.BehavioralContext.properties)
}
inline ::ai::inworld::studio::v1alpha::BehavioralContextProperties* BehavioralContext::release_properties() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ai::inworld::studio::v1alpha::BehavioralContextProperties* released = _impl_.properties_;
  _impl_.properties_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::ai::inworld::studio::v1alpha::BehavioralContextProperties* BehavioralContext::unsafe_arena_release_properties() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:ai.inworld.studio.v1alpha.BehavioralContext.properties)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::ai::inworld::studio::v1alpha::BehavioralContextProperties* temp = _impl_.properties_;
  _impl_.properties_ = nullptr;
  return temp;
}
inline ::ai::inworld::studio::v1alpha::BehavioralContextProperties* BehavioralContext::_internal_mutable_properties() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.properties_ == nullptr) {
    auto* p = CreateMaybeMessage<::ai::inworld::studio::v1alpha::BehavioralContextProperties>(GetArena());
    _impl_.properties_ = reinterpret_cast<::ai::inworld::studio::v1alpha::BehavioralContextProperties*>(p);
  }
  return _impl_.properties_;
}
inline ::ai::inworld::studio::v1alpha::BehavioralContextProperties* BehavioralContext::mutable_properties() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::ai::inworld::studio::v1alpha::BehavioralContextProperties* _msg = _internal_mutable_properties();
  // @@protoc_insertion_point(field_mutable:ai.inworld.studio.v1alpha.BehavioralContext.properties)
  return _msg;
}
inline void BehavioralContext::set_allocated_properties(::ai::inworld::studio::v1alpha::BehavioralContextProperties* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::ai::inworld::studio::v1alpha::BehavioralContextProperties*>(_impl_.properties_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::ai::inworld::studio::v1alpha::BehavioralContextProperties*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.properties_ = reinterpret_cast<::ai::inworld::studio::v1alpha::BehavioralContextProperties*>(value);
  // @@protoc_insertion_point(field_set_allocated:ai.inworld.studio.v1alpha.BehavioralContext.properties)
}

// repeated string triggers = 4 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
inline int BehavioralContext::_internal_triggers_size() const {
  return _internal_triggers().size();
}
inline int BehavioralContext::triggers_size() const {
  return _internal_triggers_size();
}
inline void BehavioralContext::clear_triggers() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.triggers_.Clear();
}
inline std::string* BehavioralContext::add_triggers()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_triggers()->Add();
  // @@protoc_insertion_point(field_add_mutable:ai.inworld.studio.v1alpha.BehavioralContext.triggers)
  return _s;
}
inline const std::string& BehavioralContext::triggers(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ai.inworld.studio.v1alpha.BehavioralContext.triggers)
  return _internal_triggers().Get(index);
}
inline std::string* BehavioralContext::mutable_triggers(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:ai.inworld.studio.v1alpha.BehavioralContext.triggers)
  return _internal_mutable_triggers()->Mutable(index);
}
inline void BehavioralContext::set_triggers(int index, const std::string& value) {
  _internal_mutable_triggers()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:ai.inworld.studio.v1alpha.BehavioralContext.triggers)
}
inline void BehavioralContext::set_triggers(int index, std::string&& value) {
  _internal_mutable_triggers()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:ai.inworld.studio.v1alpha.BehavioralContext.triggers)
}
inline void BehavioralContext::set_triggers(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_triggers()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ai.inworld.studio.v1alpha.BehavioralContext.triggers)
}
inline void BehavioralContext::set_triggers(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_triggers()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ai.inworld.studio.v1alpha.BehavioralContext.triggers)
}
inline void BehavioralContext::set_triggers(int index, absl::string_view value) {
  _internal_mutable_triggers()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:ai.inworld.studio.v1alpha.BehavioralContext.triggers)
}
inline void BehavioralContext::add_triggers(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_triggers()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:ai.inworld.studio.v1alpha.BehavioralContext.triggers)
}
inline void BehavioralContext::add_triggers(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_triggers()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:ai.inworld.studio.v1alpha.BehavioralContext.triggers)
}
inline void BehavioralContext::add_triggers(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_triggers()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ai.inworld.studio.v1alpha.BehavioralContext.triggers)
}
inline void BehavioralContext::add_triggers(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_triggers()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ai.inworld.studio.v1alpha.BehavioralContext.triggers)
}
inline void BehavioralContext::add_triggers(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_triggers()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:ai.inworld.studio.v1alpha.BehavioralContext.triggers)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
BehavioralContext::triggers() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:ai.inworld.studio.v1alpha.BehavioralContext.triggers)
  return _internal_triggers();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
BehavioralContext::mutable_triggers() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:ai.inworld.studio.v1alpha.BehavioralContext.triggers)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_triggers();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
BehavioralContext::_internal_triggers() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.triggers_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
BehavioralContext::_internal_mutable_triggers() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.triggers_;
}

// repeated .ai.inworld.studio.v1alpha.BehavioralContextInteraction behavioral_context_interaction = 5;
inline int BehavioralContext::_internal_behavioral_context_interaction_size() const {
  return _internal_behavioral_context_interaction().size();
}
inline int BehavioralContext::behavioral_context_interaction_size() const {
  return _internal_behavioral_context_interaction_size();
}
inline void BehavioralContext::clear_behavioral_context_interaction() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.behavioral_context_interaction_.Clear();
}
inline ::ai::inworld::studio::v1alpha::BehavioralContextInteraction* BehavioralContext::mutable_behavioral_context_interaction(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:ai.inworld.studio.v1alpha.BehavioralContext.behavioral_context_interaction)
  return _internal_mutable_behavioral_context_interaction()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::ai::inworld::studio::v1alpha::BehavioralContextInteraction>* BehavioralContext::mutable_behavioral_context_interaction()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:ai.inworld.studio.v1alpha.BehavioralContext.behavioral_context_interaction)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_behavioral_context_interaction();
}
inline const ::ai::inworld::studio::v1alpha::BehavioralContextInteraction& BehavioralContext::behavioral_context_interaction(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ai.inworld.studio.v1alpha.BehavioralContext.behavioral_context_interaction)
  return _internal_behavioral_context_interaction().Get(index);
}
inline ::ai::inworld::studio::v1alpha::BehavioralContextInteraction* BehavioralContext::add_behavioral_context_interaction() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::ai::inworld::studio::v1alpha::BehavioralContextInteraction* _add = _internal_mutable_behavioral_context_interaction()->Add();
  // @@protoc_insertion_point(field_add:ai.inworld.studio.v1alpha.BehavioralContext.behavioral_context_interaction)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::ai::inworld::studio::v1alpha::BehavioralContextInteraction>& BehavioralContext::behavioral_context_interaction() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:ai.inworld.studio.v1alpha.BehavioralContext.behavioral_context_interaction)
  return _internal_behavioral_context_interaction();
}
inline const ::google::protobuf::RepeatedPtrField<::ai::inworld::studio::v1alpha::BehavioralContextInteraction>&
BehavioralContext::_internal_behavioral_context_interaction() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.behavioral_context_interaction_;
}
inline ::google::protobuf::RepeatedPtrField<::ai::inworld::studio::v1alpha::BehavioralContextInteraction>*
BehavioralContext::_internal_mutable_behavioral_context_interaction() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.behavioral_context_interaction_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1alpha
}  // namespace studio
}  // namespace inworld
}  // namespace ai


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::ai::inworld::studio::v1alpha::BehavioralContextInteractionType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::ai::inworld::studio::v1alpha::BehavioralContextInteractionType>() {
  return ::ai::inworld::studio::v1alpha::BehavioralContextInteractionType_descriptor();
}
template <>
struct is_proto_enum<::ai::inworld::studio::v1alpha::SpaffCode> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::ai::inworld::studio::v1alpha::SpaffCode>() {
  return ::ai::inworld::studio::v1alpha::SpaffCode_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_ai_2finworld_2fstudio_2fv1alpha_2fbehavioral_5fcontexts_2eproto_2epb_2eh
