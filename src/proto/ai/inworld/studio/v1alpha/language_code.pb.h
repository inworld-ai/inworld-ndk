// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ai/inworld/studio/v1alpha/language_code.proto
// Protobuf C++ Version: 4.25.0

#ifndef GOOGLE_PROTOBUF_INCLUDED_ai_2finworld_2fstudio_2fv1alpha_2flanguage_5fcode_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_ai_2finworld_2fstudio_2fv1alpha_2flanguage_5fcode_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025000 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/descriptor.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_ai_2finworld_2fstudio_2fv1alpha_2flanguage_5fcode_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_ai_2finworld_2fstudio_2fv1alpha_2flanguage_5fcode_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2flanguage_5fcode_2eproto;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace ai {
namespace inworld {
namespace studio {
namespace v1alpha {
enum LanguageCode : int {
  LANGUAGE_CODE_UNSPECIFIED = 0,
  EN_US = 1,
  ZH_CN = 2,
  KO_KR = 3,
  LanguageCode_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  LanguageCode_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool LanguageCode_IsValid(int value);
extern const uint32_t LanguageCode_internal_data_[];
constexpr LanguageCode LanguageCode_MIN = static_cast<LanguageCode>(0);
constexpr LanguageCode LanguageCode_MAX = static_cast<LanguageCode>(3);
constexpr int LanguageCode_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
LanguageCode_descriptor();
template <typename T>
const std::string& LanguageCode_Name(T value) {
  static_assert(std::is_same<T, LanguageCode>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to LanguageCode_Name().");
  return LanguageCode_Name(static_cast<LanguageCode>(value));
}
template <>
inline const std::string& LanguageCode_Name(LanguageCode value) {
  return ::google::protobuf::internal::NameOfDenseEnum<LanguageCode_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool LanguageCode_Parse(absl::string_view name, LanguageCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LanguageCode>(
      LanguageCode_descriptor(), name, value);
}

// ===================================================================



// ===================================================================



static const int kLanguageCodeStringFieldNumber = 123456789;
extern ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::EnumValueOptions,
    ::google::protobuf::internal::StringTypeTraits, 9, false >
  language_code_string;
static const int kLanguageNameFieldNumber = 123456790;
extern ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::EnumValueOptions,
    ::google::protobuf::internal::StringTypeTraits, 9, false >
  language_name;

// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1alpha
}  // namespace studio
}  // namespace inworld
}  // namespace ai


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::ai::inworld::studio::v1alpha::LanguageCode> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::ai::inworld::studio::v1alpha::LanguageCode>() {
  return ::ai::inworld::studio::v1alpha::LanguageCode_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_ai_2finworld_2fstudio_2fv1alpha_2flanguage_5fcode_2eproto_2epb_2eh
