#include "ProtoDisableWarning.h"
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ai/inworld/studio/v1alpha/workspaces.proto

#include "ai/inworld/studio/v1alpha/workspaces.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace ai {
namespace inworld {
namespace studio {
namespace v1alpha {

inline constexpr WorkspaceShareInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : emails_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR WorkspaceShareInfo::WorkspaceShareInfo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct WorkspaceShareInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WorkspaceShareInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WorkspaceShareInfoDefaultTypeInternal() {}
  union {
    WorkspaceShareInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WorkspaceShareInfoDefaultTypeInternal _WorkspaceShareInfo_default_instance_;

inline constexpr WorkspaceLimitInfo_WorkspaceLimit::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : display_name_max_length_{0},
        total_characters_{0},
        total_scenes_{0},
        total_triggers_{0},
        total_voices_{0},
        total_common_knowledge_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR WorkspaceLimitInfo_WorkspaceLimit::WorkspaceLimitInfo_WorkspaceLimit(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct WorkspaceLimitInfo_WorkspaceLimitDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WorkspaceLimitInfo_WorkspaceLimitDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WorkspaceLimitInfo_WorkspaceLimitDefaultTypeInternal() {}
  union {
    WorkspaceLimitInfo_WorkspaceLimit _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WorkspaceLimitInfo_WorkspaceLimitDefaultTypeInternal _WorkspaceLimitInfo_WorkspaceLimit_default_instance_;

inline constexpr WorkspaceLimitInfo_TextListLimit::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : item_max_length_{0},
        total_items_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR WorkspaceLimitInfo_TextListLimit::WorkspaceLimitInfo_TextListLimit(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct WorkspaceLimitInfo_TextListLimitDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WorkspaceLimitInfo_TextListLimitDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WorkspaceLimitInfo_TextListLimitDefaultTypeInternal() {}
  union {
    WorkspaceLimitInfo_TextListLimit _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WorkspaceLimitInfo_TextListLimitDefaultTypeInternal _WorkspaceLimitInfo_TextListLimit_default_instance_;

inline constexpr WorkspaceLimitInfo_SceneLimit::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : description_max_length_{0},
        total_characters_{0},
        total_triggers_{0},
        display_name_max_length_{0},
        total_common_knowledge_{0},
        scene_trigger_description_max_length_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR WorkspaceLimitInfo_SceneLimit::WorkspaceLimitInfo_SceneLimit(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct WorkspaceLimitInfo_SceneLimitDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WorkspaceLimitInfo_SceneLimitDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WorkspaceLimitInfo_SceneLimitDefaultTypeInternal() {}
  union {
    WorkspaceLimitInfo_SceneLimit _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WorkspaceLimitInfo_SceneLimitDefaultTypeInternal _WorkspaceLimitInfo_SceneLimit_default_instance_;

inline constexpr WorkspaceLimitInfo_BillingAccountLimit::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : total_workspaces_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR WorkspaceLimitInfo_BillingAccountLimit::WorkspaceLimitInfo_BillingAccountLimit(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct WorkspaceLimitInfo_BillingAccountLimitDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WorkspaceLimitInfo_BillingAccountLimitDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WorkspaceLimitInfo_BillingAccountLimitDefaultTypeInternal() {}
  union {
    WorkspaceLimitInfo_BillingAccountLimit _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WorkspaceLimitInfo_BillingAccountLimitDefaultTypeInternal _WorkspaceLimitInfo_BillingAccountLimit_default_instance_;

inline constexpr Workspace_Meta::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : total_characters_{0},
        total_scenes_{0},
        total_triggers_{0},
        total_common_knowledge_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Workspace_Meta::Workspace_Meta(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Workspace_MetaDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Workspace_MetaDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Workspace_MetaDefaultTypeInternal() {}
  union {
    Workspace_Meta _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Workspace_MetaDefaultTypeInternal _Workspace_Meta_default_instance_;

inline constexpr ShareWorkspaceRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : emails_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ShareWorkspaceRequest::ShareWorkspaceRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ShareWorkspaceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ShareWorkspaceRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ShareWorkspaceRequestDefaultTypeInternal() {}
  union {
    ShareWorkspaceRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ShareWorkspaceRequestDefaultTypeInternal _ShareWorkspaceRequest_default_instance_;

inline constexpr ListWorkspacesRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : page_token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        page_size_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ListWorkspacesRequest::ListWorkspacesRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ListWorkspacesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListWorkspacesRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListWorkspacesRequestDefaultTypeInternal() {}
  union {
    ListWorkspacesRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListWorkspacesRequestDefaultTypeInternal _ListWorkspacesRequest_default_instance_;

inline constexpr GetWorkspaceShareInfoRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetWorkspaceShareInfoRequest::GetWorkspaceShareInfoRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetWorkspaceShareInfoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetWorkspaceShareInfoRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetWorkspaceShareInfoRequestDefaultTypeInternal() {}
  union {
    GetWorkspaceShareInfoRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetWorkspaceShareInfoRequestDefaultTypeInternal _GetWorkspaceShareInfoRequest_default_instance_;

inline constexpr GetWorkspaceRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        view_{static_cast< ::ai::inworld::studio::v1alpha::WorkspaceItemView >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetWorkspaceRequest::GetWorkspaceRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetWorkspaceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetWorkspaceRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetWorkspaceRequestDefaultTypeInternal() {}
  union {
    GetWorkspaceRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetWorkspaceRequestDefaultTypeInternal _GetWorkspaceRequest_default_instance_;

inline constexpr GetWorkspaceLimitInfoRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetWorkspaceLimitInfoRequest::GetWorkspaceLimitInfoRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetWorkspaceLimitInfoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetWorkspaceLimitInfoRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetWorkspaceLimitInfoRequestDefaultTypeInternal() {}
  union {
    GetWorkspaceLimitInfoRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetWorkspaceLimitInfoRequestDefaultTypeInternal _GetWorkspaceLimitInfoRequest_default_instance_;

inline constexpr GenerateResourceNameResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : resource_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GenerateResourceNameResponse::GenerateResourceNameResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GenerateResourceNameResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GenerateResourceNameResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GenerateResourceNameResponseDefaultTypeInternal() {}
  union {
    GenerateResourceNameResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GenerateResourceNameResponseDefaultTypeInternal _GenerateResourceNameResponse_default_instance_;

inline constexpr GenerateResourceNameRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : workspace_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        display_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        resource_type_{static_cast< ::ai::inworld::studio::v1alpha::GenerateResourceNameRequest_ResourceType >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GenerateResourceNameRequest::GenerateResourceNameRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GenerateResourceNameRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GenerateResourceNameRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GenerateResourceNameRequestDefaultTypeInternal() {}
  union {
    GenerateResourceNameRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GenerateResourceNameRequestDefaultTypeInternal _GenerateResourceNameRequest_default_instance_;

inline constexpr DeleteWorkspaceRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        force_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DeleteWorkspaceRequest::DeleteWorkspaceRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DeleteWorkspaceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteWorkspaceRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteWorkspaceRequestDefaultTypeInternal() {}
  union {
    DeleteWorkspaceRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteWorkspaceRequestDefaultTypeInternal _DeleteWorkspaceRequest_default_instance_;

inline constexpr CloneWorkspaceRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        target_workspace_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CloneWorkspaceRequest::CloneWorkspaceRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CloneWorkspaceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CloneWorkspaceRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CloneWorkspaceRequestDefaultTypeInternal() {}
  union {
    CloneWorkspaceRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CloneWorkspaceRequestDefaultTypeInternal _CloneWorkspaceRequest_default_instance_;

inline constexpr WorkspaceLimitInfo_CommonKnowledgeLimit::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        memory_records_{nullptr},
        display_name_max_length_{0},
        description_max_length_{0} {}

template <typename>
PROTOBUF_CONSTEXPR WorkspaceLimitInfo_CommonKnowledgeLimit::WorkspaceLimitInfo_CommonKnowledgeLimit(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct WorkspaceLimitInfo_CommonKnowledgeLimitDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WorkspaceLimitInfo_CommonKnowledgeLimitDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WorkspaceLimitInfo_CommonKnowledgeLimitDefaultTypeInternal() {}
  union {
    WorkspaceLimitInfo_CommonKnowledgeLimit _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WorkspaceLimitInfo_CommonKnowledgeLimitDefaultTypeInternal _WorkspaceLimitInfo_CommonKnowledgeLimit_default_instance_;

inline constexpr WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        hobby_or_interests_{nullptr},
        nicknames_{nullptr},
        personality_adjectives_{nullptr},
        core_max_length_{0},
        example_dialog_max_length_{0},
        motivation_max_length_{0},
        character_role_max_length_{0},
        flaws_max_length_{0} {}

template <typename>
PROTOBUF_CONSTEXPR WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit::WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimitDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimitDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimitDefaultTypeInternal() {}
  union {
    WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimitDefaultTypeInternal _WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit_default_instance_;

inline constexpr Workspace::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        experimental_features_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        display_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        billing_account_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        meta_{nullptr},
        runtime_access_{static_cast< ::ai::inworld::studio::v1alpha::Workspace_RuntimeAccess >(0)},
        primary_language_code_{static_cast< ::ai::inworld::studio::v1alpha::LanguageCode >(0)},
        primary_language_{static_cast< ::ai::inworld::language_codes::LanguageCode >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR Workspace::Workspace(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct WorkspaceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WorkspaceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WorkspaceDefaultTypeInternal() {}
  union {
    Workspace _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WorkspaceDefaultTypeInternal _Workspace_default_instance_;

inline constexpr WorkspaceLimitInfo_CharacterLimit::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        character_description_{nullptr},
        name_max_length_{0},
        total_triggers_{0},
        total_common_knowledge_{0} {}

template <typename>
PROTOBUF_CONSTEXPR WorkspaceLimitInfo_CharacterLimit::WorkspaceLimitInfo_CharacterLimit(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct WorkspaceLimitInfo_CharacterLimitDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WorkspaceLimitInfo_CharacterLimitDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WorkspaceLimitInfo_CharacterLimitDefaultTypeInternal() {}
  union {
    WorkspaceLimitInfo_CharacterLimit _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WorkspaceLimitInfo_CharacterLimitDefaultTypeInternal _WorkspaceLimitInfo_CharacterLimit_default_instance_;

inline constexpr UpdateWorkspaceRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        workspace_{nullptr},
        update_mask_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateWorkspaceRequest::UpdateWorkspaceRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UpdateWorkspaceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateWorkspaceRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateWorkspaceRequestDefaultTypeInternal() {}
  union {
    UpdateWorkspaceRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateWorkspaceRequestDefaultTypeInternal _UpdateWorkspaceRequest_default_instance_;

inline constexpr ListWorkspacesResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : workspaces_{},
        next_page_token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ListWorkspacesResponse::ListWorkspacesResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ListWorkspacesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListWorkspacesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListWorkspacesResponseDefaultTypeInternal() {}
  union {
    ListWorkspacesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListWorkspacesResponseDefaultTypeInternal _ListWorkspacesResponse_default_instance_;

inline constexpr ImpressionEventRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : data_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ImpressionEventRequest::ImpressionEventRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ImpressionEventRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ImpressionEventRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ImpressionEventRequestDefaultTypeInternal() {}
  union {
    ImpressionEventRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ImpressionEventRequestDefaultTypeInternal _ImpressionEventRequest_default_instance_;

inline constexpr CreateWorkspaceRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        workspace_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CreateWorkspaceRequest::CreateWorkspaceRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CreateWorkspaceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateWorkspaceRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateWorkspaceRequestDefaultTypeInternal() {}
  union {
    CreateWorkspaceRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateWorkspaceRequestDefaultTypeInternal _CreateWorkspaceRequest_default_instance_;

inline constexpr WorkspaceLimitInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        character_{nullptr},
        scene_{nullptr},
        workspace_{nullptr},
        billing_account_{nullptr},
        common_knowledge_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR WorkspaceLimitInfo::WorkspaceLimitInfo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct WorkspaceLimitInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WorkspaceLimitInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WorkspaceLimitInfoDefaultTypeInternal() {}
  union {
    WorkspaceLimitInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WorkspaceLimitInfoDefaultTypeInternal _WorkspaceLimitInfo_default_instance_;
}  // namespace v1alpha
}  // namespace studio
}  // namespace inworld
}  // namespace ai
static ::_pb::Metadata file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto[24];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto[3];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto = nullptr;
const ::uint32_t TableStruct_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::GetWorkspaceRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::GetWorkspaceRequest, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::GetWorkspaceRequest, _impl_.view_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ListWorkspacesRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ListWorkspacesRequest, _impl_.page_size_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ListWorkspacesRequest, _impl_.page_token_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CreateWorkspaceRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CreateWorkspaceRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CreateWorkspaceRequest, _impl_.workspace_),
    0,
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::UpdateWorkspaceRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::UpdateWorkspaceRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::UpdateWorkspaceRequest, _impl_.workspace_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::UpdateWorkspaceRequest, _impl_.update_mask_),
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::DeleteWorkspaceRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::DeleteWorkspaceRequest, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::DeleteWorkspaceRequest, _impl_.force_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CloneWorkspaceRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CloneWorkspaceRequest, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::CloneWorkspaceRequest, _impl_.target_workspace_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ImpressionEventRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ImpressionEventRequest, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ImpressionEventRequest, _impl_.data_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Workspace_Meta, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Workspace_Meta, _impl_.total_characters_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Workspace_Meta, _impl_.total_scenes_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Workspace_Meta, _impl_.total_triggers_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Workspace_Meta, _impl_.total_common_knowledge_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Workspace, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Workspace, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Workspace, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Workspace, _impl_.display_name_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Workspace, _impl_.experimental_features_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Workspace, _impl_.billing_account_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Workspace, _impl_.meta_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Workspace, _impl_.runtime_access_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Workspace, _impl_.primary_language_code_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::Workspace, _impl_.primary_language_),
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    0,
    ~0u,
    ~0u,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ListWorkspacesResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ListWorkspacesResponse, _impl_.workspaces_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ListWorkspacesResponse, _impl_.next_page_token_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ShareWorkspaceRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ShareWorkspaceRequest, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::ShareWorkspaceRequest, _impl_.emails_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::GenerateResourceNameRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::GenerateResourceNameRequest, _impl_.workspace_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::GenerateResourceNameRequest, _impl_.display_name_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::GenerateResourceNameRequest, _impl_.resource_type_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::GenerateResourceNameResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::GenerateResourceNameResponse, _impl_.resource_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::GetWorkspaceShareInfoRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::GetWorkspaceShareInfoRequest, _impl_.name_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::WorkspaceShareInfo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::WorkspaceShareInfo, _impl_.emails_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::GetWorkspaceLimitInfoRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::GetWorkspaceLimitInfoRequest, _impl_.name_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_TextListLimit, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_TextListLimit, _impl_.item_max_length_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_TextListLimit, _impl_.total_items_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit, _impl_.core_max_length_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit, _impl_.example_dialog_max_length_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit, _impl_.motivation_max_length_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit, _impl_.character_role_max_length_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit, _impl_.hobby_or_interests_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit, _impl_.nicknames_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit, _impl_.personality_adjectives_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit, _impl_.flaws_max_length_),
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    0,
    1,
    2,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_CharacterLimit, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_CharacterLimit, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_CharacterLimit, _impl_.name_max_length_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_CharacterLimit, _impl_.total_triggers_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_CharacterLimit, _impl_.total_common_knowledge_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_CharacterLimit, _impl_.character_description_),
    ~0u,
    ~0u,
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_SceneLimit, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_SceneLimit, _impl_.description_max_length_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_SceneLimit, _impl_.total_characters_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_SceneLimit, _impl_.total_triggers_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_SceneLimit, _impl_.display_name_max_length_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_SceneLimit, _impl_.total_common_knowledge_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_SceneLimit, _impl_.scene_trigger_description_max_length_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_WorkspaceLimit, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_WorkspaceLimit, _impl_.display_name_max_length_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_WorkspaceLimit, _impl_.total_characters_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_WorkspaceLimit, _impl_.total_scenes_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_WorkspaceLimit, _impl_.total_triggers_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_WorkspaceLimit, _impl_.total_voices_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_WorkspaceLimit, _impl_.total_common_knowledge_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_BillingAccountLimit, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_BillingAccountLimit, _impl_.total_workspaces_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_CommonKnowledgeLimit, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_CommonKnowledgeLimit, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_CommonKnowledgeLimit, _impl_.display_name_max_length_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_CommonKnowledgeLimit, _impl_.description_max_length_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_CommonKnowledgeLimit, _impl_.memory_records_),
    ~0u,
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::WorkspaceLimitInfo, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::WorkspaceLimitInfo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::WorkspaceLimitInfo, _impl_.character_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::WorkspaceLimitInfo, _impl_.scene_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::WorkspaceLimitInfo, _impl_.workspace_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::WorkspaceLimitInfo, _impl_.billing_account_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::studio::v1alpha::WorkspaceLimitInfo, _impl_.common_knowledge_),
    0,
    1,
    2,
    3,
    4,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::ai::inworld::studio::v1alpha::GetWorkspaceRequest)},
        {10, -1, -1, sizeof(::ai::inworld::studio::v1alpha::ListWorkspacesRequest)},
        {20, 29, -1, sizeof(::ai::inworld::studio::v1alpha::CreateWorkspaceRequest)},
        {30, 40, -1, sizeof(::ai::inworld::studio::v1alpha::UpdateWorkspaceRequest)},
        {42, -1, -1, sizeof(::ai::inworld::studio::v1alpha::DeleteWorkspaceRequest)},
        {52, -1, -1, sizeof(::ai::inworld::studio::v1alpha::CloneWorkspaceRequest)},
        {62, -1, -1, sizeof(::ai::inworld::studio::v1alpha::ImpressionEventRequest)},
        {72, -1, -1, sizeof(::ai::inworld::studio::v1alpha::Workspace_Meta)},
        {84, 100, -1, sizeof(::ai::inworld::studio::v1alpha::Workspace)},
        {108, -1, -1, sizeof(::ai::inworld::studio::v1alpha::ListWorkspacesResponse)},
        {118, -1, -1, sizeof(::ai::inworld::studio::v1alpha::ShareWorkspaceRequest)},
        {128, -1, -1, sizeof(::ai::inworld::studio::v1alpha::GenerateResourceNameRequest)},
        {139, -1, -1, sizeof(::ai::inworld::studio::v1alpha::GenerateResourceNameResponse)},
        {148, -1, -1, sizeof(::ai::inworld::studio::v1alpha::GetWorkspaceShareInfoRequest)},
        {157, -1, -1, sizeof(::ai::inworld::studio::v1alpha::WorkspaceShareInfo)},
        {166, -1, -1, sizeof(::ai::inworld::studio::v1alpha::GetWorkspaceLimitInfoRequest)},
        {175, -1, -1, sizeof(::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_TextListLimit)},
        {185, 201, -1, sizeof(::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit)},
        {209, 221, -1, sizeof(::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_CharacterLimit)},
        {225, -1, -1, sizeof(::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_SceneLimit)},
        {239, -1, -1, sizeof(::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_WorkspaceLimit)},
        {253, -1, -1, sizeof(::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_BillingAccountLimit)},
        {262, 273, -1, sizeof(::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_CommonKnowledgeLimit)},
        {276, 289, -1, sizeof(::ai::inworld::studio::v1alpha::WorkspaceLimitInfo)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::ai::inworld::studio::v1alpha::_GetWorkspaceRequest_default_instance_._instance,
    &::ai::inworld::studio::v1alpha::_ListWorkspacesRequest_default_instance_._instance,
    &::ai::inworld::studio::v1alpha::_CreateWorkspaceRequest_default_instance_._instance,
    &::ai::inworld::studio::v1alpha::_UpdateWorkspaceRequest_default_instance_._instance,
    &::ai::inworld::studio::v1alpha::_DeleteWorkspaceRequest_default_instance_._instance,
    &::ai::inworld::studio::v1alpha::_CloneWorkspaceRequest_default_instance_._instance,
    &::ai::inworld::studio::v1alpha::_ImpressionEventRequest_default_instance_._instance,
    &::ai::inworld::studio::v1alpha::_Workspace_Meta_default_instance_._instance,
    &::ai::inworld::studio::v1alpha::_Workspace_default_instance_._instance,
    &::ai::inworld::studio::v1alpha::_ListWorkspacesResponse_default_instance_._instance,
    &::ai::inworld::studio::v1alpha::_ShareWorkspaceRequest_default_instance_._instance,
    &::ai::inworld::studio::v1alpha::_GenerateResourceNameRequest_default_instance_._instance,
    &::ai::inworld::studio::v1alpha::_GenerateResourceNameResponse_default_instance_._instance,
    &::ai::inworld::studio::v1alpha::_GetWorkspaceShareInfoRequest_default_instance_._instance,
    &::ai::inworld::studio::v1alpha::_WorkspaceShareInfo_default_instance_._instance,
    &::ai::inworld::studio::v1alpha::_GetWorkspaceLimitInfoRequest_default_instance_._instance,
    &::ai::inworld::studio::v1alpha::_WorkspaceLimitInfo_TextListLimit_default_instance_._instance,
    &::ai::inworld::studio::v1alpha::_WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit_default_instance_._instance,
    &::ai::inworld::studio::v1alpha::_WorkspaceLimitInfo_CharacterLimit_default_instance_._instance,
    &::ai::inworld::studio::v1alpha::_WorkspaceLimitInfo_SceneLimit_default_instance_._instance,
    &::ai::inworld::studio::v1alpha::_WorkspaceLimitInfo_WorkspaceLimit_default_instance_._instance,
    &::ai::inworld::studio::v1alpha::_WorkspaceLimitInfo_BillingAccountLimit_default_instance_._instance,
    &::ai::inworld::studio::v1alpha::_WorkspaceLimitInfo_CommonKnowledgeLimit_default_instance_._instance,
    &::ai::inworld::studio::v1alpha::_WorkspaceLimitInfo_default_instance_._instance,
};
const char descriptor_table_protodef_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n*ai/inworld/studio/v1alpha/workspaces.p"
    "roto\022\031ai.inworld.studio.v1alpha\0325ai/inwo"
    "rld/studio/v1alpha/impression_event_data"
    ".proto\032-ai/inworld/studio/v1alpha/langua"
    "ge_code.proto\032\034google/api/annotations.pr"
    "oto\032\027google/api/client.proto\032\037google/api"
    "/field_behavior.proto\032\031google/api/resour"
    "ce.proto\032\033google/protobuf/empty.proto\032 g"
    "oogle/protobuf/field_mask.proto\032\037google/"
    "protobuf/timestamp.proto\032 ai/inworld/opt"
    "ions/options.proto\032.ai/inworld/language_"
    "codes/language_codes.proto\"\202\001\n\023GetWorksp"
    "aceRequest\022/\n\004name\030\001 \001(\tB!\342A\001\002\372A\032\n\030api.i"
    "nworld.ai/Workspace\022:\n\004view\030\002 \001(\0162,.ai.i"
    "nworld.studio.v1alpha.WorkspaceItemView\""
    ">\n\025ListWorkspacesRequest\022\021\n\tpage_size\030\001 "
    "\001(\005\022\022\n\npage_token\030\002 \001(\t\"W\n\026CreateWorkspa"
    "ceRequest\022=\n\tworkspace\030\001 \001(\0132$.ai.inworl"
    "d.studio.v1alpha.WorkspaceB\004\342A\001\002\"\216\001\n\026Upd"
    "ateWorkspaceRequest\022=\n\tworkspace\030\001 \001(\0132$"
    ".ai.inworld.studio.v1alpha.WorkspaceB\004\342A"
    "\001\002\0225\n\013update_mask\030\002 \001(\0132\032.google.protobu"
    "f.FieldMaskB\004\342A\001\002\"X\n\026DeleteWorkspaceRequ"
    "est\022/\n\004name\030\001 \001(\tB!\342A\001\002\372A\032\n\030api.inworld."
    "ai/Workspace\022\r\n\005force\030\002 \001(\010\"b\n\025CloneWork"
    "spaceRequest\022/\n\004name\030\001 \001(\tB!\342A\001\002\372A\032\n\030api"
    ".inworld.ai/Workspace\022\030\n\020target_workspac"
    "e\030\002 \001(\t\"\207\001\n\026ImpressionEventRequest\022/\n\004na"
    "me\030\001 \001(\tB!\342A\001\002\372A\032\n\030api.inworld.ai/Worksp"
    "ace\022<\n\004data\030\002 \003(\0132..ai.inworld.studio.v1"
    "alpha.ImpressionEventData\"\342\005\n\tWorkspace\022"
    "0\n\004name\030\001 \001(\tB\"\342A\001\002\242\317\"\032\n\030\032\026workspaces/wo"
    "rkspace-1\022\032\n\014display_name\030\002 \001(\tB\004\342A\001\002\022\035\n"
    "\025experimental_features\030\003 \003(\t\022\?\n\017billing_"
    "account\030\004 \001(\tB&\342A\001\002\372A\037\n\035api.inworld.ai/B"
    "illingAccount\022=\n\004meta\030\005 \001(\0132).ai.inworld"
    ".studio.v1alpha.Workspace.MetaB\004\342A\001\003\022J\n\016"
    "runtime_access\030\006 \001(\01622.ai.inworld.studio"
    ".v1alpha.Workspace.RuntimeAccess\022J\n\025prim"
    "ary_language_code\030\007 \001(\0162\'.ai.inworld.stu"
    "dio.v1alpha.LanguageCodeB\002\030\001\022A\n\020primary_"
    "language\030\010 \001(\0162\'.ai.inworld.language_cod"
    "es.LanguageCode\032n\n\004Meta\022\030\n\020total_charact"
    "ers\030\001 \001(\005\022\024\n\014total_scenes\030\002 \001(\005\022\026\n\016total"
    "_triggers\030\003 \001(\005\022\036\n\026total_common_knowledg"
    "e\030\004 \001(\005\"f\n\rRuntimeAccess\022\036\n\032RUNTIME_ACCE"
    "SS_UNSPECIFIED\020\000\022\032\n\026RUNTIME_ACCESS_PRIVA"
    "TE\020\001\022\031\n\025RUNTIME_ACCESS_PUBLIC\020\002:5\352A2\n\030ap"
    "i.inworld.ai/Workspace\022\026workspaces/{work"
    "space}\"k\n\026ListWorkspacesResponse\0228\n\nwork"
    "spaces\030\001 \003(\0132$.ai.inworld.studio.v1alpha"
    ".Workspace\022\027\n\017next_page_token\030\002 \001(\t\"t\n\025S"
    "hareWorkspaceRequest\022/\n\004name\030\001 \001(\tB!\342A\001\002"
    "\372A\032\n\030api.inworld.ai/Workspace\022*\n\006emails\030"
    "\002 \003(\tB\032\242\317\"\026\n\0242\022\n\020\032\016user@email.com\"\324\002\n\033Ge"
    "nerateResourceNameRequest\0224\n\tworkspace\030\001"
    " \001(\tB!\342A\001\002\372A\032\n\030api.inworld.ai/Workspace\022"
    "\032\n\014display_name\030\002 \001(\tB\004\342A\001\002\022`\n\rresource_"
    "type\030\003 \001(\0162C.ai.inworld.studio.v1alpha.G"
    "enerateResourceNameRequest.ResourceTypeB"
    "\004\342A\001\002\"\200\001\n\014ResourceType\022\035\n\031RESOURCE_TYPE_"
    "UNSPECIFIED\020\000\022\033\n\027RESOURCE_TYPE_WORKSPACE"
    "\020\001\022\033\n\027RESOURCE_TYPE_CHARACTER\020\002\022\027\n\023RESOU"
    "RCE_TYPE_SCENE\020\003\"6\n\034GenerateResourceName"
    "Response\022\026\n\010resource\030\001 \001(\tB\004\342A\001\002\"O\n\034GetW"
    "orkspaceShareInfoRequest\022/\n\004name\030\001 \001(\tB!"
    "\342A\001\002\372A\032\n\030api.inworld.ai/Workspace\"$\n\022Wor"
    "kspaceShareInfo\022\016\n\006emails\030\001 \003(\t\"O\n\034GetWo"
    "rkspaceLimitInfoRequest\022/\n\004name\030\001 \001(\tB!\342"
    "A\001\002\372A\032\n\030api.inworld.ai/Workspace\"\361\r\n\022Wor"
    "kspaceLimitInfo\022O\n\tcharacter\030\001 \001(\0132<.ai."
    "inworld.studio.v1alpha.WorkspaceLimitInf"
    "o.CharacterLimit\022G\n\005scene\030\002 \001(\01328.ai.inw"
    "orld.studio.v1alpha.WorkspaceLimitInfo.S"
    "ceneLimit\022O\n\tworkspace\030\003 \001(\0132<.ai.inworl"
    "d.studio.v1alpha.WorkspaceLimitInfo.Work"
    "spaceLimit\022Z\n\017billing_account\030\004 \001(\0132A.ai"
    ".inworld.studio.v1alpha.WorkspaceLimitIn"
    "fo.BillingAccountLimit\022\\\n\020common_knowled"
    "ge\030\005 \001(\0132B.ai.inworld.studio.v1alpha.Wor"
    "kspaceLimitInfo.CommonKnowledgeLimit\032=\n\r"
    "TextListLimit\022\027\n\017item_max_length\030\001 \001(\005\022\023"
    "\n\013total_items\030\002 \001(\005\032\224\005\n\016CharacterLimit\022\027"
    "\n\017name_max_length\030\001 \001(\005\022\026\n\016total_trigger"
    "s\030\002 \001(\005\022\036\n\026total_common_knowledge\030\003 \001(\005\022"
    "u\n\025character_description\030\004 \001(\0132V.ai.inwo"
    "rld.studio.v1alpha.WorkspaceLimitInfo.Ch"
    "aracterLimit.CharacterDescriptionLimit\032\271"
    "\003\n\031CharacterDescriptionLimit\022\027\n\017core_max"
    "_length\030\001 \001(\005\022!\n\031example_dialog_max_leng"
    "th\030\002 \001(\005\022\035\n\025motivation_max_length\030\003 \001(\005\022"
    "!\n\031character_role_max_length\030\004 \001(\005\022W\n\022ho"
    "bby_or_interests\030\005 \001(\0132;.ai.inworld.stud"
    "io.v1alpha.WorkspaceLimitInfo.TextListLi"
    "mit\022N\n\tnicknames\030\006 \001(\0132;.ai.inworld.stud"
    "io.v1alpha.WorkspaceLimitInfo.TextListLi"
    "mit\022[\n\026personality_adjectives\030\007 \001(\0132;.ai"
    ".inworld.studio.v1alpha.WorkspaceLimitIn"
    "fo.TextListLimit\022\030\n\020flaws_max_length\030\010 \001"
    "(\005\032\315\001\n\nSceneLimit\022\036\n\026description_max_len"
    "gth\030\001 \001(\005\022\030\n\020total_characters\030\002 \001(\005\022\026\n\016t"
    "otal_triggers\030\003 \001(\005\022\037\n\027display_name_max_"
    "length\030\004 \001(\005\022\036\n\026total_common_knowledge\030\005"
    " \001(\005\022,\n$scene_trigger_description_max_le"
    "ngth\030\006 \001(\005\032\257\001\n\016WorkspaceLimit\022\037\n\027display"
    "_name_max_length\030\001 \001(\005\022\030\n\020total_characte"
    "rs\030\002 \001(\005\022\024\n\014total_scenes\030\003 \001(\005\022\026\n\016total_"
    "triggers\030\004 \001(\005\022\024\n\014total_voices\030\005 \001(\005\022\036\n\026"
    "total_common_knowledge\030\006 \001(\005\032/\n\023BillingA"
    "ccountLimit\022\030\n\020total_workspaces\030\001 \001(\005\032\254\001"
    "\n\024CommonKnowledgeLimit\022\037\n\027display_name_m"
    "ax_length\030\001 \001(\005\022\036\n\026description_max_lengt"
    "h\030\002 \001(\005\022S\n\016memory_records\030\003 \001(\0132;.ai.inw"
    "orld.studio.v1alpha.WorkspaceLimitInfo.T"
    "extListLimit*|\n\021WorkspaceItemView\022#\n\037WOR"
    "KSPACE_ITEM_VIEW_UNSPECIFIED\020\000\022\037\n\033WORKSP"
    "ACE_ITEM_VIEW_DEFAULT\020\001\022!\n\035WORKSPACE_ITE"
    "M_VIEW_WITH_META\020\0022\357\016\n\nWorkspaces\022\221\001\n\014Ge"
    "tWorkspace\022..ai.inworld.studio.v1alpha.G"
    "etWorkspaceRequest\032$.ai.inworld.studio.v"
    "1alpha.Workspace\"+\332A\004name\202\323\344\223\002\036\022\034/v1alph"
    "a/{name=workspaces/*}\022\225\001\n\016ListWorkspaces"
    "\0220.ai.inworld.studio.v1alpha.ListWorkspa"
    "cesRequest\0321.ai.inworld.studio.v1alpha.L"
    "istWorkspacesResponse\"\036\332A\000\202\323\344\223\002\025\022\023/v1alp"
    "ha/workspaces\022\275\001\n\017UpdateWorkspace\0221.ai.i"
    "nworld.studio.v1alpha.UpdateWorkspaceReq"
    "uest\032$.ai.inworld.studio.v1alpha.Workspa"
    "ce\"Q\332A\025workspace,update_mask\202\323\344\223\00232&/v1a"
    "lpha/{workspace.name=workspaces/*}:\twork"
    "space\022\236\001\n\017CreateWorkspace\0221.ai.inworld.s"
    "tudio.v1alpha.CreateWorkspaceRequest\032$.a"
    "i.inworld.studio.v1alpha.Workspace\"2\332A\tw"
    "orkspace\202\323\344\223\002 \"\023/v1alpha/workspaces:\twor"
    "kspace\022\211\001\n\017DeleteWorkspace\0221.ai.inworld."
    "studio.v1alpha.DeleteWorkspaceRequest\032\026."
    "google.protobuf.Empty\"+\332A\004name\202\323\344\223\002\036*\034/v"
    "1alpha/{name=workspaces/*}\022\236\001\n\016CloneWork"
    "space\0220.ai.inworld.studio.v1alpha.CloneW"
    "orkspaceRequest\032$.ai.inworld.studio.v1al"
    "pha.Workspace\"4\332A\004name\202\323\344\223\002\'\"\"/v1alpha/{"
    "name=workspaces/*}:clone:\001*\022\220\001\n\016ShareWor"
    "kspace\0220.ai.inworld.studio.v1alpha.Share"
    "WorkspaceRequest\032\026.google.protobuf.Empty"
    "\"4\332A\004name\202\323\344\223\002\'\"\"/v1alpha/{name=workspac"
    "es/*}:share:\001*\022\361\001\n\024generateResourceName\022"
    "6.ai.inworld.studio.v1alpha.GenerateReso"
    "urceNameRequest\0327.ai.inworld.studio.v1al"
    "pha.GenerateResourceNameResponse\"h\332A$wor"
    "kspace,display_name,resource_type\202\323\344\223\002;\""
    "6/v1alpha/{workspace=workspaces/*}:gener"
    "ateResourceName:\001*\022\277\001\n\025GetWorkspaceShare"
    "Info\0227.ai.inworld.studio.v1alpha.GetWork"
    "spaceShareInfoRequest\032-.ai.inworld.studi"
    "o.v1alpha.WorkspaceShareInfo\">\332A\004name\202\323\344"
    "\223\0021\022//v1alpha/{name=workspaces/*/workspa"
    "ceShareInfo}\022\277\001\n\025GetWorkspaceLimitInfo\0227"
    ".ai.inworld.studio.v1alpha.GetWorkspaceL"
    "imitInfoRequest\032-.ai.inworld.studio.v1al"
    "pha.WorkspaceLimitInfo\">\332A\004name\202\323\344\223\0021\022//"
    "v1alpha/{name=workspaces/*/workspaceLimi"
    "tInfo}\022\233\001\n\023SendImpressionEvent\0221.ai.inwo"
    "rld.studio.v1alpha.ImpressionEventReques"
    "t\032\026.google.protobuf.Empty\"9\332A\004name\202\323\344\223\002,"
    "\"\'/v1alpha/{name=workspaces/*}:impressio"
    "n:\001*B\231\001\n\031ai.inworld.studio.v1alphaB\017Work"
    "spacesProtoP\001ZMgithub.com/inworld-ai/inw"
    "orld/serving/grpc-gateway/build/proto/st"
    "udio/v1alpha\252\002\031Ai.Inworld.Studio.V1Alpha"
    "b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto_deps[11] =
    {
        &::descriptor_table_ai_2finworld_2flanguage_5fcodes_2flanguage_5fcodes_2eproto,
        &::descriptor_table_ai_2finworld_2foptions_2foptions_2eproto,
        &::descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fimpression_5fevent_5fdata_2eproto,
        &::descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2flanguage_5fcode_2eproto,
        &::descriptor_table_google_2fapi_2fannotations_2eproto,
        &::descriptor_table_google_2fapi_2fclient_2eproto,
        &::descriptor_table_google_2fapi_2ffield_5fbehavior_2eproto,
        &::descriptor_table_google_2fapi_2fresource_2eproto,
        &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
        &::descriptor_table_google_2fprotobuf_2ffield_5fmask_2eproto,
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::absl::once_flag descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto = {
    false,
    false,
    6768,
    descriptor_table_protodef_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto,
    "ai/inworld/studio/v1alpha/workspaces.proto",
    &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto_once,
    descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto_deps,
    11,
    24,
    schemas,
    file_default_instances,
    TableStruct_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto::offsets,
    file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto,
    file_level_enum_descriptors_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto,
    file_level_service_descriptors_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto_getter() {
  return &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto(&descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto);
namespace ai {
namespace inworld {
namespace studio {
namespace v1alpha {
const ::google::protobuf::EnumDescriptor* Workspace_RuntimeAccess_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto);
  return file_level_enum_descriptors_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t Workspace_RuntimeAccess_internal_data_[] = {
    196608u, 0u, };
bool Workspace_RuntimeAccess_IsValid(int value) {
  return 0 <= value && value <= 2;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Workspace_RuntimeAccess Workspace::RUNTIME_ACCESS_UNSPECIFIED;
constexpr Workspace_RuntimeAccess Workspace::RUNTIME_ACCESS_PRIVATE;
constexpr Workspace_RuntimeAccess Workspace::RUNTIME_ACCESS_PUBLIC;
constexpr Workspace_RuntimeAccess Workspace::RuntimeAccess_MIN;
constexpr Workspace_RuntimeAccess Workspace::RuntimeAccess_MAX;
constexpr int Workspace::RuntimeAccess_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* GenerateResourceNameRequest_ResourceType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto);
  return file_level_enum_descriptors_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t GenerateResourceNameRequest_ResourceType_internal_data_[] = {
    262144u, 0u, };
bool GenerateResourceNameRequest_ResourceType_IsValid(int value) {
  return 0 <= value && value <= 3;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr GenerateResourceNameRequest_ResourceType GenerateResourceNameRequest::RESOURCE_TYPE_UNSPECIFIED;
constexpr GenerateResourceNameRequest_ResourceType GenerateResourceNameRequest::RESOURCE_TYPE_WORKSPACE;
constexpr GenerateResourceNameRequest_ResourceType GenerateResourceNameRequest::RESOURCE_TYPE_CHARACTER;
constexpr GenerateResourceNameRequest_ResourceType GenerateResourceNameRequest::RESOURCE_TYPE_SCENE;
constexpr GenerateResourceNameRequest_ResourceType GenerateResourceNameRequest::ResourceType_MIN;
constexpr GenerateResourceNameRequest_ResourceType GenerateResourceNameRequest::ResourceType_MAX;
constexpr int GenerateResourceNameRequest::ResourceType_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* WorkspaceItemView_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto);
  return file_level_enum_descriptors_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t WorkspaceItemView_internal_data_[] = {
    196608u, 0u, };
bool WorkspaceItemView_IsValid(int value) {
  return 0 <= value && value <= 2;
}
// ===================================================================

class GetWorkspaceRequest::_Internal {
 public:
};

GetWorkspaceRequest::GetWorkspaceRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.GetWorkspaceRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetWorkspaceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : name_(arena, from.name_),
        _cached_size_{0} {}

GetWorkspaceRequest::GetWorkspaceRequest(
    ::google::protobuf::Arena* arena,
    const GetWorkspaceRequest& from)
    : ::google::protobuf::Message(arena) {
  GetWorkspaceRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.view_ = from._impl_.view_;

  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.GetWorkspaceRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetWorkspaceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        _cached_size_{0} {}

inline void GetWorkspaceRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.view_ = {};
}
GetWorkspaceRequest::~GetWorkspaceRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.GetWorkspaceRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetWorkspaceRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GetWorkspaceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.GetWorkspaceRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.view_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetWorkspaceRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 58, 2> GetWorkspaceRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GetWorkspaceRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .ai.inworld.studio.v1alpha.WorkspaceItemView view = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetWorkspaceRequest, _impl_.view_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(GetWorkspaceRequest, _impl_.view_)}},
    // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetWorkspaceRequest, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
    {PROTOBUF_FIELD_OFFSET(GetWorkspaceRequest, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .ai.inworld.studio.v1alpha.WorkspaceItemView view = 2;
    {PROTOBUF_FIELD_OFFSET(GetWorkspaceRequest, _impl_.view_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
    "\55\4\0\0\0\0\0\0"
    "ai.inworld.studio.v1alpha.GetWorkspaceRequest"
    "name"
  }},
};

::uint8_t* GetWorkspaceRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.GetWorkspaceRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ai.inworld.studio.v1alpha.GetWorkspaceRequest.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // .ai.inworld.studio.v1alpha.WorkspaceItemView view = 2;
  if (this->_internal_view() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_view(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.GetWorkspaceRequest)
  return target;
}

::size_t GetWorkspaceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.GetWorkspaceRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // .ai.inworld.studio.v1alpha.WorkspaceItemView view = 2;
  if (this->_internal_view() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_view());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GetWorkspaceRequest::_class_data_ = {
    GetWorkspaceRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GetWorkspaceRequest::GetClassData() const {
  return &_class_data_;
}

void GetWorkspaceRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GetWorkspaceRequest*>(&to_msg);
  auto& from = static_cast<const GetWorkspaceRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.GetWorkspaceRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_view() != 0) {
    _this->_internal_set_view(from._internal_view());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetWorkspaceRequest::CopyFrom(const GetWorkspaceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.GetWorkspaceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetWorkspaceRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GetWorkspaceRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GetWorkspaceRequest::InternalSwap(GetWorkspaceRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  swap(_impl_.view_, other->_impl_.view_);
}

::google::protobuf::Metadata GetWorkspaceRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto[0]);
}
// ===================================================================

class ListWorkspacesRequest::_Internal {
 public:
};

ListWorkspacesRequest::ListWorkspacesRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.ListWorkspacesRequest)
}
inline PROTOBUF_NDEBUG_INLINE ListWorkspacesRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : page_token_(arena, from.page_token_),
        _cached_size_{0} {}

ListWorkspacesRequest::ListWorkspacesRequest(
    ::google::protobuf::Arena* arena,
    const ListWorkspacesRequest& from)
    : ::google::protobuf::Message(arena) {
  ListWorkspacesRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.page_size_ = from._impl_.page_size_;

  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.ListWorkspacesRequest)
}
inline PROTOBUF_NDEBUG_INLINE ListWorkspacesRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : page_token_(arena),
        _cached_size_{0} {}

inline void ListWorkspacesRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.page_size_ = {};
}
ListWorkspacesRequest::~ListWorkspacesRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.ListWorkspacesRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ListWorkspacesRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.page_token_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ListWorkspacesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.ListWorkspacesRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.page_token_.ClearToEmpty();
  _impl_.page_size_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ListWorkspacesRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 66, 2> ListWorkspacesRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ListWorkspacesRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string page_token = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ListWorkspacesRequest, _impl_.page_token_)}},
    // int32 page_size = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ListWorkspacesRequest, _impl_.page_size_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ListWorkspacesRequest, _impl_.page_size_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 page_size = 1;
    {PROTOBUF_FIELD_OFFSET(ListWorkspacesRequest, _impl_.page_size_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string page_token = 2;
    {PROTOBUF_FIELD_OFFSET(ListWorkspacesRequest, _impl_.page_token_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\57\0\12\0\0\0\0\0"
    "ai.inworld.studio.v1alpha.ListWorkspacesRequest"
    "page_token"
  }},
};

::uint8_t* ListWorkspacesRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.ListWorkspacesRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 page_size = 1;
  if (this->_internal_page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_page_size(), target);
  }

  // string page_token = 2;
  if (!this->_internal_page_token().empty()) {
    const std::string& _s = this->_internal_page_token();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ai.inworld.studio.v1alpha.ListWorkspacesRequest.page_token");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.ListWorkspacesRequest)
  return target;
}

::size_t ListWorkspacesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.ListWorkspacesRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string page_token = 2;
  if (!this->_internal_page_token().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_page_token());
  }

  // int32 page_size = 1;
  if (this->_internal_page_size() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_page_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ListWorkspacesRequest::_class_data_ = {
    ListWorkspacesRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ListWorkspacesRequest::GetClassData() const {
  return &_class_data_;
}

void ListWorkspacesRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ListWorkspacesRequest*>(&to_msg);
  auto& from = static_cast<const ListWorkspacesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.ListWorkspacesRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_page_token().empty()) {
    _this->_internal_set_page_token(from._internal_page_token());
  }
  if (from._internal_page_size() != 0) {
    _this->_internal_set_page_size(from._internal_page_size());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ListWorkspacesRequest::CopyFrom(const ListWorkspacesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.ListWorkspacesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ListWorkspacesRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ListWorkspacesRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ListWorkspacesRequest::InternalSwap(ListWorkspacesRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.page_token_, &other->_impl_.page_token_, arena);
        swap(_impl_.page_size_, other->_impl_.page_size_);
}

::google::protobuf::Metadata ListWorkspacesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto[1]);
}
// ===================================================================

class CreateWorkspaceRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<CreateWorkspaceRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(CreateWorkspaceRequest, _impl_._has_bits_);
  static const ::ai::inworld::studio::v1alpha::Workspace& workspace(const CreateWorkspaceRequest* msg);
  static void set_has_workspace(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::ai::inworld::studio::v1alpha::Workspace& CreateWorkspaceRequest::_Internal::workspace(const CreateWorkspaceRequest* msg) {
  return *msg->_impl_.workspace_;
}
CreateWorkspaceRequest::CreateWorkspaceRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.CreateWorkspaceRequest)
}
inline PROTOBUF_NDEBUG_INLINE CreateWorkspaceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CreateWorkspaceRequest::CreateWorkspaceRequest(
    ::google::protobuf::Arena* arena,
    const CreateWorkspaceRequest& from)
    : ::google::protobuf::Message(arena) {
  CreateWorkspaceRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.workspace_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::ai::inworld::studio::v1alpha::Workspace>(arena, *from._impl_.workspace_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.CreateWorkspaceRequest)
}
inline PROTOBUF_NDEBUG_INLINE CreateWorkspaceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CreateWorkspaceRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.workspace_ = {};
}
CreateWorkspaceRequest::~CreateWorkspaceRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.CreateWorkspaceRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CreateWorkspaceRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.workspace_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void CreateWorkspaceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.CreateWorkspaceRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.workspace_ != nullptr);
    _impl_.workspace_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CreateWorkspaceRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> CreateWorkspaceRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CreateWorkspaceRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_CreateWorkspaceRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .ai.inworld.studio.v1alpha.Workspace workspace = 1 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CreateWorkspaceRequest, _impl_.workspace_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .ai.inworld.studio.v1alpha.Workspace workspace = 1 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(CreateWorkspaceRequest, _impl_.workspace_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::ai::inworld::studio::v1alpha::Workspace>()},
  }}, {{
  }},
};

::uint8_t* CreateWorkspaceRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.CreateWorkspaceRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .ai.inworld.studio.v1alpha.Workspace workspace = 1 [(.google.api.field_behavior) = REQUIRED];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::workspace(this),
        _Internal::workspace(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.CreateWorkspaceRequest)
  return target;
}

::size_t CreateWorkspaceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.CreateWorkspaceRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ai.inworld.studio.v1alpha.Workspace workspace = 1 [(.google.api.field_behavior) = REQUIRED];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.workspace_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CreateWorkspaceRequest::_class_data_ = {
    CreateWorkspaceRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CreateWorkspaceRequest::GetClassData() const {
  return &_class_data_;
}

void CreateWorkspaceRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CreateWorkspaceRequest*>(&to_msg);
  auto& from = static_cast<const CreateWorkspaceRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.CreateWorkspaceRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_workspace()->::ai::inworld::studio::v1alpha::Workspace::MergeFrom(
        from._internal_workspace());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CreateWorkspaceRequest::CopyFrom(const CreateWorkspaceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.CreateWorkspaceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CreateWorkspaceRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* CreateWorkspaceRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CreateWorkspaceRequest::InternalSwap(CreateWorkspaceRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.workspace_, other->_impl_.workspace_);
}

::google::protobuf::Metadata CreateWorkspaceRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto[2]);
}
// ===================================================================

class UpdateWorkspaceRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<UpdateWorkspaceRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(UpdateWorkspaceRequest, _impl_._has_bits_);
  static const ::ai::inworld::studio::v1alpha::Workspace& workspace(const UpdateWorkspaceRequest* msg);
  static void set_has_workspace(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::google::protobuf::FieldMask& update_mask(const UpdateWorkspaceRequest* msg);
  static void set_has_update_mask(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::ai::inworld::studio::v1alpha::Workspace& UpdateWorkspaceRequest::_Internal::workspace(const UpdateWorkspaceRequest* msg) {
  return *msg->_impl_.workspace_;
}
const ::google::protobuf::FieldMask& UpdateWorkspaceRequest::_Internal::update_mask(const UpdateWorkspaceRequest* msg) {
  return *msg->_impl_.update_mask_;
}
void UpdateWorkspaceRequest::clear_update_mask() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.update_mask_ != nullptr) _impl_.update_mask_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
UpdateWorkspaceRequest::UpdateWorkspaceRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.UpdateWorkspaceRequest)
}
inline PROTOBUF_NDEBUG_INLINE UpdateWorkspaceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

UpdateWorkspaceRequest::UpdateWorkspaceRequest(
    ::google::protobuf::Arena* arena,
    const UpdateWorkspaceRequest& from)
    : ::google::protobuf::Message(arena) {
  UpdateWorkspaceRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.workspace_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::ai::inworld::studio::v1alpha::Workspace>(arena, *from._impl_.workspace_)
                : nullptr;
  _impl_.update_mask_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::google::protobuf::FieldMask>(arena, *from._impl_.update_mask_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.UpdateWorkspaceRequest)
}
inline PROTOBUF_NDEBUG_INLINE UpdateWorkspaceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void UpdateWorkspaceRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, workspace_),
           0,
           offsetof(Impl_, update_mask_) -
               offsetof(Impl_, workspace_) +
               sizeof(Impl_::update_mask_));
}
UpdateWorkspaceRequest::~UpdateWorkspaceRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.UpdateWorkspaceRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UpdateWorkspaceRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.workspace_;
  delete _impl_.update_mask_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void UpdateWorkspaceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.UpdateWorkspaceRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.workspace_ != nullptr);
      _impl_.workspace_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.update_mask_ != nullptr);
      _impl_.update_mask_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UpdateWorkspaceRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> UpdateWorkspaceRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UpdateWorkspaceRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_UpdateWorkspaceRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(UpdateWorkspaceRequest, _impl_.update_mask_)}},
    // .ai.inworld.studio.v1alpha.Workspace workspace = 1 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UpdateWorkspaceRequest, _impl_.workspace_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .ai.inworld.studio.v1alpha.Workspace workspace = 1 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(UpdateWorkspaceRequest, _impl_.workspace_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(UpdateWorkspaceRequest, _impl_.update_mask_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::ai::inworld::studio::v1alpha::Workspace>()},
    {::_pbi::TcParser::GetTable<::google::protobuf::FieldMask>()},
  }}, {{
  }},
};

::uint8_t* UpdateWorkspaceRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.UpdateWorkspaceRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .ai.inworld.studio.v1alpha.Workspace workspace = 1 [(.google.api.field_behavior) = REQUIRED];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::workspace(this),
        _Internal::workspace(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = REQUIRED];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::update_mask(this),
        _Internal::update_mask(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.UpdateWorkspaceRequest)
  return target;
}

::size_t UpdateWorkspaceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.UpdateWorkspaceRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .ai.inworld.studio.v1alpha.Workspace workspace = 1 [(.google.api.field_behavior) = REQUIRED];
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.workspace_);
    }

    // .google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = REQUIRED];
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.update_mask_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData UpdateWorkspaceRequest::_class_data_ = {
    UpdateWorkspaceRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* UpdateWorkspaceRequest::GetClassData() const {
  return &_class_data_;
}

void UpdateWorkspaceRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<UpdateWorkspaceRequest*>(&to_msg);
  auto& from = static_cast<const UpdateWorkspaceRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.UpdateWorkspaceRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_workspace()->::ai::inworld::studio::v1alpha::Workspace::MergeFrom(
          from._internal_workspace());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_update_mask()->::google::protobuf::FieldMask::MergeFrom(
          from._internal_update_mask());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateWorkspaceRequest::CopyFrom(const UpdateWorkspaceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.UpdateWorkspaceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UpdateWorkspaceRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* UpdateWorkspaceRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void UpdateWorkspaceRequest::InternalSwap(UpdateWorkspaceRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateWorkspaceRequest, _impl_.update_mask_)
      + sizeof(UpdateWorkspaceRequest::_impl_.update_mask_)
      - PROTOBUF_FIELD_OFFSET(UpdateWorkspaceRequest, _impl_.workspace_)>(
          reinterpret_cast<char*>(&_impl_.workspace_),
          reinterpret_cast<char*>(&other->_impl_.workspace_));
}

::google::protobuf::Metadata UpdateWorkspaceRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto[3]);
}
// ===================================================================

class DeleteWorkspaceRequest::_Internal {
 public:
};

DeleteWorkspaceRequest::DeleteWorkspaceRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.DeleteWorkspaceRequest)
}
inline PROTOBUF_NDEBUG_INLINE DeleteWorkspaceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : name_(arena, from.name_),
        _cached_size_{0} {}

DeleteWorkspaceRequest::DeleteWorkspaceRequest(
    ::google::protobuf::Arena* arena,
    const DeleteWorkspaceRequest& from)
    : ::google::protobuf::Message(arena) {
  DeleteWorkspaceRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.force_ = from._impl_.force_;

  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.DeleteWorkspaceRequest)
}
inline PROTOBUF_NDEBUG_INLINE DeleteWorkspaceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        _cached_size_{0} {}

inline void DeleteWorkspaceRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.force_ = {};
}
DeleteWorkspaceRequest::~DeleteWorkspaceRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.DeleteWorkspaceRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DeleteWorkspaceRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DeleteWorkspaceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.DeleteWorkspaceRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.force_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DeleteWorkspaceRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 61, 2> DeleteWorkspaceRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_DeleteWorkspaceRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bool force = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(DeleteWorkspaceRequest, _impl_.force_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(DeleteWorkspaceRequest, _impl_.force_)}},
    // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DeleteWorkspaceRequest, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
    {PROTOBUF_FIELD_OFFSET(DeleteWorkspaceRequest, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool force = 2;
    {PROTOBUF_FIELD_OFFSET(DeleteWorkspaceRequest, _impl_.force_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\60\4\0\0\0\0\0\0"
    "ai.inworld.studio.v1alpha.DeleteWorkspaceRequest"
    "name"
  }},
};

::uint8_t* DeleteWorkspaceRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.DeleteWorkspaceRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ai.inworld.studio.v1alpha.DeleteWorkspaceRequest.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // bool force = 2;
  if (this->_internal_force() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_force(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.DeleteWorkspaceRequest)
  return target;
}

::size_t DeleteWorkspaceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.DeleteWorkspaceRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // bool force = 2;
  if (this->_internal_force() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DeleteWorkspaceRequest::_class_data_ = {
    DeleteWorkspaceRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DeleteWorkspaceRequest::GetClassData() const {
  return &_class_data_;
}

void DeleteWorkspaceRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DeleteWorkspaceRequest*>(&to_msg);
  auto& from = static_cast<const DeleteWorkspaceRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.DeleteWorkspaceRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_force() != 0) {
    _this->_internal_set_force(from._internal_force());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteWorkspaceRequest::CopyFrom(const DeleteWorkspaceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.DeleteWorkspaceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DeleteWorkspaceRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DeleteWorkspaceRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DeleteWorkspaceRequest::InternalSwap(DeleteWorkspaceRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
        swap(_impl_.force_, other->_impl_.force_);
}

::google::protobuf::Metadata DeleteWorkspaceRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto[4]);
}
// ===================================================================

class CloneWorkspaceRequest::_Internal {
 public:
};

CloneWorkspaceRequest::CloneWorkspaceRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.CloneWorkspaceRequest)
}
inline PROTOBUF_NDEBUG_INLINE CloneWorkspaceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : name_(arena, from.name_),
        target_workspace_(arena, from.target_workspace_),
        _cached_size_{0} {}

CloneWorkspaceRequest::CloneWorkspaceRequest(
    ::google::protobuf::Arena* arena,
    const CloneWorkspaceRequest& from)
    : ::google::protobuf::Message(arena) {
  CloneWorkspaceRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.CloneWorkspaceRequest)
}
inline PROTOBUF_NDEBUG_INLINE CloneWorkspaceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        target_workspace_(arena),
        _cached_size_{0} {}

inline void CloneWorkspaceRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CloneWorkspaceRequest::~CloneWorkspaceRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.CloneWorkspaceRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CloneWorkspaceRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.target_workspace_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void CloneWorkspaceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.CloneWorkspaceRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.target_workspace_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CloneWorkspaceRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 76, 2> CloneWorkspaceRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CloneWorkspaceRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string target_workspace = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CloneWorkspaceRequest, _impl_.target_workspace_)}},
    // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CloneWorkspaceRequest, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
    {PROTOBUF_FIELD_OFFSET(CloneWorkspaceRequest, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string target_workspace = 2;
    {PROTOBUF_FIELD_OFFSET(CloneWorkspaceRequest, _impl_.target_workspace_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\57\4\20\0\0\0\0\0"
    "ai.inworld.studio.v1alpha.CloneWorkspaceRequest"
    "name"
    "target_workspace"
  }},
};

::uint8_t* CloneWorkspaceRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.CloneWorkspaceRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ai.inworld.studio.v1alpha.CloneWorkspaceRequest.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string target_workspace = 2;
  if (!this->_internal_target_workspace().empty()) {
    const std::string& _s = this->_internal_target_workspace();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ai.inworld.studio.v1alpha.CloneWorkspaceRequest.target_workspace");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.CloneWorkspaceRequest)
  return target;
}

::size_t CloneWorkspaceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.CloneWorkspaceRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // string target_workspace = 2;
  if (!this->_internal_target_workspace().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_target_workspace());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CloneWorkspaceRequest::_class_data_ = {
    CloneWorkspaceRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CloneWorkspaceRequest::GetClassData() const {
  return &_class_data_;
}

void CloneWorkspaceRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CloneWorkspaceRequest*>(&to_msg);
  auto& from = static_cast<const CloneWorkspaceRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.CloneWorkspaceRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_target_workspace().empty()) {
    _this->_internal_set_target_workspace(from._internal_target_workspace());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CloneWorkspaceRequest::CopyFrom(const CloneWorkspaceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.CloneWorkspaceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CloneWorkspaceRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* CloneWorkspaceRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CloneWorkspaceRequest::InternalSwap(CloneWorkspaceRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.target_workspace_, &other->_impl_.target_workspace_, arena);
}

::google::protobuf::Metadata CloneWorkspaceRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto[5]);
}
// ===================================================================

class ImpressionEventRequest::_Internal {
 public:
};

void ImpressionEventRequest::clear_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.data_.Clear();
}
ImpressionEventRequest::ImpressionEventRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.ImpressionEventRequest)
}
inline PROTOBUF_NDEBUG_INLINE ImpressionEventRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : data_{visibility, arena, from.data_},
        name_(arena, from.name_),
        _cached_size_{0} {}

ImpressionEventRequest::ImpressionEventRequest(
    ::google::protobuf::Arena* arena,
    const ImpressionEventRequest& from)
    : ::google::protobuf::Message(arena) {
  ImpressionEventRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.ImpressionEventRequest)
}
inline PROTOBUF_NDEBUG_INLINE ImpressionEventRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : data_{visibility, arena},
        name_(arena),
        _cached_size_{0} {}

inline void ImpressionEventRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ImpressionEventRequest::~ImpressionEventRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.ImpressionEventRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ImpressionEventRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ImpressionEventRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.ImpressionEventRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.Clear();
  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ImpressionEventRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 61, 2> ImpressionEventRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ImpressionEventRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .ai.inworld.studio.v1alpha.ImpressionEventData data = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ImpressionEventRequest, _impl_.data_)}},
    // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ImpressionEventRequest, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
    {PROTOBUF_FIELD_OFFSET(ImpressionEventRequest, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .ai.inworld.studio.v1alpha.ImpressionEventData data = 2;
    {PROTOBUF_FIELD_OFFSET(ImpressionEventRequest, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::ai::inworld::studio::v1alpha::ImpressionEventData>()},
  }}, {{
    "\60\4\0\0\0\0\0\0"
    "ai.inworld.studio.v1alpha.ImpressionEventRequest"
    "name"
  }},
};

::uint8_t* ImpressionEventRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.ImpressionEventRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ai.inworld.studio.v1alpha.ImpressionEventRequest.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated .ai.inworld.studio.v1alpha.ImpressionEventData data = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_data_size()); i < n; i++) {
    const auto& repfield = this->_internal_data().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.ImpressionEventRequest)
  return target;
}

::size_t ImpressionEventRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.ImpressionEventRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ai.inworld.studio.v1alpha.ImpressionEventData data = 2;
  total_size += 1UL * this->_internal_data_size();
  for (const auto& msg : this->_internal_data()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ImpressionEventRequest::_class_data_ = {
    ImpressionEventRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ImpressionEventRequest::GetClassData() const {
  return &_class_data_;
}

void ImpressionEventRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ImpressionEventRequest*>(&to_msg);
  auto& from = static_cast<const ImpressionEventRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.ImpressionEventRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_data()->MergeFrom(
      from._internal_data());
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ImpressionEventRequest::CopyFrom(const ImpressionEventRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.ImpressionEventRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ImpressionEventRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ImpressionEventRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ImpressionEventRequest::InternalSwap(ImpressionEventRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.data_.InternalSwap(&other->_impl_.data_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
}

::google::protobuf::Metadata ImpressionEventRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto[6]);
}
// ===================================================================

class Workspace_Meta::_Internal {
 public:
};

Workspace_Meta::Workspace_Meta(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.Workspace.Meta)
}
Workspace_Meta::Workspace_Meta(
    ::google::protobuf::Arena* arena, const Workspace_Meta& from)
    : Workspace_Meta(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Workspace_Meta::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Workspace_Meta::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, total_characters_),
           0,
           offsetof(Impl_, total_common_knowledge_) -
               offsetof(Impl_, total_characters_) +
               sizeof(Impl_::total_common_knowledge_));
}
Workspace_Meta::~Workspace_Meta() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.Workspace.Meta)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Workspace_Meta::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Workspace_Meta::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.Workspace.Meta)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.total_characters_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.total_common_knowledge_) -
      reinterpret_cast<char*>(&_impl_.total_characters_)) + sizeof(_impl_.total_common_knowledge_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Workspace_Meta::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> Workspace_Meta::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Workspace_Meta_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 total_common_knowledge = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Workspace_Meta, _impl_.total_common_knowledge_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(Workspace_Meta, _impl_.total_common_knowledge_)}},
    // int32 total_characters = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Workspace_Meta, _impl_.total_characters_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Workspace_Meta, _impl_.total_characters_)}},
    // int32 total_scenes = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Workspace_Meta, _impl_.total_scenes_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Workspace_Meta, _impl_.total_scenes_)}},
    // int32 total_triggers = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Workspace_Meta, _impl_.total_triggers_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Workspace_Meta, _impl_.total_triggers_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 total_characters = 1;
    {PROTOBUF_FIELD_OFFSET(Workspace_Meta, _impl_.total_characters_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 total_scenes = 2;
    {PROTOBUF_FIELD_OFFSET(Workspace_Meta, _impl_.total_scenes_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 total_triggers = 3;
    {PROTOBUF_FIELD_OFFSET(Workspace_Meta, _impl_.total_triggers_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 total_common_knowledge = 4;
    {PROTOBUF_FIELD_OFFSET(Workspace_Meta, _impl_.total_common_knowledge_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Workspace_Meta::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.Workspace.Meta)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 total_characters = 1;
  if (this->_internal_total_characters() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_total_characters(), target);
  }

  // int32 total_scenes = 2;
  if (this->_internal_total_scenes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_total_scenes(), target);
  }

  // int32 total_triggers = 3;
  if (this->_internal_total_triggers() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_total_triggers(), target);
  }

  // int32 total_common_knowledge = 4;
  if (this->_internal_total_common_knowledge() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_total_common_knowledge(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.Workspace.Meta)
  return target;
}

::size_t Workspace_Meta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.Workspace.Meta)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 total_characters = 1;
  if (this->_internal_total_characters() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_total_characters());
  }

  // int32 total_scenes = 2;
  if (this->_internal_total_scenes() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_total_scenes());
  }

  // int32 total_triggers = 3;
  if (this->_internal_total_triggers() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_total_triggers());
  }

  // int32 total_common_knowledge = 4;
  if (this->_internal_total_common_knowledge() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_total_common_knowledge());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Workspace_Meta::_class_data_ = {
    Workspace_Meta::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Workspace_Meta::GetClassData() const {
  return &_class_data_;
}

void Workspace_Meta::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Workspace_Meta*>(&to_msg);
  auto& from = static_cast<const Workspace_Meta&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.Workspace.Meta)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_total_characters() != 0) {
    _this->_internal_set_total_characters(from._internal_total_characters());
  }
  if (from._internal_total_scenes() != 0) {
    _this->_internal_set_total_scenes(from._internal_total_scenes());
  }
  if (from._internal_total_triggers() != 0) {
    _this->_internal_set_total_triggers(from._internal_total_triggers());
  }
  if (from._internal_total_common_knowledge() != 0) {
    _this->_internal_set_total_common_knowledge(from._internal_total_common_knowledge());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Workspace_Meta::CopyFrom(const Workspace_Meta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.Workspace.Meta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Workspace_Meta::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Workspace_Meta::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Workspace_Meta::InternalSwap(Workspace_Meta* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Workspace_Meta, _impl_.total_common_knowledge_)
      + sizeof(Workspace_Meta::_impl_.total_common_knowledge_)
      - PROTOBUF_FIELD_OFFSET(Workspace_Meta, _impl_.total_characters_)>(
          reinterpret_cast<char*>(&_impl_.total_characters_),
          reinterpret_cast<char*>(&other->_impl_.total_characters_));
}

::google::protobuf::Metadata Workspace_Meta::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto[7]);
}
// ===================================================================

class Workspace::_Internal {
 public:
  using HasBits = decltype(std::declval<Workspace>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Workspace, _impl_._has_bits_);
  static const ::ai::inworld::studio::v1alpha::Workspace_Meta& meta(const Workspace* msg);
  static void set_has_meta(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::ai::inworld::studio::v1alpha::Workspace_Meta& Workspace::_Internal::meta(const Workspace* msg) {
  return *msg->_impl_.meta_;
}
Workspace::Workspace(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.Workspace)
}
inline PROTOBUF_NDEBUG_INLINE Workspace::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        experimental_features_{visibility, arena, from.experimental_features_},
        name_(arena, from.name_),
        display_name_(arena, from.display_name_),
        billing_account_(arena, from.billing_account_) {}

Workspace::Workspace(
    ::google::protobuf::Arena* arena,
    const Workspace& from)
    : ::google::protobuf::Message(arena) {
  Workspace* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.meta_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::ai::inworld::studio::v1alpha::Workspace_Meta>(arena, *from._impl_.meta_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, runtime_access_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, runtime_access_),
           offsetof(Impl_, primary_language_) -
               offsetof(Impl_, runtime_access_) +
               sizeof(Impl_::primary_language_));

  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.Workspace)
}
inline PROTOBUF_NDEBUG_INLINE Workspace::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        experimental_features_{visibility, arena},
        name_(arena),
        display_name_(arena),
        billing_account_(arena) {}

inline void Workspace::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, meta_),
           0,
           offsetof(Impl_, primary_language_) -
               offsetof(Impl_, meta_) +
               sizeof(Impl_::primary_language_));
}
Workspace::~Workspace() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.Workspace)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Workspace::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.display_name_.Destroy();
  _impl_.billing_account_.Destroy();
  delete _impl_.meta_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Workspace::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.Workspace)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.experimental_features_.Clear();
  _impl_.name_.ClearToEmpty();
  _impl_.display_name_.ClearToEmpty();
  _impl_.billing_account_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.meta_ != nullptr);
    _impl_.meta_->Clear();
  }
  ::memset(&_impl_.runtime_access_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.primary_language_) -
      reinterpret_cast<char*>(&_impl_.runtime_access_)) + sizeof(_impl_.primary_language_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Workspace::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 1, 104, 2> Workspace::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Workspace, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Workspace_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .ai.inworld.language_codes.LanguageCode primary_language = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Workspace, _impl_.primary_language_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(Workspace, _impl_.primary_language_)}},
    // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.ai.inworld.options.examples) = {
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Workspace, _impl_.name_)}},
    // string display_name = 2 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Workspace, _impl_.display_name_)}},
    // repeated string experimental_features = 3;
    {::_pbi::TcParser::FastUR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Workspace, _impl_.experimental_features_)}},
    // string billing_account = 4 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Workspace, _impl_.billing_account_)}},
    // .ai.inworld.studio.v1alpha.Workspace.Meta meta = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];
    {::_pbi::TcParser::FastMtS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(Workspace, _impl_.meta_)}},
    // .ai.inworld.studio.v1alpha.Workspace.RuntimeAccess runtime_access = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Workspace, _impl_.runtime_access_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(Workspace, _impl_.runtime_access_)}},
    // .ai.inworld.studio.v1alpha.LanguageCode primary_language_code = 7 [deprecated = true];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Workspace, _impl_.primary_language_code_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(Workspace, _impl_.primary_language_code_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.ai.inworld.options.examples) = {
    {PROTOBUF_FIELD_OFFSET(Workspace, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string display_name = 2 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(Workspace, _impl_.display_name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string experimental_features = 3;
    {PROTOBUF_FIELD_OFFSET(Workspace, _impl_.experimental_features_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // string billing_account = 4 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
    {PROTOBUF_FIELD_OFFSET(Workspace, _impl_.billing_account_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .ai.inworld.studio.v1alpha.Workspace.Meta meta = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];
    {PROTOBUF_FIELD_OFFSET(Workspace, _impl_.meta_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .ai.inworld.studio.v1alpha.Workspace.RuntimeAccess runtime_access = 6;
    {PROTOBUF_FIELD_OFFSET(Workspace, _impl_.runtime_access_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .ai.inworld.studio.v1alpha.LanguageCode primary_language_code = 7 [deprecated = true];
    {PROTOBUF_FIELD_OFFSET(Workspace, _impl_.primary_language_code_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // .ai.inworld.language_codes.LanguageCode primary_language = 8;
    {PROTOBUF_FIELD_OFFSET(Workspace, _impl_.primary_language_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }}, {{
    {::_pbi::TcParser::GetTable<::ai::inworld::studio::v1alpha::Workspace_Meta>()},
  }}, {{
    "\43\4\14\25\17\0\0\0\0\0\0\0\0\0\0\0"
    "ai.inworld.studio.v1alpha.Workspace"
    "name"
    "display_name"
    "experimental_features"
    "billing_account"
  }},
};

::uint8_t* Workspace::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.Workspace)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.ai.inworld.options.examples) = {
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ai.inworld.studio.v1alpha.Workspace.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string display_name = 2 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_display_name().empty()) {
    const std::string& _s = this->_internal_display_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ai.inworld.studio.v1alpha.Workspace.display_name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // repeated string experimental_features = 3;
  for (int i = 0, n = this->_internal_experimental_features_size(); i < n; ++i) {
    const auto& s = this->_internal_experimental_features().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ai.inworld.studio.v1alpha.Workspace.experimental_features");
    target = stream->WriteString(3, s, target);
  }

  // string billing_account = 4 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_billing_account().empty()) {
    const std::string& _s = this->_internal_billing_account();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ai.inworld.studio.v1alpha.Workspace.billing_account");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .ai.inworld.studio.v1alpha.Workspace.Meta meta = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, _Internal::meta(this),
        _Internal::meta(this).GetCachedSize(), target, stream);
  }

  // .ai.inworld.studio.v1alpha.Workspace.RuntimeAccess runtime_access = 6;
  if (this->_internal_runtime_access() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        6, this->_internal_runtime_access(), target);
  }

  // .ai.inworld.studio.v1alpha.LanguageCode primary_language_code = 7 [deprecated = true];
  if (this->_internal_primary_language_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        7, this->_internal_primary_language_code(), target);
  }

  // .ai.inworld.language_codes.LanguageCode primary_language = 8;
  if (this->_internal_primary_language() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        8, this->_internal_primary_language(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.Workspace)
  return target;
}

::size_t Workspace::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.Workspace)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string experimental_features = 3;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_experimental_features().size());
  for (int i = 0, n = _internal_experimental_features().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_experimental_features().Get(i));
  }
  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.ai.inworld.options.examples) = {
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // string display_name = 2 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_display_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_display_name());
  }

  // string billing_account = 4 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_billing_account().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_billing_account());
  }

  // .ai.inworld.studio.v1alpha.Workspace.Meta meta = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.meta_);
  }

  // .ai.inworld.studio.v1alpha.Workspace.RuntimeAccess runtime_access = 6;
  if (this->_internal_runtime_access() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_runtime_access());
  }

  // .ai.inworld.studio.v1alpha.LanguageCode primary_language_code = 7 [deprecated = true];
  if (this->_internal_primary_language_code() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_primary_language_code());
  }

  // .ai.inworld.language_codes.LanguageCode primary_language = 8;
  if (this->_internal_primary_language() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_primary_language());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Workspace::_class_data_ = {
    Workspace::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Workspace::GetClassData() const {
  return &_class_data_;
}

void Workspace::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Workspace*>(&to_msg);
  auto& from = static_cast<const Workspace&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.Workspace)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_experimental_features()->MergeFrom(from._internal_experimental_features());
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_display_name().empty()) {
    _this->_internal_set_display_name(from._internal_display_name());
  }
  if (!from._internal_billing_account().empty()) {
    _this->_internal_set_billing_account(from._internal_billing_account());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_meta()->::ai::inworld::studio::v1alpha::Workspace_Meta::MergeFrom(
        from._internal_meta());
  }
  if (from._internal_runtime_access() != 0) {
    _this->_internal_set_runtime_access(from._internal_runtime_access());
  }
  if (from._internal_primary_language_code() != 0) {
    _this->_internal_set_primary_language_code(from._internal_primary_language_code());
  }
  if (from._internal_primary_language() != 0) {
    _this->_internal_set_primary_language(from._internal_primary_language());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Workspace::CopyFrom(const Workspace& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.Workspace)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Workspace::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Workspace::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Workspace::InternalSwap(Workspace* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.experimental_features_.InternalSwap(&other->_impl_.experimental_features_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.display_name_, &other->_impl_.display_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.billing_account_, &other->_impl_.billing_account_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Workspace, _impl_.primary_language_)
      + sizeof(Workspace::_impl_.primary_language_)
      - PROTOBUF_FIELD_OFFSET(Workspace, _impl_.meta_)>(
          reinterpret_cast<char*>(&_impl_.meta_),
          reinterpret_cast<char*>(&other->_impl_.meta_));
}

::google::protobuf::Metadata Workspace::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto[8]);
}
// ===================================================================

class ListWorkspacesResponse::_Internal {
 public:
};

ListWorkspacesResponse::ListWorkspacesResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.ListWorkspacesResponse)
}
inline PROTOBUF_NDEBUG_INLINE ListWorkspacesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : workspaces_{visibility, arena, from.workspaces_},
        next_page_token_(arena, from.next_page_token_),
        _cached_size_{0} {}

ListWorkspacesResponse::ListWorkspacesResponse(
    ::google::protobuf::Arena* arena,
    const ListWorkspacesResponse& from)
    : ::google::protobuf::Message(arena) {
  ListWorkspacesResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.ListWorkspacesResponse)
}
inline PROTOBUF_NDEBUG_INLINE ListWorkspacesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : workspaces_{visibility, arena},
        next_page_token_(arena),
        _cached_size_{0} {}

inline void ListWorkspacesResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ListWorkspacesResponse::~ListWorkspacesResponse() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.ListWorkspacesResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ListWorkspacesResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.next_page_token_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ListWorkspacesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.ListWorkspacesResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.workspaces_.Clear();
  _impl_.next_page_token_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ListWorkspacesResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 72, 2> ListWorkspacesResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ListWorkspacesResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string next_page_token = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ListWorkspacesResponse, _impl_.next_page_token_)}},
    // repeated .ai.inworld.studio.v1alpha.Workspace workspaces = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ListWorkspacesResponse, _impl_.workspaces_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .ai.inworld.studio.v1alpha.Workspace workspaces = 1;
    {PROTOBUF_FIELD_OFFSET(ListWorkspacesResponse, _impl_.workspaces_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string next_page_token = 2;
    {PROTOBUF_FIELD_OFFSET(ListWorkspacesResponse, _impl_.next_page_token_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::ai::inworld::studio::v1alpha::Workspace>()},
  }}, {{
    "\60\0\17\0\0\0\0\0"
    "ai.inworld.studio.v1alpha.ListWorkspacesResponse"
    "next_page_token"
  }},
};

::uint8_t* ListWorkspacesResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.ListWorkspacesResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .ai.inworld.studio.v1alpha.Workspace workspaces = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_workspaces_size()); i < n; i++) {
    const auto& repfield = this->_internal_workspaces().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string next_page_token = 2;
  if (!this->_internal_next_page_token().empty()) {
    const std::string& _s = this->_internal_next_page_token();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ai.inworld.studio.v1alpha.ListWorkspacesResponse.next_page_token");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.ListWorkspacesResponse)
  return target;
}

::size_t ListWorkspacesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.ListWorkspacesResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ai.inworld.studio.v1alpha.Workspace workspaces = 1;
  total_size += 1UL * this->_internal_workspaces_size();
  for (const auto& msg : this->_internal_workspaces()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string next_page_token = 2;
  if (!this->_internal_next_page_token().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_next_page_token());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ListWorkspacesResponse::_class_data_ = {
    ListWorkspacesResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ListWorkspacesResponse::GetClassData() const {
  return &_class_data_;
}

void ListWorkspacesResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ListWorkspacesResponse*>(&to_msg);
  auto& from = static_cast<const ListWorkspacesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.ListWorkspacesResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_workspaces()->MergeFrom(
      from._internal_workspaces());
  if (!from._internal_next_page_token().empty()) {
    _this->_internal_set_next_page_token(from._internal_next_page_token());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ListWorkspacesResponse::CopyFrom(const ListWorkspacesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.ListWorkspacesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ListWorkspacesResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ListWorkspacesResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ListWorkspacesResponse::InternalSwap(ListWorkspacesResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.workspaces_.InternalSwap(&other->_impl_.workspaces_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.next_page_token_, &other->_impl_.next_page_token_, arena);
}

::google::protobuf::Metadata ListWorkspacesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto[9]);
}
// ===================================================================

class ShareWorkspaceRequest::_Internal {
 public:
};

ShareWorkspaceRequest::ShareWorkspaceRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.ShareWorkspaceRequest)
}
inline PROTOBUF_NDEBUG_INLINE ShareWorkspaceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : emails_{visibility, arena, from.emails_},
        name_(arena, from.name_),
        _cached_size_{0} {}

ShareWorkspaceRequest::ShareWorkspaceRequest(
    ::google::protobuf::Arena* arena,
    const ShareWorkspaceRequest& from)
    : ::google::protobuf::Message(arena) {
  ShareWorkspaceRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.ShareWorkspaceRequest)
}
inline PROTOBUF_NDEBUG_INLINE ShareWorkspaceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : emails_{visibility, arena},
        name_(arena),
        _cached_size_{0} {}

inline void ShareWorkspaceRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ShareWorkspaceRequest::~ShareWorkspaceRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.ShareWorkspaceRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ShareWorkspaceRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void ShareWorkspaceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.ShareWorkspaceRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.emails_.Clear();
  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ShareWorkspaceRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 66, 2> ShareWorkspaceRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ShareWorkspaceRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated string emails = 2 [(.ai.inworld.options.examples) = {
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ShareWorkspaceRequest, _impl_.emails_)}},
    // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ShareWorkspaceRequest, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
    {PROTOBUF_FIELD_OFFSET(ShareWorkspaceRequest, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string emails = 2 [(.ai.inworld.options.examples) = {
    {PROTOBUF_FIELD_OFFSET(ShareWorkspaceRequest, _impl_.emails_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\57\4\6\0\0\0\0\0"
    "ai.inworld.studio.v1alpha.ShareWorkspaceRequest"
    "name"
    "emails"
  }},
};

::uint8_t* ShareWorkspaceRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.ShareWorkspaceRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ai.inworld.studio.v1alpha.ShareWorkspaceRequest.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated string emails = 2 [(.ai.inworld.options.examples) = {
  for (int i = 0, n = this->_internal_emails_size(); i < n; ++i) {
    const auto& s = this->_internal_emails().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ai.inworld.studio.v1alpha.ShareWorkspaceRequest.emails");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.ShareWorkspaceRequest)
  return target;
}

::size_t ShareWorkspaceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.ShareWorkspaceRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string emails = 2 [(.ai.inworld.options.examples) = {
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_emails().size());
  for (int i = 0, n = _internal_emails().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_emails().Get(i));
  }
  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ShareWorkspaceRequest::_class_data_ = {
    ShareWorkspaceRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ShareWorkspaceRequest::GetClassData() const {
  return &_class_data_;
}

void ShareWorkspaceRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ShareWorkspaceRequest*>(&to_msg);
  auto& from = static_cast<const ShareWorkspaceRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.ShareWorkspaceRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_emails()->MergeFrom(from._internal_emails());
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ShareWorkspaceRequest::CopyFrom(const ShareWorkspaceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.ShareWorkspaceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ShareWorkspaceRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ShareWorkspaceRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ShareWorkspaceRequest::InternalSwap(ShareWorkspaceRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.emails_.InternalSwap(&other->_impl_.emails_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
}

::google::protobuf::Metadata ShareWorkspaceRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto[10]);
}
// ===================================================================

class GenerateResourceNameRequest::_Internal {
 public:
};

GenerateResourceNameRequest::GenerateResourceNameRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.GenerateResourceNameRequest)
}
inline PROTOBUF_NDEBUG_INLINE GenerateResourceNameRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : workspace_(arena, from.workspace_),
        display_name_(arena, from.display_name_),
        _cached_size_{0} {}

GenerateResourceNameRequest::GenerateResourceNameRequest(
    ::google::protobuf::Arena* arena,
    const GenerateResourceNameRequest& from)
    : ::google::protobuf::Message(arena) {
  GenerateResourceNameRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.resource_type_ = from._impl_.resource_type_;

  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.GenerateResourceNameRequest)
}
inline PROTOBUF_NDEBUG_INLINE GenerateResourceNameRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : workspace_(arena),
        display_name_(arena),
        _cached_size_{0} {}

inline void GenerateResourceNameRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.resource_type_ = {};
}
GenerateResourceNameRequest::~GenerateResourceNameRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.GenerateResourceNameRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GenerateResourceNameRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.workspace_.Destroy();
  _impl_.display_name_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GenerateResourceNameRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.GenerateResourceNameRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.workspace_.ClearToEmpty();
  _impl_.display_name_.ClearToEmpty();
  _impl_.resource_type_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GenerateResourceNameRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 83, 2> GenerateResourceNameRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GenerateResourceNameRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string workspace = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GenerateResourceNameRequest, _impl_.workspace_)}},
    // string display_name = 2 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GenerateResourceNameRequest, _impl_.display_name_)}},
    // .ai.inworld.studio.v1alpha.GenerateResourceNameRequest.ResourceType resource_type = 3 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GenerateResourceNameRequest, _impl_.resource_type_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(GenerateResourceNameRequest, _impl_.resource_type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string workspace = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
    {PROTOBUF_FIELD_OFFSET(GenerateResourceNameRequest, _impl_.workspace_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string display_name = 2 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(GenerateResourceNameRequest, _impl_.display_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .ai.inworld.studio.v1alpha.GenerateResourceNameRequest.ResourceType resource_type = 3 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(GenerateResourceNameRequest, _impl_.resource_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
    "\65\11\14\0\0\0\0\0"
    "ai.inworld.studio.v1alpha.GenerateResourceNameRequest"
    "workspace"
    "display_name"
  }},
};

::uint8_t* GenerateResourceNameRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.GenerateResourceNameRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string workspace = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_workspace().empty()) {
    const std::string& _s = this->_internal_workspace();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ai.inworld.studio.v1alpha.GenerateResourceNameRequest.workspace");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string display_name = 2 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_display_name().empty()) {
    const std::string& _s = this->_internal_display_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ai.inworld.studio.v1alpha.GenerateResourceNameRequest.display_name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // .ai.inworld.studio.v1alpha.GenerateResourceNameRequest.ResourceType resource_type = 3 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_resource_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        3, this->_internal_resource_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.GenerateResourceNameRequest)
  return target;
}

::size_t GenerateResourceNameRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.GenerateResourceNameRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string workspace = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_workspace().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_workspace());
  }

  // string display_name = 2 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_display_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_display_name());
  }

  // .ai.inworld.studio.v1alpha.GenerateResourceNameRequest.ResourceType resource_type = 3 [(.google.api.field_behavior) = REQUIRED];
  if (this->_internal_resource_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_resource_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GenerateResourceNameRequest::_class_data_ = {
    GenerateResourceNameRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GenerateResourceNameRequest::GetClassData() const {
  return &_class_data_;
}

void GenerateResourceNameRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GenerateResourceNameRequest*>(&to_msg);
  auto& from = static_cast<const GenerateResourceNameRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.GenerateResourceNameRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_workspace().empty()) {
    _this->_internal_set_workspace(from._internal_workspace());
  }
  if (!from._internal_display_name().empty()) {
    _this->_internal_set_display_name(from._internal_display_name());
  }
  if (from._internal_resource_type() != 0) {
    _this->_internal_set_resource_type(from._internal_resource_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GenerateResourceNameRequest::CopyFrom(const GenerateResourceNameRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.GenerateResourceNameRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GenerateResourceNameRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GenerateResourceNameRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GenerateResourceNameRequest::InternalSwap(GenerateResourceNameRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.workspace_, &other->_impl_.workspace_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.display_name_, &other->_impl_.display_name_, arena);
  swap(_impl_.resource_type_, other->_impl_.resource_type_);
}

::google::protobuf::Metadata GenerateResourceNameRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto[11]);
}
// ===================================================================

class GenerateResourceNameResponse::_Internal {
 public:
};

GenerateResourceNameResponse::GenerateResourceNameResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.GenerateResourceNameResponse)
}
inline PROTOBUF_NDEBUG_INLINE GenerateResourceNameResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : resource_(arena, from.resource_),
        _cached_size_{0} {}

GenerateResourceNameResponse::GenerateResourceNameResponse(
    ::google::protobuf::Arena* arena,
    const GenerateResourceNameResponse& from)
    : ::google::protobuf::Message(arena) {
  GenerateResourceNameResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.GenerateResourceNameResponse)
}
inline PROTOBUF_NDEBUG_INLINE GenerateResourceNameResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : resource_(arena),
        _cached_size_{0} {}

inline void GenerateResourceNameResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GenerateResourceNameResponse::~GenerateResourceNameResponse() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.GenerateResourceNameResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GenerateResourceNameResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.resource_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GenerateResourceNameResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.GenerateResourceNameResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.resource_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GenerateResourceNameResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 71, 2> GenerateResourceNameResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GenerateResourceNameResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string resource = 1 [(.google.api.field_behavior) = REQUIRED];
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GenerateResourceNameResponse, _impl_.resource_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string resource = 1 [(.google.api.field_behavior) = REQUIRED];
    {PROTOBUF_FIELD_OFFSET(GenerateResourceNameResponse, _impl_.resource_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\66\10\0\0\0\0\0\0"
    "ai.inworld.studio.v1alpha.GenerateResourceNameResponse"
    "resource"
  }},
};

::uint8_t* GenerateResourceNameResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.GenerateResourceNameResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string resource = 1 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_resource().empty()) {
    const std::string& _s = this->_internal_resource();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ai.inworld.studio.v1alpha.GenerateResourceNameResponse.resource");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.GenerateResourceNameResponse)
  return target;
}

::size_t GenerateResourceNameResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.GenerateResourceNameResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string resource = 1 [(.google.api.field_behavior) = REQUIRED];
  if (!this->_internal_resource().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_resource());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GenerateResourceNameResponse::_class_data_ = {
    GenerateResourceNameResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GenerateResourceNameResponse::GetClassData() const {
  return &_class_data_;
}

void GenerateResourceNameResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GenerateResourceNameResponse*>(&to_msg);
  auto& from = static_cast<const GenerateResourceNameResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.GenerateResourceNameResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_resource().empty()) {
    _this->_internal_set_resource(from._internal_resource());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GenerateResourceNameResponse::CopyFrom(const GenerateResourceNameResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.GenerateResourceNameResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GenerateResourceNameResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GenerateResourceNameResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GenerateResourceNameResponse::InternalSwap(GenerateResourceNameResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.resource_, &other->_impl_.resource_, arena);
}

::google::protobuf::Metadata GenerateResourceNameResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto[12]);
}
// ===================================================================

class GetWorkspaceShareInfoRequest::_Internal {
 public:
};

GetWorkspaceShareInfoRequest::GetWorkspaceShareInfoRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.GetWorkspaceShareInfoRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetWorkspaceShareInfoRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : name_(arena, from.name_),
        _cached_size_{0} {}

GetWorkspaceShareInfoRequest::GetWorkspaceShareInfoRequest(
    ::google::protobuf::Arena* arena,
    const GetWorkspaceShareInfoRequest& from)
    : ::google::protobuf::Message(arena) {
  GetWorkspaceShareInfoRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.GetWorkspaceShareInfoRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetWorkspaceShareInfoRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        _cached_size_{0} {}

inline void GetWorkspaceShareInfoRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetWorkspaceShareInfoRequest::~GetWorkspaceShareInfoRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.GetWorkspaceShareInfoRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetWorkspaceShareInfoRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GetWorkspaceShareInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.GetWorkspaceShareInfoRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetWorkspaceShareInfoRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 67, 2> GetWorkspaceShareInfoRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GetWorkspaceShareInfoRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetWorkspaceShareInfoRequest, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
    {PROTOBUF_FIELD_OFFSET(GetWorkspaceShareInfoRequest, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\66\4\0\0\0\0\0\0"
    "ai.inworld.studio.v1alpha.GetWorkspaceShareInfoRequest"
    "name"
  }},
};

::uint8_t* GetWorkspaceShareInfoRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.GetWorkspaceShareInfoRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ai.inworld.studio.v1alpha.GetWorkspaceShareInfoRequest.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.GetWorkspaceShareInfoRequest)
  return target;
}

::size_t GetWorkspaceShareInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.GetWorkspaceShareInfoRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GetWorkspaceShareInfoRequest::_class_data_ = {
    GetWorkspaceShareInfoRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GetWorkspaceShareInfoRequest::GetClassData() const {
  return &_class_data_;
}

void GetWorkspaceShareInfoRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GetWorkspaceShareInfoRequest*>(&to_msg);
  auto& from = static_cast<const GetWorkspaceShareInfoRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.GetWorkspaceShareInfoRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetWorkspaceShareInfoRequest::CopyFrom(const GetWorkspaceShareInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.GetWorkspaceShareInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetWorkspaceShareInfoRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GetWorkspaceShareInfoRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GetWorkspaceShareInfoRequest::InternalSwap(GetWorkspaceShareInfoRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
}

::google::protobuf::Metadata GetWorkspaceShareInfoRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto[13]);
}
// ===================================================================

class WorkspaceShareInfo::_Internal {
 public:
};

WorkspaceShareInfo::WorkspaceShareInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.WorkspaceShareInfo)
}
inline PROTOBUF_NDEBUG_INLINE WorkspaceShareInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : emails_{visibility, arena, from.emails_},
        _cached_size_{0} {}

WorkspaceShareInfo::WorkspaceShareInfo(
    ::google::protobuf::Arena* arena,
    const WorkspaceShareInfo& from)
    : ::google::protobuf::Message(arena) {
  WorkspaceShareInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.WorkspaceShareInfo)
}
inline PROTOBUF_NDEBUG_INLINE WorkspaceShareInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : emails_{visibility, arena},
        _cached_size_{0} {}

inline void WorkspaceShareInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
WorkspaceShareInfo::~WorkspaceShareInfo() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.WorkspaceShareInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void WorkspaceShareInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void WorkspaceShareInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.WorkspaceShareInfo)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.emails_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* WorkspaceShareInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 59, 2> WorkspaceShareInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_WorkspaceShareInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated string emails = 1;
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(WorkspaceShareInfo, _impl_.emails_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string emails = 1;
    {PROTOBUF_FIELD_OFFSET(WorkspaceShareInfo, _impl_.emails_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\54\6\0\0\0\0\0\0"
    "ai.inworld.studio.v1alpha.WorkspaceShareInfo"
    "emails"
  }},
};

::uint8_t* WorkspaceShareInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.WorkspaceShareInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string emails = 1;
  for (int i = 0, n = this->_internal_emails_size(); i < n; ++i) {
    const auto& s = this->_internal_emails().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ai.inworld.studio.v1alpha.WorkspaceShareInfo.emails");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.WorkspaceShareInfo)
  return target;
}

::size_t WorkspaceShareInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.WorkspaceShareInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string emails = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_emails().size());
  for (int i = 0, n = _internal_emails().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_emails().Get(i));
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData WorkspaceShareInfo::_class_data_ = {
    WorkspaceShareInfo::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* WorkspaceShareInfo::GetClassData() const {
  return &_class_data_;
}

void WorkspaceShareInfo::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<WorkspaceShareInfo*>(&to_msg);
  auto& from = static_cast<const WorkspaceShareInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.WorkspaceShareInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_emails()->MergeFrom(from._internal_emails());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WorkspaceShareInfo::CopyFrom(const WorkspaceShareInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.WorkspaceShareInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool WorkspaceShareInfo::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* WorkspaceShareInfo::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void WorkspaceShareInfo::InternalSwap(WorkspaceShareInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.emails_.InternalSwap(&other->_impl_.emails_);
}

::google::protobuf::Metadata WorkspaceShareInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto[14]);
}
// ===================================================================

class GetWorkspaceLimitInfoRequest::_Internal {
 public:
};

GetWorkspaceLimitInfoRequest::GetWorkspaceLimitInfoRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.GetWorkspaceLimitInfoRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetWorkspaceLimitInfoRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : name_(arena, from.name_),
        _cached_size_{0} {}

GetWorkspaceLimitInfoRequest::GetWorkspaceLimitInfoRequest(
    ::google::protobuf::Arena* arena,
    const GetWorkspaceLimitInfoRequest& from)
    : ::google::protobuf::Message(arena) {
  GetWorkspaceLimitInfoRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.GetWorkspaceLimitInfoRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetWorkspaceLimitInfoRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        _cached_size_{0} {}

inline void GetWorkspaceLimitInfoRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetWorkspaceLimitInfoRequest::~GetWorkspaceLimitInfoRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.GetWorkspaceLimitInfoRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetWorkspaceLimitInfoRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GetWorkspaceLimitInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.GetWorkspaceLimitInfoRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetWorkspaceLimitInfoRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 67, 2> GetWorkspaceLimitInfoRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GetWorkspaceLimitInfoRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetWorkspaceLimitInfoRequest, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
    {PROTOBUF_FIELD_OFFSET(GetWorkspaceLimitInfoRequest, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\66\4\0\0\0\0\0\0"
    "ai.inworld.studio.v1alpha.GetWorkspaceLimitInfoRequest"
    "name"
  }},
};

::uint8_t* GetWorkspaceLimitInfoRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.GetWorkspaceLimitInfoRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ai.inworld.studio.v1alpha.GetWorkspaceLimitInfoRequest.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.GetWorkspaceLimitInfoRequest)
  return target;
}

::size_t GetWorkspaceLimitInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.GetWorkspaceLimitInfoRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GetWorkspaceLimitInfoRequest::_class_data_ = {
    GetWorkspaceLimitInfoRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* GetWorkspaceLimitInfoRequest::GetClassData() const {
  return &_class_data_;
}

void GetWorkspaceLimitInfoRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GetWorkspaceLimitInfoRequest*>(&to_msg);
  auto& from = static_cast<const GetWorkspaceLimitInfoRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.GetWorkspaceLimitInfoRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetWorkspaceLimitInfoRequest::CopyFrom(const GetWorkspaceLimitInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.GetWorkspaceLimitInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetWorkspaceLimitInfoRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GetWorkspaceLimitInfoRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GetWorkspaceLimitInfoRequest::InternalSwap(GetWorkspaceLimitInfoRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
}

::google::protobuf::Metadata GetWorkspaceLimitInfoRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto[15]);
}
// ===================================================================

class WorkspaceLimitInfo_TextListLimit::_Internal {
 public:
};

WorkspaceLimitInfo_TextListLimit::WorkspaceLimitInfo_TextListLimit(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.WorkspaceLimitInfo.TextListLimit)
}
WorkspaceLimitInfo_TextListLimit::WorkspaceLimitInfo_TextListLimit(
    ::google::protobuf::Arena* arena, const WorkspaceLimitInfo_TextListLimit& from)
    : WorkspaceLimitInfo_TextListLimit(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE WorkspaceLimitInfo_TextListLimit::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void WorkspaceLimitInfo_TextListLimit::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, item_max_length_),
           0,
           offsetof(Impl_, total_items_) -
               offsetof(Impl_, item_max_length_) +
               sizeof(Impl_::total_items_));
}
WorkspaceLimitInfo_TextListLimit::~WorkspaceLimitInfo_TextListLimit() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.WorkspaceLimitInfo.TextListLimit)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void WorkspaceLimitInfo_TextListLimit::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void WorkspaceLimitInfo_TextListLimit::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.WorkspaceLimitInfo.TextListLimit)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.item_max_length_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.total_items_) -
      reinterpret_cast<char*>(&_impl_.item_max_length_)) + sizeof(_impl_.total_items_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* WorkspaceLimitInfo_TextListLimit::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> WorkspaceLimitInfo_TextListLimit::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_WorkspaceLimitInfo_TextListLimit_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 total_items = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WorkspaceLimitInfo_TextListLimit, _impl_.total_items_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_TextListLimit, _impl_.total_items_)}},
    // int32 item_max_length = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WorkspaceLimitInfo_TextListLimit, _impl_.item_max_length_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_TextListLimit, _impl_.item_max_length_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 item_max_length = 1;
    {PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_TextListLimit, _impl_.item_max_length_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 total_items = 2;
    {PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_TextListLimit, _impl_.total_items_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* WorkspaceLimitInfo_TextListLimit::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.WorkspaceLimitInfo.TextListLimit)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 item_max_length = 1;
  if (this->_internal_item_max_length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_item_max_length(), target);
  }

  // int32 total_items = 2;
  if (this->_internal_total_items() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_total_items(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.WorkspaceLimitInfo.TextListLimit)
  return target;
}

::size_t WorkspaceLimitInfo_TextListLimit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.WorkspaceLimitInfo.TextListLimit)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 item_max_length = 1;
  if (this->_internal_item_max_length() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_item_max_length());
  }

  // int32 total_items = 2;
  if (this->_internal_total_items() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_total_items());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData WorkspaceLimitInfo_TextListLimit::_class_data_ = {
    WorkspaceLimitInfo_TextListLimit::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* WorkspaceLimitInfo_TextListLimit::GetClassData() const {
  return &_class_data_;
}

void WorkspaceLimitInfo_TextListLimit::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<WorkspaceLimitInfo_TextListLimit*>(&to_msg);
  auto& from = static_cast<const WorkspaceLimitInfo_TextListLimit&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.WorkspaceLimitInfo.TextListLimit)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_item_max_length() != 0) {
    _this->_internal_set_item_max_length(from._internal_item_max_length());
  }
  if (from._internal_total_items() != 0) {
    _this->_internal_set_total_items(from._internal_total_items());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WorkspaceLimitInfo_TextListLimit::CopyFrom(const WorkspaceLimitInfo_TextListLimit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.WorkspaceLimitInfo.TextListLimit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool WorkspaceLimitInfo_TextListLimit::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* WorkspaceLimitInfo_TextListLimit::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void WorkspaceLimitInfo_TextListLimit::InternalSwap(WorkspaceLimitInfo_TextListLimit* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_TextListLimit, _impl_.total_items_)
      + sizeof(WorkspaceLimitInfo_TextListLimit::_impl_.total_items_)
      - PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_TextListLimit, _impl_.item_max_length_)>(
          reinterpret_cast<char*>(&_impl_.item_max_length_),
          reinterpret_cast<char*>(&other->_impl_.item_max_length_));
}

::google::protobuf::Metadata WorkspaceLimitInfo_TextListLimit::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto[16]);
}
// ===================================================================

class WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit::_Internal {
 public:
  using HasBits = decltype(std::declval<WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit, _impl_._has_bits_);
  static const ::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_TextListLimit& hobby_or_interests(const WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit* msg);
  static void set_has_hobby_or_interests(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_TextListLimit& nicknames(const WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit* msg);
  static void set_has_nicknames(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_TextListLimit& personality_adjectives(const WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit* msg);
  static void set_has_personality_adjectives(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_TextListLimit& WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit::_Internal::hobby_or_interests(const WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit* msg) {
  return *msg->_impl_.hobby_or_interests_;
}
const ::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_TextListLimit& WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit::_Internal::nicknames(const WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit* msg) {
  return *msg->_impl_.nicknames_;
}
const ::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_TextListLimit& WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit::_Internal::personality_adjectives(const WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit* msg) {
  return *msg->_impl_.personality_adjectives_;
}
WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit::WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.WorkspaceLimitInfo.CharacterLimit.CharacterDescriptionLimit)
}
inline PROTOBUF_NDEBUG_INLINE WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit::WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit(
    ::google::protobuf::Arena* arena,
    const WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit& from)
    : ::google::protobuf::Message(arena) {
  WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.hobby_or_interests_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_TextListLimit>(arena, *from._impl_.hobby_or_interests_)
                : nullptr;
  _impl_.nicknames_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_TextListLimit>(arena, *from._impl_.nicknames_)
                : nullptr;
  _impl_.personality_adjectives_ = (cached_has_bits & 0x00000004u)
                ? CreateMaybeMessage<::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_TextListLimit>(arena, *from._impl_.personality_adjectives_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, core_max_length_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, core_max_length_),
           offsetof(Impl_, flaws_max_length_) -
               offsetof(Impl_, core_max_length_) +
               sizeof(Impl_::flaws_max_length_));

  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.WorkspaceLimitInfo.CharacterLimit.CharacterDescriptionLimit)
}
inline PROTOBUF_NDEBUG_INLINE WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, hobby_or_interests_),
           0,
           offsetof(Impl_, flaws_max_length_) -
               offsetof(Impl_, hobby_or_interests_) +
               sizeof(Impl_::flaws_max_length_));
}
WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit::~WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.WorkspaceLimitInfo.CharacterLimit.CharacterDescriptionLimit)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.hobby_or_interests_;
  delete _impl_.nicknames_;
  delete _impl_.personality_adjectives_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.WorkspaceLimitInfo.CharacterLimit.CharacterDescriptionLimit)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.hobby_or_interests_ != nullptr);
      _impl_.hobby_or_interests_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.nicknames_ != nullptr);
      _impl_.nicknames_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.personality_adjectives_ != nullptr);
      _impl_.personality_adjectives_->Clear();
    }
  }
  ::memset(&_impl_.core_max_length_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.flaws_max_length_) -
      reinterpret_cast<char*>(&_impl_.core_max_length_)) + sizeof(_impl_.flaws_max_length_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 3, 0, 2> WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 flaws_max_length = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit, _impl_.flaws_max_length_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit, _impl_.flaws_max_length_)}},
    // int32 core_max_length = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit, _impl_.core_max_length_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit, _impl_.core_max_length_)}},
    // int32 example_dialog_max_length = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit, _impl_.example_dialog_max_length_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit, _impl_.example_dialog_max_length_)}},
    // int32 motivation_max_length = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit, _impl_.motivation_max_length_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit, _impl_.motivation_max_length_)}},
    // int32 character_role_max_length = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit, _impl_.character_role_max_length_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit, _impl_.character_role_max_length_)}},
    // .ai.inworld.studio.v1alpha.WorkspaceLimitInfo.TextListLimit hobby_or_interests = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit, _impl_.hobby_or_interests_)}},
    // .ai.inworld.studio.v1alpha.WorkspaceLimitInfo.TextListLimit nicknames = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 1, 1, PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit, _impl_.nicknames_)}},
    // .ai.inworld.studio.v1alpha.WorkspaceLimitInfo.TextListLimit personality_adjectives = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 2, 2, PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit, _impl_.personality_adjectives_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 core_max_length = 1;
    {PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit, _impl_.core_max_length_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 example_dialog_max_length = 2;
    {PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit, _impl_.example_dialog_max_length_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 motivation_max_length = 3;
    {PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit, _impl_.motivation_max_length_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 character_role_max_length = 4;
    {PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit, _impl_.character_role_max_length_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .ai.inworld.studio.v1alpha.WorkspaceLimitInfo.TextListLimit hobby_or_interests = 5;
    {PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit, _impl_.hobby_or_interests_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .ai.inworld.studio.v1alpha.WorkspaceLimitInfo.TextListLimit nicknames = 6;
    {PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit, _impl_.nicknames_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .ai.inworld.studio.v1alpha.WorkspaceLimitInfo.TextListLimit personality_adjectives = 7;
    {PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit, _impl_.personality_adjectives_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 flaws_max_length = 8;
    {PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit, _impl_.flaws_max_length_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_TextListLimit>()},
    {::_pbi::TcParser::GetTable<::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_TextListLimit>()},
    {::_pbi::TcParser::GetTable<::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_TextListLimit>()},
  }}, {{
  }},
};

::uint8_t* WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.WorkspaceLimitInfo.CharacterLimit.CharacterDescriptionLimit)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 core_max_length = 1;
  if (this->_internal_core_max_length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_core_max_length(), target);
  }

  // int32 example_dialog_max_length = 2;
  if (this->_internal_example_dialog_max_length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_example_dialog_max_length(), target);
  }

  // int32 motivation_max_length = 3;
  if (this->_internal_motivation_max_length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_motivation_max_length(), target);
  }

  // int32 character_role_max_length = 4;
  if (this->_internal_character_role_max_length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_character_role_max_length(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .ai.inworld.studio.v1alpha.WorkspaceLimitInfo.TextListLimit hobby_or_interests = 5;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, _Internal::hobby_or_interests(this),
        _Internal::hobby_or_interests(this).GetCachedSize(), target, stream);
  }

  // .ai.inworld.studio.v1alpha.WorkspaceLimitInfo.TextListLimit nicknames = 6;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, _Internal::nicknames(this),
        _Internal::nicknames(this).GetCachedSize(), target, stream);
  }

  // .ai.inworld.studio.v1alpha.WorkspaceLimitInfo.TextListLimit personality_adjectives = 7;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        7, _Internal::personality_adjectives(this),
        _Internal::personality_adjectives(this).GetCachedSize(), target, stream);
  }

  // int32 flaws_max_length = 8;
  if (this->_internal_flaws_max_length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<8>(
            stream, this->_internal_flaws_max_length(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.WorkspaceLimitInfo.CharacterLimit.CharacterDescriptionLimit)
  return target;
}

::size_t WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.WorkspaceLimitInfo.CharacterLimit.CharacterDescriptionLimit)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // .ai.inworld.studio.v1alpha.WorkspaceLimitInfo.TextListLimit hobby_or_interests = 5;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.hobby_or_interests_);
    }

    // .ai.inworld.studio.v1alpha.WorkspaceLimitInfo.TextListLimit nicknames = 6;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.nicknames_);
    }

    // .ai.inworld.studio.v1alpha.WorkspaceLimitInfo.TextListLimit personality_adjectives = 7;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.personality_adjectives_);
    }

  }
  // int32 core_max_length = 1;
  if (this->_internal_core_max_length() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_core_max_length());
  }

  // int32 example_dialog_max_length = 2;
  if (this->_internal_example_dialog_max_length() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_example_dialog_max_length());
  }

  // int32 motivation_max_length = 3;
  if (this->_internal_motivation_max_length() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_motivation_max_length());
  }

  // int32 character_role_max_length = 4;
  if (this->_internal_character_role_max_length() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_character_role_max_length());
  }

  // int32 flaws_max_length = 8;
  if (this->_internal_flaws_max_length() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_flaws_max_length());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit::_class_data_ = {
    WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit::GetClassData() const {
  return &_class_data_;
}

void WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit*>(&to_msg);
  auto& from = static_cast<const WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.WorkspaceLimitInfo.CharacterLimit.CharacterDescriptionLimit)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_hobby_or_interests()->::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_TextListLimit::MergeFrom(
          from._internal_hobby_or_interests());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_nicknames()->::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_TextListLimit::MergeFrom(
          from._internal_nicknames());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_personality_adjectives()->::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_TextListLimit::MergeFrom(
          from._internal_personality_adjectives());
    }
  }
  if (from._internal_core_max_length() != 0) {
    _this->_internal_set_core_max_length(from._internal_core_max_length());
  }
  if (from._internal_example_dialog_max_length() != 0) {
    _this->_internal_set_example_dialog_max_length(from._internal_example_dialog_max_length());
  }
  if (from._internal_motivation_max_length() != 0) {
    _this->_internal_set_motivation_max_length(from._internal_motivation_max_length());
  }
  if (from._internal_character_role_max_length() != 0) {
    _this->_internal_set_character_role_max_length(from._internal_character_role_max_length());
  }
  if (from._internal_flaws_max_length() != 0) {
    _this->_internal_set_flaws_max_length(from._internal_flaws_max_length());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit::CopyFrom(const WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.WorkspaceLimitInfo.CharacterLimit.CharacterDescriptionLimit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit::InternalSwap(WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit, _impl_.flaws_max_length_)
      + sizeof(WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit::_impl_.flaws_max_length_)
      - PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit, _impl_.hobby_or_interests_)>(
          reinterpret_cast<char*>(&_impl_.hobby_or_interests_),
          reinterpret_cast<char*>(&other->_impl_.hobby_or_interests_));
}

::google::protobuf::Metadata WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto[17]);
}
// ===================================================================

class WorkspaceLimitInfo_CharacterLimit::_Internal {
 public:
  using HasBits = decltype(std::declval<WorkspaceLimitInfo_CharacterLimit>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_CharacterLimit, _impl_._has_bits_);
  static const ::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit& character_description(const WorkspaceLimitInfo_CharacterLimit* msg);
  static void set_has_character_description(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit& WorkspaceLimitInfo_CharacterLimit::_Internal::character_description(const WorkspaceLimitInfo_CharacterLimit* msg) {
  return *msg->_impl_.character_description_;
}
WorkspaceLimitInfo_CharacterLimit::WorkspaceLimitInfo_CharacterLimit(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.WorkspaceLimitInfo.CharacterLimit)
}
inline PROTOBUF_NDEBUG_INLINE WorkspaceLimitInfo_CharacterLimit::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

WorkspaceLimitInfo_CharacterLimit::WorkspaceLimitInfo_CharacterLimit(
    ::google::protobuf::Arena* arena,
    const WorkspaceLimitInfo_CharacterLimit& from)
    : ::google::protobuf::Message(arena) {
  WorkspaceLimitInfo_CharacterLimit* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.character_description_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit>(arena, *from._impl_.character_description_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, name_max_length_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, name_max_length_),
           offsetof(Impl_, total_common_knowledge_) -
               offsetof(Impl_, name_max_length_) +
               sizeof(Impl_::total_common_knowledge_));

  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.WorkspaceLimitInfo.CharacterLimit)
}
inline PROTOBUF_NDEBUG_INLINE WorkspaceLimitInfo_CharacterLimit::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void WorkspaceLimitInfo_CharacterLimit::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, character_description_),
           0,
           offsetof(Impl_, total_common_knowledge_) -
               offsetof(Impl_, character_description_) +
               sizeof(Impl_::total_common_knowledge_));
}
WorkspaceLimitInfo_CharacterLimit::~WorkspaceLimitInfo_CharacterLimit() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.WorkspaceLimitInfo.CharacterLimit)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void WorkspaceLimitInfo_CharacterLimit::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.character_description_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void WorkspaceLimitInfo_CharacterLimit::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.WorkspaceLimitInfo.CharacterLimit)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.character_description_ != nullptr);
    _impl_.character_description_->Clear();
  }
  ::memset(&_impl_.name_max_length_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.total_common_knowledge_) -
      reinterpret_cast<char*>(&_impl_.name_max_length_)) + sizeof(_impl_.total_common_knowledge_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* WorkspaceLimitInfo_CharacterLimit::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 0, 2> WorkspaceLimitInfo_CharacterLimit::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_CharacterLimit, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_WorkspaceLimitInfo_CharacterLimit_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .ai.inworld.studio.v1alpha.WorkspaceLimitInfo.CharacterLimit.CharacterDescriptionLimit character_description = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_CharacterLimit, _impl_.character_description_)}},
    // int32 name_max_length = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WorkspaceLimitInfo_CharacterLimit, _impl_.name_max_length_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_CharacterLimit, _impl_.name_max_length_)}},
    // int32 total_triggers = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WorkspaceLimitInfo_CharacterLimit, _impl_.total_triggers_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_CharacterLimit, _impl_.total_triggers_)}},
    // int32 total_common_knowledge = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WorkspaceLimitInfo_CharacterLimit, _impl_.total_common_knowledge_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_CharacterLimit, _impl_.total_common_knowledge_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 name_max_length = 1;
    {PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_CharacterLimit, _impl_.name_max_length_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 total_triggers = 2;
    {PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_CharacterLimit, _impl_.total_triggers_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 total_common_knowledge = 3;
    {PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_CharacterLimit, _impl_.total_common_knowledge_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .ai.inworld.studio.v1alpha.WorkspaceLimitInfo.CharacterLimit.CharacterDescriptionLimit character_description = 4;
    {PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_CharacterLimit, _impl_.character_description_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit>()},
  }}, {{
  }},
};

::uint8_t* WorkspaceLimitInfo_CharacterLimit::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.WorkspaceLimitInfo.CharacterLimit)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 name_max_length = 1;
  if (this->_internal_name_max_length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_name_max_length(), target);
  }

  // int32 total_triggers = 2;
  if (this->_internal_total_triggers() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_total_triggers(), target);
  }

  // int32 total_common_knowledge = 3;
  if (this->_internal_total_common_knowledge() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_total_common_knowledge(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .ai.inworld.studio.v1alpha.WorkspaceLimitInfo.CharacterLimit.CharacterDescriptionLimit character_description = 4;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, _Internal::character_description(this),
        _Internal::character_description(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.WorkspaceLimitInfo.CharacterLimit)
  return target;
}

::size_t WorkspaceLimitInfo_CharacterLimit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.WorkspaceLimitInfo.CharacterLimit)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ai.inworld.studio.v1alpha.WorkspaceLimitInfo.CharacterLimit.CharacterDescriptionLimit character_description = 4;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.character_description_);
  }

  // int32 name_max_length = 1;
  if (this->_internal_name_max_length() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_name_max_length());
  }

  // int32 total_triggers = 2;
  if (this->_internal_total_triggers() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_total_triggers());
  }

  // int32 total_common_knowledge = 3;
  if (this->_internal_total_common_knowledge() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_total_common_knowledge());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData WorkspaceLimitInfo_CharacterLimit::_class_data_ = {
    WorkspaceLimitInfo_CharacterLimit::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* WorkspaceLimitInfo_CharacterLimit::GetClassData() const {
  return &_class_data_;
}

void WorkspaceLimitInfo_CharacterLimit::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<WorkspaceLimitInfo_CharacterLimit*>(&to_msg);
  auto& from = static_cast<const WorkspaceLimitInfo_CharacterLimit&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.WorkspaceLimitInfo.CharacterLimit)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_character_description()->::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_CharacterLimit_CharacterDescriptionLimit::MergeFrom(
        from._internal_character_description());
  }
  if (from._internal_name_max_length() != 0) {
    _this->_internal_set_name_max_length(from._internal_name_max_length());
  }
  if (from._internal_total_triggers() != 0) {
    _this->_internal_set_total_triggers(from._internal_total_triggers());
  }
  if (from._internal_total_common_knowledge() != 0) {
    _this->_internal_set_total_common_knowledge(from._internal_total_common_knowledge());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WorkspaceLimitInfo_CharacterLimit::CopyFrom(const WorkspaceLimitInfo_CharacterLimit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.WorkspaceLimitInfo.CharacterLimit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool WorkspaceLimitInfo_CharacterLimit::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* WorkspaceLimitInfo_CharacterLimit::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void WorkspaceLimitInfo_CharacterLimit::InternalSwap(WorkspaceLimitInfo_CharacterLimit* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_CharacterLimit, _impl_.total_common_knowledge_)
      + sizeof(WorkspaceLimitInfo_CharacterLimit::_impl_.total_common_knowledge_)
      - PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_CharacterLimit, _impl_.character_description_)>(
          reinterpret_cast<char*>(&_impl_.character_description_),
          reinterpret_cast<char*>(&other->_impl_.character_description_));
}

::google::protobuf::Metadata WorkspaceLimitInfo_CharacterLimit::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto[18]);
}
// ===================================================================

class WorkspaceLimitInfo_SceneLimit::_Internal {
 public:
};

WorkspaceLimitInfo_SceneLimit::WorkspaceLimitInfo_SceneLimit(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.WorkspaceLimitInfo.SceneLimit)
}
WorkspaceLimitInfo_SceneLimit::WorkspaceLimitInfo_SceneLimit(
    ::google::protobuf::Arena* arena, const WorkspaceLimitInfo_SceneLimit& from)
    : WorkspaceLimitInfo_SceneLimit(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE WorkspaceLimitInfo_SceneLimit::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void WorkspaceLimitInfo_SceneLimit::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, description_max_length_),
           0,
           offsetof(Impl_, scene_trigger_description_max_length_) -
               offsetof(Impl_, description_max_length_) +
               sizeof(Impl_::scene_trigger_description_max_length_));
}
WorkspaceLimitInfo_SceneLimit::~WorkspaceLimitInfo_SceneLimit() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.WorkspaceLimitInfo.SceneLimit)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void WorkspaceLimitInfo_SceneLimit::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void WorkspaceLimitInfo_SceneLimit::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.WorkspaceLimitInfo.SceneLimit)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.description_max_length_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.scene_trigger_description_max_length_) -
      reinterpret_cast<char*>(&_impl_.description_max_length_)) + sizeof(_impl_.scene_trigger_description_max_length_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* WorkspaceLimitInfo_SceneLimit::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 0, 2> WorkspaceLimitInfo_SceneLimit::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_WorkspaceLimitInfo_SceneLimit_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 description_max_length = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WorkspaceLimitInfo_SceneLimit, _impl_.description_max_length_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_SceneLimit, _impl_.description_max_length_)}},
    // int32 total_characters = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WorkspaceLimitInfo_SceneLimit, _impl_.total_characters_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_SceneLimit, _impl_.total_characters_)}},
    // int32 total_triggers = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WorkspaceLimitInfo_SceneLimit, _impl_.total_triggers_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_SceneLimit, _impl_.total_triggers_)}},
    // int32 display_name_max_length = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WorkspaceLimitInfo_SceneLimit, _impl_.display_name_max_length_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_SceneLimit, _impl_.display_name_max_length_)}},
    // int32 total_common_knowledge = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WorkspaceLimitInfo_SceneLimit, _impl_.total_common_knowledge_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_SceneLimit, _impl_.total_common_knowledge_)}},
    // int32 scene_trigger_description_max_length = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WorkspaceLimitInfo_SceneLimit, _impl_.scene_trigger_description_max_length_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_SceneLimit, _impl_.scene_trigger_description_max_length_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 description_max_length = 1;
    {PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_SceneLimit, _impl_.description_max_length_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 total_characters = 2;
    {PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_SceneLimit, _impl_.total_characters_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 total_triggers = 3;
    {PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_SceneLimit, _impl_.total_triggers_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 display_name_max_length = 4;
    {PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_SceneLimit, _impl_.display_name_max_length_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 total_common_knowledge = 5;
    {PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_SceneLimit, _impl_.total_common_knowledge_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 scene_trigger_description_max_length = 6;
    {PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_SceneLimit, _impl_.scene_trigger_description_max_length_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* WorkspaceLimitInfo_SceneLimit::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.WorkspaceLimitInfo.SceneLimit)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 description_max_length = 1;
  if (this->_internal_description_max_length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_description_max_length(), target);
  }

  // int32 total_characters = 2;
  if (this->_internal_total_characters() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_total_characters(), target);
  }

  // int32 total_triggers = 3;
  if (this->_internal_total_triggers() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_total_triggers(), target);
  }

  // int32 display_name_max_length = 4;
  if (this->_internal_display_name_max_length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_display_name_max_length(), target);
  }

  // int32 total_common_knowledge = 5;
  if (this->_internal_total_common_knowledge() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<5>(
            stream, this->_internal_total_common_knowledge(), target);
  }

  // int32 scene_trigger_description_max_length = 6;
  if (this->_internal_scene_trigger_description_max_length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<6>(
            stream, this->_internal_scene_trigger_description_max_length(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.WorkspaceLimitInfo.SceneLimit)
  return target;
}

::size_t WorkspaceLimitInfo_SceneLimit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.WorkspaceLimitInfo.SceneLimit)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 description_max_length = 1;
  if (this->_internal_description_max_length() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_description_max_length());
  }

  // int32 total_characters = 2;
  if (this->_internal_total_characters() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_total_characters());
  }

  // int32 total_triggers = 3;
  if (this->_internal_total_triggers() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_total_triggers());
  }

  // int32 display_name_max_length = 4;
  if (this->_internal_display_name_max_length() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_display_name_max_length());
  }

  // int32 total_common_knowledge = 5;
  if (this->_internal_total_common_knowledge() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_total_common_knowledge());
  }

  // int32 scene_trigger_description_max_length = 6;
  if (this->_internal_scene_trigger_description_max_length() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_scene_trigger_description_max_length());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData WorkspaceLimitInfo_SceneLimit::_class_data_ = {
    WorkspaceLimitInfo_SceneLimit::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* WorkspaceLimitInfo_SceneLimit::GetClassData() const {
  return &_class_data_;
}

void WorkspaceLimitInfo_SceneLimit::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<WorkspaceLimitInfo_SceneLimit*>(&to_msg);
  auto& from = static_cast<const WorkspaceLimitInfo_SceneLimit&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.WorkspaceLimitInfo.SceneLimit)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_description_max_length() != 0) {
    _this->_internal_set_description_max_length(from._internal_description_max_length());
  }
  if (from._internal_total_characters() != 0) {
    _this->_internal_set_total_characters(from._internal_total_characters());
  }
  if (from._internal_total_triggers() != 0) {
    _this->_internal_set_total_triggers(from._internal_total_triggers());
  }
  if (from._internal_display_name_max_length() != 0) {
    _this->_internal_set_display_name_max_length(from._internal_display_name_max_length());
  }
  if (from._internal_total_common_knowledge() != 0) {
    _this->_internal_set_total_common_knowledge(from._internal_total_common_knowledge());
  }
  if (from._internal_scene_trigger_description_max_length() != 0) {
    _this->_internal_set_scene_trigger_description_max_length(from._internal_scene_trigger_description_max_length());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WorkspaceLimitInfo_SceneLimit::CopyFrom(const WorkspaceLimitInfo_SceneLimit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.WorkspaceLimitInfo.SceneLimit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool WorkspaceLimitInfo_SceneLimit::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* WorkspaceLimitInfo_SceneLimit::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void WorkspaceLimitInfo_SceneLimit::InternalSwap(WorkspaceLimitInfo_SceneLimit* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_SceneLimit, _impl_.scene_trigger_description_max_length_)
      + sizeof(WorkspaceLimitInfo_SceneLimit::_impl_.scene_trigger_description_max_length_)
      - PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_SceneLimit, _impl_.description_max_length_)>(
          reinterpret_cast<char*>(&_impl_.description_max_length_),
          reinterpret_cast<char*>(&other->_impl_.description_max_length_));
}

::google::protobuf::Metadata WorkspaceLimitInfo_SceneLimit::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto[19]);
}
// ===================================================================

class WorkspaceLimitInfo_WorkspaceLimit::_Internal {
 public:
};

WorkspaceLimitInfo_WorkspaceLimit::WorkspaceLimitInfo_WorkspaceLimit(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.WorkspaceLimitInfo.WorkspaceLimit)
}
WorkspaceLimitInfo_WorkspaceLimit::WorkspaceLimitInfo_WorkspaceLimit(
    ::google::protobuf::Arena* arena, const WorkspaceLimitInfo_WorkspaceLimit& from)
    : WorkspaceLimitInfo_WorkspaceLimit(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE WorkspaceLimitInfo_WorkspaceLimit::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void WorkspaceLimitInfo_WorkspaceLimit::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, display_name_max_length_),
           0,
           offsetof(Impl_, total_common_knowledge_) -
               offsetof(Impl_, display_name_max_length_) +
               sizeof(Impl_::total_common_knowledge_));
}
WorkspaceLimitInfo_WorkspaceLimit::~WorkspaceLimitInfo_WorkspaceLimit() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.WorkspaceLimitInfo.WorkspaceLimit)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void WorkspaceLimitInfo_WorkspaceLimit::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void WorkspaceLimitInfo_WorkspaceLimit::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.WorkspaceLimitInfo.WorkspaceLimit)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.display_name_max_length_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.total_common_knowledge_) -
      reinterpret_cast<char*>(&_impl_.display_name_max_length_)) + sizeof(_impl_.total_common_knowledge_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* WorkspaceLimitInfo_WorkspaceLimit::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 0, 2> WorkspaceLimitInfo_WorkspaceLimit::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_WorkspaceLimitInfo_WorkspaceLimit_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 display_name_max_length = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WorkspaceLimitInfo_WorkspaceLimit, _impl_.display_name_max_length_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_WorkspaceLimit, _impl_.display_name_max_length_)}},
    // int32 total_characters = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WorkspaceLimitInfo_WorkspaceLimit, _impl_.total_characters_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_WorkspaceLimit, _impl_.total_characters_)}},
    // int32 total_scenes = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WorkspaceLimitInfo_WorkspaceLimit, _impl_.total_scenes_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_WorkspaceLimit, _impl_.total_scenes_)}},
    // int32 total_triggers = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WorkspaceLimitInfo_WorkspaceLimit, _impl_.total_triggers_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_WorkspaceLimit, _impl_.total_triggers_)}},
    // int32 total_voices = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WorkspaceLimitInfo_WorkspaceLimit, _impl_.total_voices_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_WorkspaceLimit, _impl_.total_voices_)}},
    // int32 total_common_knowledge = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WorkspaceLimitInfo_WorkspaceLimit, _impl_.total_common_knowledge_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_WorkspaceLimit, _impl_.total_common_knowledge_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 display_name_max_length = 1;
    {PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_WorkspaceLimit, _impl_.display_name_max_length_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 total_characters = 2;
    {PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_WorkspaceLimit, _impl_.total_characters_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 total_scenes = 3;
    {PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_WorkspaceLimit, _impl_.total_scenes_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 total_triggers = 4;
    {PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_WorkspaceLimit, _impl_.total_triggers_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 total_voices = 5;
    {PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_WorkspaceLimit, _impl_.total_voices_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 total_common_knowledge = 6;
    {PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_WorkspaceLimit, _impl_.total_common_knowledge_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* WorkspaceLimitInfo_WorkspaceLimit::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.WorkspaceLimitInfo.WorkspaceLimit)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 display_name_max_length = 1;
  if (this->_internal_display_name_max_length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_display_name_max_length(), target);
  }

  // int32 total_characters = 2;
  if (this->_internal_total_characters() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_total_characters(), target);
  }

  // int32 total_scenes = 3;
  if (this->_internal_total_scenes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_total_scenes(), target);
  }

  // int32 total_triggers = 4;
  if (this->_internal_total_triggers() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_total_triggers(), target);
  }

  // int32 total_voices = 5;
  if (this->_internal_total_voices() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<5>(
            stream, this->_internal_total_voices(), target);
  }

  // int32 total_common_knowledge = 6;
  if (this->_internal_total_common_knowledge() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<6>(
            stream, this->_internal_total_common_knowledge(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.WorkspaceLimitInfo.WorkspaceLimit)
  return target;
}

::size_t WorkspaceLimitInfo_WorkspaceLimit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.WorkspaceLimitInfo.WorkspaceLimit)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 display_name_max_length = 1;
  if (this->_internal_display_name_max_length() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_display_name_max_length());
  }

  // int32 total_characters = 2;
  if (this->_internal_total_characters() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_total_characters());
  }

  // int32 total_scenes = 3;
  if (this->_internal_total_scenes() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_total_scenes());
  }

  // int32 total_triggers = 4;
  if (this->_internal_total_triggers() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_total_triggers());
  }

  // int32 total_voices = 5;
  if (this->_internal_total_voices() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_total_voices());
  }

  // int32 total_common_knowledge = 6;
  if (this->_internal_total_common_knowledge() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_total_common_knowledge());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData WorkspaceLimitInfo_WorkspaceLimit::_class_data_ = {
    WorkspaceLimitInfo_WorkspaceLimit::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* WorkspaceLimitInfo_WorkspaceLimit::GetClassData() const {
  return &_class_data_;
}

void WorkspaceLimitInfo_WorkspaceLimit::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<WorkspaceLimitInfo_WorkspaceLimit*>(&to_msg);
  auto& from = static_cast<const WorkspaceLimitInfo_WorkspaceLimit&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.WorkspaceLimitInfo.WorkspaceLimit)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_display_name_max_length() != 0) {
    _this->_internal_set_display_name_max_length(from._internal_display_name_max_length());
  }
  if (from._internal_total_characters() != 0) {
    _this->_internal_set_total_characters(from._internal_total_characters());
  }
  if (from._internal_total_scenes() != 0) {
    _this->_internal_set_total_scenes(from._internal_total_scenes());
  }
  if (from._internal_total_triggers() != 0) {
    _this->_internal_set_total_triggers(from._internal_total_triggers());
  }
  if (from._internal_total_voices() != 0) {
    _this->_internal_set_total_voices(from._internal_total_voices());
  }
  if (from._internal_total_common_knowledge() != 0) {
    _this->_internal_set_total_common_knowledge(from._internal_total_common_knowledge());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WorkspaceLimitInfo_WorkspaceLimit::CopyFrom(const WorkspaceLimitInfo_WorkspaceLimit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.WorkspaceLimitInfo.WorkspaceLimit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool WorkspaceLimitInfo_WorkspaceLimit::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* WorkspaceLimitInfo_WorkspaceLimit::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void WorkspaceLimitInfo_WorkspaceLimit::InternalSwap(WorkspaceLimitInfo_WorkspaceLimit* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_WorkspaceLimit, _impl_.total_common_knowledge_)
      + sizeof(WorkspaceLimitInfo_WorkspaceLimit::_impl_.total_common_knowledge_)
      - PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_WorkspaceLimit, _impl_.display_name_max_length_)>(
          reinterpret_cast<char*>(&_impl_.display_name_max_length_),
          reinterpret_cast<char*>(&other->_impl_.display_name_max_length_));
}

::google::protobuf::Metadata WorkspaceLimitInfo_WorkspaceLimit::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto[20]);
}
// ===================================================================

class WorkspaceLimitInfo_BillingAccountLimit::_Internal {
 public:
};

WorkspaceLimitInfo_BillingAccountLimit::WorkspaceLimitInfo_BillingAccountLimit(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.WorkspaceLimitInfo.BillingAccountLimit)
}
WorkspaceLimitInfo_BillingAccountLimit::WorkspaceLimitInfo_BillingAccountLimit(
    ::google::protobuf::Arena* arena, const WorkspaceLimitInfo_BillingAccountLimit& from)
    : WorkspaceLimitInfo_BillingAccountLimit(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE WorkspaceLimitInfo_BillingAccountLimit::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void WorkspaceLimitInfo_BillingAccountLimit::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.total_workspaces_ = {};
}
WorkspaceLimitInfo_BillingAccountLimit::~WorkspaceLimitInfo_BillingAccountLimit() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.WorkspaceLimitInfo.BillingAccountLimit)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void WorkspaceLimitInfo_BillingAccountLimit::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void WorkspaceLimitInfo_BillingAccountLimit::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.WorkspaceLimitInfo.BillingAccountLimit)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.total_workspaces_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* WorkspaceLimitInfo_BillingAccountLimit::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> WorkspaceLimitInfo_BillingAccountLimit::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_WorkspaceLimitInfo_BillingAccountLimit_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 total_workspaces = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WorkspaceLimitInfo_BillingAccountLimit, _impl_.total_workspaces_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_BillingAccountLimit, _impl_.total_workspaces_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 total_workspaces = 1;
    {PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_BillingAccountLimit, _impl_.total_workspaces_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* WorkspaceLimitInfo_BillingAccountLimit::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.WorkspaceLimitInfo.BillingAccountLimit)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 total_workspaces = 1;
  if (this->_internal_total_workspaces() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_total_workspaces(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.WorkspaceLimitInfo.BillingAccountLimit)
  return target;
}

::size_t WorkspaceLimitInfo_BillingAccountLimit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.WorkspaceLimitInfo.BillingAccountLimit)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 total_workspaces = 1;
  if (this->_internal_total_workspaces() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_total_workspaces());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData WorkspaceLimitInfo_BillingAccountLimit::_class_data_ = {
    WorkspaceLimitInfo_BillingAccountLimit::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* WorkspaceLimitInfo_BillingAccountLimit::GetClassData() const {
  return &_class_data_;
}

void WorkspaceLimitInfo_BillingAccountLimit::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<WorkspaceLimitInfo_BillingAccountLimit*>(&to_msg);
  auto& from = static_cast<const WorkspaceLimitInfo_BillingAccountLimit&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.WorkspaceLimitInfo.BillingAccountLimit)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_total_workspaces() != 0) {
    _this->_internal_set_total_workspaces(from._internal_total_workspaces());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WorkspaceLimitInfo_BillingAccountLimit::CopyFrom(const WorkspaceLimitInfo_BillingAccountLimit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.WorkspaceLimitInfo.BillingAccountLimit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool WorkspaceLimitInfo_BillingAccountLimit::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* WorkspaceLimitInfo_BillingAccountLimit::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void WorkspaceLimitInfo_BillingAccountLimit::InternalSwap(WorkspaceLimitInfo_BillingAccountLimit* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.total_workspaces_, other->_impl_.total_workspaces_);
}

::google::protobuf::Metadata WorkspaceLimitInfo_BillingAccountLimit::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto[21]);
}
// ===================================================================

class WorkspaceLimitInfo_CommonKnowledgeLimit::_Internal {
 public:
  using HasBits = decltype(std::declval<WorkspaceLimitInfo_CommonKnowledgeLimit>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_CommonKnowledgeLimit, _impl_._has_bits_);
  static const ::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_TextListLimit& memory_records(const WorkspaceLimitInfo_CommonKnowledgeLimit* msg);
  static void set_has_memory_records(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_TextListLimit& WorkspaceLimitInfo_CommonKnowledgeLimit::_Internal::memory_records(const WorkspaceLimitInfo_CommonKnowledgeLimit* msg) {
  return *msg->_impl_.memory_records_;
}
WorkspaceLimitInfo_CommonKnowledgeLimit::WorkspaceLimitInfo_CommonKnowledgeLimit(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.WorkspaceLimitInfo.CommonKnowledgeLimit)
}
inline PROTOBUF_NDEBUG_INLINE WorkspaceLimitInfo_CommonKnowledgeLimit::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

WorkspaceLimitInfo_CommonKnowledgeLimit::WorkspaceLimitInfo_CommonKnowledgeLimit(
    ::google::protobuf::Arena* arena,
    const WorkspaceLimitInfo_CommonKnowledgeLimit& from)
    : ::google::protobuf::Message(arena) {
  WorkspaceLimitInfo_CommonKnowledgeLimit* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.memory_records_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_TextListLimit>(arena, *from._impl_.memory_records_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, display_name_max_length_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, display_name_max_length_),
           offsetof(Impl_, description_max_length_) -
               offsetof(Impl_, display_name_max_length_) +
               sizeof(Impl_::description_max_length_));

  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.WorkspaceLimitInfo.CommonKnowledgeLimit)
}
inline PROTOBUF_NDEBUG_INLINE WorkspaceLimitInfo_CommonKnowledgeLimit::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void WorkspaceLimitInfo_CommonKnowledgeLimit::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, memory_records_),
           0,
           offsetof(Impl_, description_max_length_) -
               offsetof(Impl_, memory_records_) +
               sizeof(Impl_::description_max_length_));
}
WorkspaceLimitInfo_CommonKnowledgeLimit::~WorkspaceLimitInfo_CommonKnowledgeLimit() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.WorkspaceLimitInfo.CommonKnowledgeLimit)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void WorkspaceLimitInfo_CommonKnowledgeLimit::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.memory_records_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void WorkspaceLimitInfo_CommonKnowledgeLimit::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.WorkspaceLimitInfo.CommonKnowledgeLimit)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.memory_records_ != nullptr);
    _impl_.memory_records_->Clear();
  }
  ::memset(&_impl_.display_name_max_length_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.description_max_length_) -
      reinterpret_cast<char*>(&_impl_.display_name_max_length_)) + sizeof(_impl_.description_max_length_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* WorkspaceLimitInfo_CommonKnowledgeLimit::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2> WorkspaceLimitInfo_CommonKnowledgeLimit::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_CommonKnowledgeLimit, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_WorkspaceLimitInfo_CommonKnowledgeLimit_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 display_name_max_length = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WorkspaceLimitInfo_CommonKnowledgeLimit, _impl_.display_name_max_length_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_CommonKnowledgeLimit, _impl_.display_name_max_length_)}},
    // int32 description_max_length = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WorkspaceLimitInfo_CommonKnowledgeLimit, _impl_.description_max_length_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_CommonKnowledgeLimit, _impl_.description_max_length_)}},
    // .ai.inworld.studio.v1alpha.WorkspaceLimitInfo.TextListLimit memory_records = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_CommonKnowledgeLimit, _impl_.memory_records_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 display_name_max_length = 1;
    {PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_CommonKnowledgeLimit, _impl_.display_name_max_length_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 description_max_length = 2;
    {PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_CommonKnowledgeLimit, _impl_.description_max_length_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .ai.inworld.studio.v1alpha.WorkspaceLimitInfo.TextListLimit memory_records = 3;
    {PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_CommonKnowledgeLimit, _impl_.memory_records_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_TextListLimit>()},
  }}, {{
  }},
};

::uint8_t* WorkspaceLimitInfo_CommonKnowledgeLimit::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.WorkspaceLimitInfo.CommonKnowledgeLimit)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 display_name_max_length = 1;
  if (this->_internal_display_name_max_length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_display_name_max_length(), target);
  }

  // int32 description_max_length = 2;
  if (this->_internal_description_max_length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_description_max_length(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .ai.inworld.studio.v1alpha.WorkspaceLimitInfo.TextListLimit memory_records = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::memory_records(this),
        _Internal::memory_records(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.WorkspaceLimitInfo.CommonKnowledgeLimit)
  return target;
}

::size_t WorkspaceLimitInfo_CommonKnowledgeLimit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.WorkspaceLimitInfo.CommonKnowledgeLimit)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ai.inworld.studio.v1alpha.WorkspaceLimitInfo.TextListLimit memory_records = 3;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.memory_records_);
  }

  // int32 display_name_max_length = 1;
  if (this->_internal_display_name_max_length() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_display_name_max_length());
  }

  // int32 description_max_length = 2;
  if (this->_internal_description_max_length() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_description_max_length());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData WorkspaceLimitInfo_CommonKnowledgeLimit::_class_data_ = {
    WorkspaceLimitInfo_CommonKnowledgeLimit::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* WorkspaceLimitInfo_CommonKnowledgeLimit::GetClassData() const {
  return &_class_data_;
}

void WorkspaceLimitInfo_CommonKnowledgeLimit::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<WorkspaceLimitInfo_CommonKnowledgeLimit*>(&to_msg);
  auto& from = static_cast<const WorkspaceLimitInfo_CommonKnowledgeLimit&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.WorkspaceLimitInfo.CommonKnowledgeLimit)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_memory_records()->::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_TextListLimit::MergeFrom(
        from._internal_memory_records());
  }
  if (from._internal_display_name_max_length() != 0) {
    _this->_internal_set_display_name_max_length(from._internal_display_name_max_length());
  }
  if (from._internal_description_max_length() != 0) {
    _this->_internal_set_description_max_length(from._internal_description_max_length());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WorkspaceLimitInfo_CommonKnowledgeLimit::CopyFrom(const WorkspaceLimitInfo_CommonKnowledgeLimit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.WorkspaceLimitInfo.CommonKnowledgeLimit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool WorkspaceLimitInfo_CommonKnowledgeLimit::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* WorkspaceLimitInfo_CommonKnowledgeLimit::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void WorkspaceLimitInfo_CommonKnowledgeLimit::InternalSwap(WorkspaceLimitInfo_CommonKnowledgeLimit* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_CommonKnowledgeLimit, _impl_.description_max_length_)
      + sizeof(WorkspaceLimitInfo_CommonKnowledgeLimit::_impl_.description_max_length_)
      - PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo_CommonKnowledgeLimit, _impl_.memory_records_)>(
          reinterpret_cast<char*>(&_impl_.memory_records_),
          reinterpret_cast<char*>(&other->_impl_.memory_records_));
}

::google::protobuf::Metadata WorkspaceLimitInfo_CommonKnowledgeLimit::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto[22]);
}
// ===================================================================

class WorkspaceLimitInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<WorkspaceLimitInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo, _impl_._has_bits_);
  static const ::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_CharacterLimit& character(const WorkspaceLimitInfo* msg);
  static void set_has_character(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_SceneLimit& scene(const WorkspaceLimitInfo* msg);
  static void set_has_scene(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_WorkspaceLimit& workspace(const WorkspaceLimitInfo* msg);
  static void set_has_workspace(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_BillingAccountLimit& billing_account(const WorkspaceLimitInfo* msg);
  static void set_has_billing_account(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_CommonKnowledgeLimit& common_knowledge(const WorkspaceLimitInfo* msg);
  static void set_has_common_knowledge(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
};

const ::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_CharacterLimit& WorkspaceLimitInfo::_Internal::character(const WorkspaceLimitInfo* msg) {
  return *msg->_impl_.character_;
}
const ::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_SceneLimit& WorkspaceLimitInfo::_Internal::scene(const WorkspaceLimitInfo* msg) {
  return *msg->_impl_.scene_;
}
const ::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_WorkspaceLimit& WorkspaceLimitInfo::_Internal::workspace(const WorkspaceLimitInfo* msg) {
  return *msg->_impl_.workspace_;
}
const ::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_BillingAccountLimit& WorkspaceLimitInfo::_Internal::billing_account(const WorkspaceLimitInfo* msg) {
  return *msg->_impl_.billing_account_;
}
const ::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_CommonKnowledgeLimit& WorkspaceLimitInfo::_Internal::common_knowledge(const WorkspaceLimitInfo* msg) {
  return *msg->_impl_.common_knowledge_;
}
WorkspaceLimitInfo::WorkspaceLimitInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.studio.v1alpha.WorkspaceLimitInfo)
}
inline PROTOBUF_NDEBUG_INLINE WorkspaceLimitInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

WorkspaceLimitInfo::WorkspaceLimitInfo(
    ::google::protobuf::Arena* arena,
    const WorkspaceLimitInfo& from)
    : ::google::protobuf::Message(arena) {
  WorkspaceLimitInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.character_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_CharacterLimit>(arena, *from._impl_.character_)
                : nullptr;
  _impl_.scene_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_SceneLimit>(arena, *from._impl_.scene_)
                : nullptr;
  _impl_.workspace_ = (cached_has_bits & 0x00000004u)
                ? CreateMaybeMessage<::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_WorkspaceLimit>(arena, *from._impl_.workspace_)
                : nullptr;
  _impl_.billing_account_ = (cached_has_bits & 0x00000008u)
                ? CreateMaybeMessage<::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_BillingAccountLimit>(arena, *from._impl_.billing_account_)
                : nullptr;
  _impl_.common_knowledge_ = (cached_has_bits & 0x00000010u)
                ? CreateMaybeMessage<::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_CommonKnowledgeLimit>(arena, *from._impl_.common_knowledge_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:ai.inworld.studio.v1alpha.WorkspaceLimitInfo)
}
inline PROTOBUF_NDEBUG_INLINE WorkspaceLimitInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void WorkspaceLimitInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, character_),
           0,
           offsetof(Impl_, common_knowledge_) -
               offsetof(Impl_, character_) +
               sizeof(Impl_::common_knowledge_));
}
WorkspaceLimitInfo::~WorkspaceLimitInfo() {
  // @@protoc_insertion_point(destructor:ai.inworld.studio.v1alpha.WorkspaceLimitInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void WorkspaceLimitInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.character_;
  delete _impl_.scene_;
  delete _impl_.workspace_;
  delete _impl_.billing_account_;
  delete _impl_.common_knowledge_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void WorkspaceLimitInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.studio.v1alpha.WorkspaceLimitInfo)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.character_ != nullptr);
      _impl_.character_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.scene_ != nullptr);
      _impl_.scene_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.workspace_ != nullptr);
      _impl_.workspace_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.billing_account_ != nullptr);
      _impl_.billing_account_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.common_knowledge_ != nullptr);
      _impl_.common_knowledge_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* WorkspaceLimitInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 5, 0, 2> WorkspaceLimitInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_WorkspaceLimitInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .ai.inworld.studio.v1alpha.WorkspaceLimitInfo.CharacterLimit character = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo, _impl_.character_)}},
    // .ai.inworld.studio.v1alpha.WorkspaceLimitInfo.SceneLimit scene = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo, _impl_.scene_)}},
    // .ai.inworld.studio.v1alpha.WorkspaceLimitInfo.WorkspaceLimit workspace = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo, _impl_.workspace_)}},
    // .ai.inworld.studio.v1alpha.WorkspaceLimitInfo.BillingAccountLimit billing_account = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 3, 3, PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo, _impl_.billing_account_)}},
    // .ai.inworld.studio.v1alpha.WorkspaceLimitInfo.CommonKnowledgeLimit common_knowledge = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 4, 4, PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo, _impl_.common_knowledge_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .ai.inworld.studio.v1alpha.WorkspaceLimitInfo.CharacterLimit character = 1;
    {PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo, _impl_.character_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .ai.inworld.studio.v1alpha.WorkspaceLimitInfo.SceneLimit scene = 2;
    {PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo, _impl_.scene_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .ai.inworld.studio.v1alpha.WorkspaceLimitInfo.WorkspaceLimit workspace = 3;
    {PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo, _impl_.workspace_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .ai.inworld.studio.v1alpha.WorkspaceLimitInfo.BillingAccountLimit billing_account = 4;
    {PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo, _impl_.billing_account_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .ai.inworld.studio.v1alpha.WorkspaceLimitInfo.CommonKnowledgeLimit common_knowledge = 5;
    {PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo, _impl_.common_knowledge_), _Internal::kHasBitsOffset + 4, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_CharacterLimit>()},
    {::_pbi::TcParser::GetTable<::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_SceneLimit>()},
    {::_pbi::TcParser::GetTable<::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_WorkspaceLimit>()},
    {::_pbi::TcParser::GetTable<::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_BillingAccountLimit>()},
    {::_pbi::TcParser::GetTable<::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_CommonKnowledgeLimit>()},
  }}, {{
  }},
};

::uint8_t* WorkspaceLimitInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.studio.v1alpha.WorkspaceLimitInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .ai.inworld.studio.v1alpha.WorkspaceLimitInfo.CharacterLimit character = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::character(this),
        _Internal::character(this).GetCachedSize(), target, stream);
  }

  // .ai.inworld.studio.v1alpha.WorkspaceLimitInfo.SceneLimit scene = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::scene(this),
        _Internal::scene(this).GetCachedSize(), target, stream);
  }

  // .ai.inworld.studio.v1alpha.WorkspaceLimitInfo.WorkspaceLimit workspace = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::workspace(this),
        _Internal::workspace(this).GetCachedSize(), target, stream);
  }

  // .ai.inworld.studio.v1alpha.WorkspaceLimitInfo.BillingAccountLimit billing_account = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, _Internal::billing_account(this),
        _Internal::billing_account(this).GetCachedSize(), target, stream);
  }

  // .ai.inworld.studio.v1alpha.WorkspaceLimitInfo.CommonKnowledgeLimit common_knowledge = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, _Internal::common_knowledge(this),
        _Internal::common_knowledge(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.studio.v1alpha.WorkspaceLimitInfo)
  return target;
}

::size_t WorkspaceLimitInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.studio.v1alpha.WorkspaceLimitInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // .ai.inworld.studio.v1alpha.WorkspaceLimitInfo.CharacterLimit character = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.character_);
    }

    // .ai.inworld.studio.v1alpha.WorkspaceLimitInfo.SceneLimit scene = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.scene_);
    }

    // .ai.inworld.studio.v1alpha.WorkspaceLimitInfo.WorkspaceLimit workspace = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.workspace_);
    }

    // .ai.inworld.studio.v1alpha.WorkspaceLimitInfo.BillingAccountLimit billing_account = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.billing_account_);
    }

    // .ai.inworld.studio.v1alpha.WorkspaceLimitInfo.CommonKnowledgeLimit common_knowledge = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.common_knowledge_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData WorkspaceLimitInfo::_class_data_ = {
    WorkspaceLimitInfo::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* WorkspaceLimitInfo::GetClassData() const {
  return &_class_data_;
}

void WorkspaceLimitInfo::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<WorkspaceLimitInfo*>(&to_msg);
  auto& from = static_cast<const WorkspaceLimitInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.studio.v1alpha.WorkspaceLimitInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_character()->::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_CharacterLimit::MergeFrom(
          from._internal_character());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_scene()->::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_SceneLimit::MergeFrom(
          from._internal_scene());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_workspace()->::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_WorkspaceLimit::MergeFrom(
          from._internal_workspace());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_billing_account()->::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_BillingAccountLimit::MergeFrom(
          from._internal_billing_account());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_common_knowledge()->::ai::inworld::studio::v1alpha::WorkspaceLimitInfo_CommonKnowledgeLimit::MergeFrom(
          from._internal_common_knowledge());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WorkspaceLimitInfo::CopyFrom(const WorkspaceLimitInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.studio.v1alpha.WorkspaceLimitInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool WorkspaceLimitInfo::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* WorkspaceLimitInfo::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void WorkspaceLimitInfo::InternalSwap(WorkspaceLimitInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo, _impl_.common_knowledge_)
      + sizeof(WorkspaceLimitInfo::_impl_.common_knowledge_)
      - PROTOBUF_FIELD_OFFSET(WorkspaceLimitInfo, _impl_.character_)>(
          reinterpret_cast<char*>(&_impl_.character_),
          reinterpret_cast<char*>(&other->_impl_.character_));
}

::google::protobuf::Metadata WorkspaceLimitInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto_getter, &descriptor_table_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto_once,
      file_level_metadata_ai_2finworld_2fstudio_2fv1alpha_2fworkspaces_2eproto[23]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1alpha
}  // namespace studio
}  // namespace inworld
}  // namespace ai
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
