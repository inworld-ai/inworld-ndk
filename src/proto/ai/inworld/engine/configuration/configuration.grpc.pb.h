// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: ai/inworld/engine/configuration/configuration.proto
#ifndef GRPC_ai_2finworld_2fengine_2fconfiguration_2fconfiguration_2eproto__INCLUDED
#define GRPC_ai_2finworld_2fengine_2fconfiguration_2fconfiguration_2eproto__INCLUDED

#include "ai/inworld/engine/configuration/configuration.pb.h"

#include <functional>
#include <grpc/impl/codegen/port_platform.h>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/client_context.h>
#include <grpcpp/impl/codegen/completion_queue.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace ai {
namespace inworld {
namespace engine {
namespace configuration {

}  // namespace configuration
}  // namespace engine
}  // namespace inworld
}  // namespace ai


#endif  // GRPC_ai_2finworld_2fengine_2fconfiguration_2fconfiguration_2eproto__INCLUDED
