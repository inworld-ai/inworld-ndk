#include "ProtoDisableWarning.h"
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ai/inworld/engine/v1/state_serialization.proto

#include "ai/inworld/engine/v1/state_serialization.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf_inworld::internal;
namespace _fl = ::google::protobuf_inworld::internal::field_layout;
namespace ai {
namespace inworld {
namespace engine {
namespace v1 {

inline constexpr GetSessionStateRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf_inworld::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetSessionStateRequest::GetSessionStateRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GetSessionStateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetSessionStateRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetSessionStateRequestDefaultTypeInternal() {}
  union {
    GetSessionStateRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetSessionStateRequestDefaultTypeInternal _GetSessionStateRequest_default_instance_;

inline constexpr SessionState::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        state_(
            &::google::protobuf_inworld::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        creation_time_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SessionState::SessionState(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SessionStateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SessionStateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SessionStateDefaultTypeInternal() {}
  union {
    SessionState _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SessionStateDefaultTypeInternal _SessionState_default_instance_;
}  // namespace v1
}  // namespace engine
}  // namespace inworld
}  // namespace ai
static ::_pb::Metadata file_level_metadata_ai_2finworld_2fengine_2fv1_2fstate_5fserialization_2eproto[2];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_ai_2finworld_2fengine_2fv1_2fstate_5fserialization_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_ai_2finworld_2fengine_2fv1_2fstate_5fserialization_2eproto = nullptr;
const ::uint32_t TableStruct_ai_2finworld_2fengine_2fv1_2fstate_5fserialization_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::v1::GetSessionStateRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::v1::GetSessionStateRequest, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::v1::SessionState, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::v1::SessionState, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::v1::SessionState, _impl_.state_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::engine::v1::SessionState, _impl_.creation_time_),
    ~0u,
    0,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::ai::inworld::engine::v1::GetSessionStateRequest)},
        {9, 19, -1, sizeof(::ai::inworld::engine::v1::SessionState)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::ai::inworld::engine::v1::_GetSessionStateRequest_default_instance_._instance,
    &::ai::inworld::engine::v1::_SessionState_default_instance_._instance,
};
const char descriptor_table_protodef_ai_2finworld_2fengine_2fv1_2fstate_5fserialization_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n.ai/inworld/engine/v1/state_serializati"
    "on.proto\022\024ai.inworld.engine.v1\032\034google/a"
    "pi/annotations.proto\032\027google/api/client."
    "proto\032\037google/api/field_behavior.proto\032\031"
    "google/api/resource.proto\032\037google/protob"
    "uf/timestamp.proto\"R\n\026GetSessionStateReq"
    "uest\0228\n\004name\030\001 \001(\tB*\342A\001\002\372A#\n!ai.inworld."
    "engine.v1/SessionState\"P\n\014SessionState\022\r"
    "\n\005state\030\001 \001(\014\0221\n\rcreation_time\030\002 \001(\0132\032.g"
    "oogle.protobuf.Timestamp2\263\001\n\022StateSerial"
    "ization\022\234\001\n\017GetSessionState\022,.ai.inworld"
    ".engine.v1.GetSessionStateRequest\032\".ai.i"
    "nworld.engine.v1.SessionState\"7\332A\004name\202\323"
    "\344\223\002*\022(/v1/{name=workspaces/*/sessions/*}"
    "/stateB\222\001\n\024ai.inworld.engine.v1B\027StateSe"
    "rializationProtoP\001ZHgithub.com/inworld-a"
    "i/inworld/serving/grpc-gateway/build/pro"
    "to/engine/v1\252\002\024Ai.Inworld.Engine.V1b\006pro"
    "to3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_ai_2finworld_2fengine_2fv1_2fstate_5fserialization_2eproto_deps[5] =
    {
        &::descriptor_table_google_2fapi_2fannotations_2eproto,
        &::descriptor_table_google_2fapi_2fclient_2eproto,
        &::descriptor_table_google_2fapi_2ffield_5fbehavior_2eproto,
        &::descriptor_table_google_2fapi_2fresource_2eproto,
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::absl::once_flag descriptor_table_ai_2finworld_2fengine_2fv1_2fstate_5fserialization_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_ai_2finworld_2fengine_2fv1_2fstate_5fserialization_2eproto = {
    false,
    false,
    723,
    descriptor_table_protodef_ai_2finworld_2fengine_2fv1_2fstate_5fserialization_2eproto,
    "ai/inworld/engine/v1/state_serialization.proto",
    &descriptor_table_ai_2finworld_2fengine_2fv1_2fstate_5fserialization_2eproto_once,
    descriptor_table_ai_2finworld_2fengine_2fv1_2fstate_5fserialization_2eproto_deps,
    5,
    2,
    schemas,
    file_default_instances,
    TableStruct_ai_2finworld_2fengine_2fv1_2fstate_5fserialization_2eproto::offsets,
    file_level_metadata_ai_2finworld_2fengine_2fv1_2fstate_5fserialization_2eproto,
    file_level_enum_descriptors_ai_2finworld_2fengine_2fv1_2fstate_5fserialization_2eproto,
    file_level_service_descriptors_ai_2finworld_2fengine_2fv1_2fstate_5fserialization_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_ai_2finworld_2fengine_2fv1_2fstate_5fserialization_2eproto_getter() {
  return &descriptor_table_ai_2finworld_2fengine_2fv1_2fstate_5fserialization_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_ai_2finworld_2fengine_2fv1_2fstate_5fserialization_2eproto(&descriptor_table_ai_2finworld_2fengine_2fv1_2fstate_5fserialization_2eproto);
namespace ai {
namespace inworld {
namespace engine {
namespace v1 {
// ===================================================================

class GetSessionStateRequest::_Internal {
 public:
};

GetSessionStateRequest::GetSessionStateRequest(::google::protobuf_inworld::Arena* arena)
    : ::google::protobuf_inworld::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.engine.v1.GetSessionStateRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetSessionStateRequest::Impl_::Impl_(
    ::google::protobuf_inworld::internal::InternalVisibility visibility, ::google::protobuf_inworld::Arena* arena,
    const Impl_& from)
      : name_(arena, from.name_),
        _cached_size_{0} {}

GetSessionStateRequest::GetSessionStateRequest(
    ::google::protobuf_inworld::Arena* arena,
    const GetSessionStateRequest& from)
    : ::google::protobuf_inworld::Message(arena) {
  GetSessionStateRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf_inworld::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:ai.inworld.engine.v1.GetSessionStateRequest)
}
inline PROTOBUF_NDEBUG_INLINE GetSessionStateRequest::Impl_::Impl_(
    ::google::protobuf_inworld::internal::InternalVisibility visibility,
    ::google::protobuf_inworld::Arena* arena)
      : name_(arena),
        _cached_size_{0} {}

inline void GetSessionStateRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetSessionStateRequest::~GetSessionStateRequest() {
  // @@protoc_insertion_point(destructor:ai.inworld.engine.v1.GetSessionStateRequest)
  _internal_metadata_.Delete<::google::protobuf_inworld::UnknownFieldSet>();
  SharedDtor();
}
inline void GetSessionStateRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void GetSessionStateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.engine.v1.GetSessionStateRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf_inworld::UnknownFieldSet>();
}

const char* GetSessionStateRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 56, 2> GetSessionStateRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GetSessionStateRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetSessionStateRequest, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
    {PROTOBUF_FIELD_OFFSET(GetSessionStateRequest, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\53\4\0\0\0\0\0\0"
    "ai.inworld.engine.v1.GetSessionStateRequest"
    "name"
  }},
};

::uint8_t* GetSessionStateRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf_inworld::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.engine.v1.GetSessionStateRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf_inworld::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf_inworld::internal::WireFormatLite::SERIALIZE, "ai.inworld.engine.v1.GetSessionStateRequest.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf_inworld::UnknownFieldSet>(::google::protobuf_inworld::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.engine.v1.GetSessionStateRequest)
  return target;
}

::size_t GetSessionStateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.engine.v1.GetSessionStateRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf_inworld::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf_inworld::Message::ClassData GetSessionStateRequest::_class_data_ = {
    GetSessionStateRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf_inworld::Message::ClassData* GetSessionStateRequest::GetClassData() const {
  return &_class_data_;
}

void GetSessionStateRequest::MergeImpl(::google::protobuf_inworld::Message& to_msg, const ::google::protobuf_inworld::Message& from_msg) {
  auto* const _this = static_cast<GetSessionStateRequest*>(&to_msg);
  auto& from = static_cast<const GetSessionStateRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.engine.v1.GetSessionStateRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf_inworld::UnknownFieldSet>(from._internal_metadata_);
}

void GetSessionStateRequest::CopyFrom(const GetSessionStateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.engine.v1.GetSessionStateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetSessionStateRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* GetSessionStateRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void GetSessionStateRequest::InternalSwap(GetSessionStateRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
}

::google::protobuf_inworld::Metadata GetSessionStateRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fengine_2fv1_2fstate_5fserialization_2eproto_getter, &descriptor_table_ai_2finworld_2fengine_2fv1_2fstate_5fserialization_2eproto_once,
      file_level_metadata_ai_2finworld_2fengine_2fv1_2fstate_5fserialization_2eproto[0]);
}
// ===================================================================

class SessionState::_Internal {
 public:
  using HasBits = decltype(std::declval<SessionState>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SessionState, _impl_._has_bits_);
  static const ::google::protobuf_inworld::Timestamp& creation_time(const SessionState* msg);
  static void set_has_creation_time(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::google::protobuf_inworld::Timestamp& SessionState::_Internal::creation_time(const SessionState* msg) {
  return *msg->_impl_.creation_time_;
}
void SessionState::clear_creation_time() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.creation_time_ != nullptr) _impl_.creation_time_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
SessionState::SessionState(::google::protobuf_inworld::Arena* arena)
    : ::google::protobuf_inworld::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.engine.v1.SessionState)
}
inline PROTOBUF_NDEBUG_INLINE SessionState::Impl_::Impl_(
    ::google::protobuf_inworld::internal::InternalVisibility visibility, ::google::protobuf_inworld::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        state_(arena, from.state_) {}

SessionState::SessionState(
    ::google::protobuf_inworld::Arena* arena,
    const SessionState& from)
    : ::google::protobuf_inworld::Message(arena) {
  SessionState* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf_inworld::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.creation_time_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::google::protobuf_inworld::Timestamp>(arena, *from._impl_.creation_time_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:ai.inworld.engine.v1.SessionState)
}
inline PROTOBUF_NDEBUG_INLINE SessionState::Impl_::Impl_(
    ::google::protobuf_inworld::internal::InternalVisibility visibility,
    ::google::protobuf_inworld::Arena* arena)
      : _cached_size_{0},
        state_(arena) {}

inline void SessionState::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.creation_time_ = {};
}
SessionState::~SessionState() {
  // @@protoc_insertion_point(destructor:ai.inworld.engine.v1.SessionState)
  _internal_metadata_.Delete<::google::protobuf_inworld::UnknownFieldSet>();
  SharedDtor();
}
inline void SessionState::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.state_.Destroy();
  delete _impl_.creation_time_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SessionState::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.engine.v1.SessionState)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.state_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.creation_time_ != nullptr);
    _impl_.creation_time_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf_inworld::UnknownFieldSet>();
}

const char* SessionState::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> SessionState::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SessionState, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SessionState_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .google.protobuf.Timestamp creation_time = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(SessionState, _impl_.creation_time_)}},
    // bytes state = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SessionState, _impl_.state_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes state = 1;
    {PROTOBUF_FIELD_OFFSET(SessionState, _impl_.state_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp creation_time = 2;
    {PROTOBUF_FIELD_OFFSET(SessionState, _impl_.creation_time_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf_inworld::Timestamp>()},
  }}, {{
  }},
};

::uint8_t* SessionState::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf_inworld::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.engine.v1.SessionState)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes state = 1;
  if (!this->_internal_state().empty()) {
    const std::string& _s = this->_internal_state();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .google.protobuf.Timestamp creation_time = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf_inworld::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::creation_time(this),
        _Internal::creation_time(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf_inworld::UnknownFieldSet>(::google::protobuf_inworld::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.engine.v1.SessionState)
  return target;
}

::size_t SessionState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.engine.v1.SessionState)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes state = 1;
  if (!this->_internal_state().empty()) {
    total_size += 1 + ::google::protobuf_inworld::internal::WireFormatLite::BytesSize(
                                    this->_internal_state());
  }

  // .google.protobuf.Timestamp creation_time = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf_inworld::internal::WireFormatLite::MessageSize(*_impl_.creation_time_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf_inworld::Message::ClassData SessionState::_class_data_ = {
    SessionState::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf_inworld::Message::ClassData* SessionState::GetClassData() const {
  return &_class_data_;
}

void SessionState::MergeImpl(::google::protobuf_inworld::Message& to_msg, const ::google::protobuf_inworld::Message& from_msg) {
  auto* const _this = static_cast<SessionState*>(&to_msg);
  auto& from = static_cast<const SessionState&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.engine.v1.SessionState)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_state().empty()) {
    _this->_internal_set_state(from._internal_state());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_creation_time()->::google::protobuf_inworld::Timestamp::MergeFrom(
        from._internal_creation_time());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf_inworld::UnknownFieldSet>(from._internal_metadata_);
}

void SessionState::CopyFrom(const SessionState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.engine.v1.SessionState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SessionState::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SessionState::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SessionState::InternalSwap(SessionState* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.state_, &other->_impl_.state_, arena);
  swap(_impl_.creation_time_, other->_impl_.creation_time_);
}

::google::protobuf_inworld::Metadata SessionState::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fengine_2fv1_2fstate_5fserialization_2eproto_getter, &descriptor_table_ai_2finworld_2fengine_2fv1_2fstate_5fserialization_2eproto_once,
      file_level_metadata_ai_2finworld_2fengine_2fv1_2fstate_5fserialization_2eproto[1]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace engine
}  // namespace inworld
}  // namespace ai
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
