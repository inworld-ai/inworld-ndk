#include "ProtoDisableWarning.h"
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ai/inworld/voices/base_voice.proto

#include "ai/inworld/voices/base_voice.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace ai {
namespace inworld {
namespace voices {

inline constexpr BaseVoice::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : language_codes_{},
        languages_{},
        _languages_cached_byte_size_{0},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        gender_{static_cast< ::ai::inworld::voices::Gender >(0)},
        natural_sample_rate_hertz_{0},
        age_{static_cast< ::ai::inworld::voices::Age >(0)},
        tts_metadata_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR BaseVoice::BaseVoice(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct BaseVoiceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BaseVoiceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BaseVoiceDefaultTypeInternal() {}
  union {
    BaseVoice _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BaseVoiceDefaultTypeInternal _BaseVoice_default_instance_;
}  // namespace voices
}  // namespace inworld
}  // namespace ai
static ::_pb::Metadata file_level_metadata_ai_2finworld_2fvoices_2fbase_5fvoice_2eproto[1];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_ai_2finworld_2fvoices_2fbase_5fvoice_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_ai_2finworld_2fvoices_2fbase_5fvoice_2eproto = nullptr;
const ::uint32_t TableStruct_ai_2finworld_2fvoices_2fbase_5fvoice_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::ai::inworld::voices::BaseVoice, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::ai::inworld::voices::BaseVoice, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::ai::inworld::voices::BaseVoice, _impl_.language_codes_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::voices::BaseVoice, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::voices::BaseVoice, _impl_.gender_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::voices::BaseVoice, _impl_.natural_sample_rate_hertz_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::voices::BaseVoice, _impl_.age_),
    PROTOBUF_FIELD_OFFSET(::ai::inworld::voices::BaseVoice, _impl_.languages_),
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::ai::inworld::voices::BaseVoice, _impl_.tts_metadata_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::ai::inworld::voices::BaseVoice)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::ai::inworld::voices::_BaseVoice_default_instance_._instance,
};
const char descriptor_table_protodef_ai_2finworld_2fvoices_2fbase_5fvoice_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\"ai/inworld/voices/base_voice.proto\022\021ai"
    ".inworld.voices\032.ai/inworld/language_cod"
    "es/language_codes.proto\032\036ai/inworld/voic"
    "es/voices.proto\"\300\002\n\tBaseVoice\022\032\n\016languag"
    "e_codes\030\001 \003(\tB\002\030\001\022\014\n\004name\030\002 \001(\t\022)\n\006gende"
    "r\030\003 \001(\0162\031.ai.inworld.voices.Gender\022!\n\031na"
    "tural_sample_rate_hertz\030\004 \001(\005\022#\n\003age\030\005 \001"
    "(\0162\026.ai.inworld.voices.Age\022:\n\tlanguages\030"
    "\006 \003(\0162\'.ai.inworld.language_codes.Langua"
    "geCode\022J\n\023elevenlabs_metadata\030d \001(\0132+.ai"
    ".inworld.voices.Voice.ElevenLabsMetadata"
    "H\000B\016\n\014tts_metadataB\214\001\n\024ai.inworld.BaseVo"
    "iceB\021BaseVoiceProtocolZMgithub.com/inwor"
    "ld-ai/inworld/serving/grpc-gateway/build"
    "/proto/engine/v1alpha\252\002\021Ai.Inworld.Voice"
    "sb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_ai_2finworld_2fvoices_2fbase_5fvoice_2eproto_deps[2] =
    {
        &::descriptor_table_ai_2finworld_2flanguage_5fcodes_2flanguage_5fcodes_2eproto,
        &::descriptor_table_ai_2finworld_2fvoices_2fvoices_2eproto,
};
static ::absl::once_flag descriptor_table_ai_2finworld_2fvoices_2fbase_5fvoice_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_ai_2finworld_2fvoices_2fbase_5fvoice_2eproto = {
    false,
    false,
    609,
    descriptor_table_protodef_ai_2finworld_2fvoices_2fbase_5fvoice_2eproto,
    "ai/inworld/voices/base_voice.proto",
    &descriptor_table_ai_2finworld_2fvoices_2fbase_5fvoice_2eproto_once,
    descriptor_table_ai_2finworld_2fvoices_2fbase_5fvoice_2eproto_deps,
    2,
    1,
    schemas,
    file_default_instances,
    TableStruct_ai_2finworld_2fvoices_2fbase_5fvoice_2eproto::offsets,
    file_level_metadata_ai_2finworld_2fvoices_2fbase_5fvoice_2eproto,
    file_level_enum_descriptors_ai_2finworld_2fvoices_2fbase_5fvoice_2eproto,
    file_level_service_descriptors_ai_2finworld_2fvoices_2fbase_5fvoice_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_ai_2finworld_2fvoices_2fbase_5fvoice_2eproto_getter() {
  return &descriptor_table_ai_2finworld_2fvoices_2fbase_5fvoice_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_ai_2finworld_2fvoices_2fbase_5fvoice_2eproto(&descriptor_table_ai_2finworld_2fvoices_2fbase_5fvoice_2eproto);
namespace ai {
namespace inworld {
namespace voices {
// ===================================================================

class BaseVoice::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::ai::inworld::voices::BaseVoice, _impl_._oneof_case_);
  static const ::ai::inworld::voices::Voice_ElevenLabsMetadata& elevenlabs_metadata(const BaseVoice* msg);
};

const ::ai::inworld::voices::Voice_ElevenLabsMetadata& BaseVoice::_Internal::elevenlabs_metadata(const BaseVoice* msg) {
  return *msg->_impl_.tts_metadata_.elevenlabs_metadata_;
}
void BaseVoice::set_allocated_elevenlabs_metadata(::ai::inworld::voices::Voice_ElevenLabsMetadata* elevenlabs_metadata) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_tts_metadata();
  if (elevenlabs_metadata) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(elevenlabs_metadata)->GetArena();
    if (message_arena != submessage_arena) {
      elevenlabs_metadata = ::google::protobuf::internal::GetOwnedMessage(message_arena, elevenlabs_metadata, submessage_arena);
    }
    set_has_elevenlabs_metadata();
    _impl_.tts_metadata_.elevenlabs_metadata_ = elevenlabs_metadata;
  }
  // @@protoc_insertion_point(field_set_allocated:ai.inworld.voices.BaseVoice.elevenlabs_metadata)
}
void BaseVoice::clear_elevenlabs_metadata() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (tts_metadata_case() == kElevenlabsMetadata) {
    if (GetArena() == nullptr) {
      delete _impl_.tts_metadata_.elevenlabs_metadata_;
    }
    clear_has_tts_metadata();
  }
}
BaseVoice::BaseVoice(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ai.inworld.voices.BaseVoice)
}
inline PROTOBUF_NDEBUG_INLINE BaseVoice::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : language_codes_{visibility, arena, from.language_codes_},
        languages_{visibility, arena, from.languages_},
        _languages_cached_byte_size_{0},
        name_(arena, from.name_),
        tts_metadata_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

BaseVoice::BaseVoice(
    ::google::protobuf::Arena* arena,
    const BaseVoice& from)
    : ::google::protobuf::Message(arena) {
  BaseVoice* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, gender_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, gender_),
           offsetof(Impl_, age_) -
               offsetof(Impl_, gender_) +
               sizeof(Impl_::age_));
  switch (tts_metadata_case()) {
    case TTS_METADATA_NOT_SET:
      break;
      case kElevenlabsMetadata:
        _impl_.tts_metadata_.elevenlabs_metadata_ = CreateMaybeMessage<::ai::inworld::voices::Voice_ElevenLabsMetadata>(arena, *from._impl_.tts_metadata_.elevenlabs_metadata_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:ai.inworld.voices.BaseVoice)
}
inline PROTOBUF_NDEBUG_INLINE BaseVoice::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : language_codes_{visibility, arena},
        languages_{visibility, arena},
        _languages_cached_byte_size_{0},
        name_(arena),
        tts_metadata_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void BaseVoice::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, gender_),
           0,
           offsetof(Impl_, age_) -
               offsetof(Impl_, gender_) +
               sizeof(Impl_::age_));
}
BaseVoice::~BaseVoice() {
  // @@protoc_insertion_point(destructor:ai.inworld.voices.BaseVoice)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void BaseVoice::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  if (has_tts_metadata()) {
    clear_tts_metadata();
  }
  _impl_.~Impl_();
}

void BaseVoice::clear_tts_metadata() {
// @@protoc_insertion_point(one_of_clear_start:ai.inworld.voices.BaseVoice)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (tts_metadata_case()) {
    case kElevenlabsMetadata: {
      if (GetArena() == nullptr) {
        delete _impl_.tts_metadata_.elevenlabs_metadata_;
      }
      break;
    }
    case TTS_METADATA_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = TTS_METADATA_NOT_SET;
}


PROTOBUF_NOINLINE void BaseVoice::Clear() {
// @@protoc_insertion_point(message_clear_start:ai.inworld.voices.BaseVoice)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.language_codes_.Clear();
  _impl_.languages_.Clear();
  _impl_.name_.ClearToEmpty();
  ::memset(&_impl_.gender_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.age_) -
      reinterpret_cast<char*>(&_impl_.gender_)) + sizeof(_impl_.age_));
  clear_tts_metadata();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* BaseVoice::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 1, 54, 7> BaseVoice::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    100, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_BaseVoice_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated string language_codes = 1 [deprecated = true];
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(BaseVoice, _impl_.language_codes_)}},
    // string name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(BaseVoice, _impl_.name_)}},
    // .ai.inworld.voices.Gender gender = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BaseVoice, _impl_.gender_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(BaseVoice, _impl_.gender_)}},
    // int32 natural_sample_rate_hertz = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BaseVoice, _impl_.natural_sample_rate_hertz_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(BaseVoice, _impl_.natural_sample_rate_hertz_)}},
    // .ai.inworld.voices.Age age = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BaseVoice, _impl_.age_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(BaseVoice, _impl_.age_)}},
    // repeated .ai.inworld.language_codes.LanguageCode languages = 6;
    {::_pbi::TcParser::FastV32P1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(BaseVoice, _impl_.languages_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    100, 0, 1,
    65534, 6,
    65535, 65535
  }}, {{
    // repeated string language_codes = 1 [deprecated = true];
    {PROTOBUF_FIELD_OFFSET(BaseVoice, _impl_.language_codes_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // string name = 2;
    {PROTOBUF_FIELD_OFFSET(BaseVoice, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .ai.inworld.voices.Gender gender = 3;
    {PROTOBUF_FIELD_OFFSET(BaseVoice, _impl_.gender_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // int32 natural_sample_rate_hertz = 4;
    {PROTOBUF_FIELD_OFFSET(BaseVoice, _impl_.natural_sample_rate_hertz_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .ai.inworld.voices.Age age = 5;
    {PROTOBUF_FIELD_OFFSET(BaseVoice, _impl_.age_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // repeated .ai.inworld.language_codes.LanguageCode languages = 6;
    {PROTOBUF_FIELD_OFFSET(BaseVoice, _impl_.languages_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
    // .ai.inworld.voices.Voice.ElevenLabsMetadata elevenlabs_metadata = 100;
    {PROTOBUF_FIELD_OFFSET(BaseVoice, _impl_.tts_metadata_.elevenlabs_metadata_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::ai::inworld::voices::Voice_ElevenLabsMetadata>()},
  }}, {{
    "\33\16\4\0\0\0\0\0"
    "ai.inworld.voices.BaseVoice"
    "language_codes"
    "name"
  }},
};

::uint8_t* BaseVoice::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ai.inworld.voices.BaseVoice)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string language_codes = 1 [deprecated = true];
  for (int i = 0, n = this->_internal_language_codes_size(); i < n; ++i) {
    const auto& s = this->_internal_language_codes().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ai.inworld.voices.BaseVoice.language_codes");
    target = stream->WriteString(1, s, target);
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ai.inworld.voices.BaseVoice.name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // .ai.inworld.voices.Gender gender = 3;
  if (this->_internal_gender() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        3, this->_internal_gender(), target);
  }

  // int32 natural_sample_rate_hertz = 4;
  if (this->_internal_natural_sample_rate_hertz() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_natural_sample_rate_hertz(), target);
  }

  // .ai.inworld.voices.Age age = 5;
  if (this->_internal_age() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        5, this->_internal_age(), target);
  }

  // repeated .ai.inworld.language_codes.LanguageCode languages = 6;
  {
    std::size_t byte_size = _impl_._languages_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(6, _internal_languages(),
                                       byte_size, target);
    }
  }

  // .ai.inworld.voices.Voice.ElevenLabsMetadata elevenlabs_metadata = 100;
  if (tts_metadata_case() == kElevenlabsMetadata) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        100, _Internal::elevenlabs_metadata(this),
        _Internal::elevenlabs_metadata(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ai.inworld.voices.BaseVoice)
  return target;
}

::size_t BaseVoice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ai.inworld.voices.BaseVoice)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string language_codes = 1 [deprecated = true];
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_language_codes().size());
  for (int i = 0, n = _internal_language_codes().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_language_codes().Get(i));
  }
  // repeated .ai.inworld.language_codes.LanguageCode languages = 6;
  {
    std::size_t data_size = 0;
    auto count = static_cast<std::size_t>(this->_internal_languages_size());

    for (std::size_t i = 0; i < count; ++i) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
          this->_internal_languages().Get(static_cast<int>(i)));
    }
    total_size += data_size;
    if (data_size > 0) {
      total_size += 1;
      total_size += ::_pbi::WireFormatLite::Int32Size(
          static_cast<int32_t>(data_size));
    }
    _impl_._languages_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
  }
  // string name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // .ai.inworld.voices.Gender gender = 3;
  if (this->_internal_gender() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_gender());
  }

  // int32 natural_sample_rate_hertz = 4;
  if (this->_internal_natural_sample_rate_hertz() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_natural_sample_rate_hertz());
  }

  // .ai.inworld.voices.Age age = 5;
  if (this->_internal_age() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_age());
  }

  switch (tts_metadata_case()) {
    // .ai.inworld.voices.Voice.ElevenLabsMetadata elevenlabs_metadata = 100;
    case kElevenlabsMetadata: {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.tts_metadata_.elevenlabs_metadata_);
      break;
    }
    case TTS_METADATA_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData BaseVoice::_class_data_ = {
    BaseVoice::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* BaseVoice::GetClassData() const {
  return &_class_data_;
}

void BaseVoice::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<BaseVoice*>(&to_msg);
  auto& from = static_cast<const BaseVoice&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ai.inworld.voices.BaseVoice)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_language_codes()->MergeFrom(from._internal_language_codes());
  _this->_internal_mutable_languages()->MergeFrom(from._internal_languages());
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_gender() != 0) {
    _this->_internal_set_gender(from._internal_gender());
  }
  if (from._internal_natural_sample_rate_hertz() != 0) {
    _this->_internal_set_natural_sample_rate_hertz(from._internal_natural_sample_rate_hertz());
  }
  if (from._internal_age() != 0) {
    _this->_internal_set_age(from._internal_age());
  }
  switch (from.tts_metadata_case()) {
    case kElevenlabsMetadata: {
      _this->_internal_mutable_elevenlabs_metadata()->::ai::inworld::voices::Voice_ElevenLabsMetadata::MergeFrom(
          from._internal_elevenlabs_metadata());
      break;
    }
    case TTS_METADATA_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BaseVoice::CopyFrom(const BaseVoice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ai.inworld.voices.BaseVoice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool BaseVoice::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* BaseVoice::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void BaseVoice::InternalSwap(BaseVoice* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.language_codes_.InternalSwap(&other->_impl_.language_codes_);
  _impl_.languages_.InternalSwap(&other->_impl_.languages_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BaseVoice, _impl_.age_)
      + sizeof(BaseVoice::_impl_.age_)
      - PROTOBUF_FIELD_OFFSET(BaseVoice, _impl_.gender_)>(
          reinterpret_cast<char*>(&_impl_.gender_),
          reinterpret_cast<char*>(&other->_impl_.gender_));
  swap(_impl_.tts_metadata_, other->_impl_.tts_metadata_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata BaseVoice::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ai_2finworld_2fvoices_2fbase_5fvoice_2eproto_getter, &descriptor_table_ai_2finworld_2fvoices_2fbase_5fvoice_2eproto_once,
      file_level_metadata_ai_2finworld_2fvoices_2fbase_5fvoice_2eproto[0]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace voices
}  // namespace inworld
}  // namespace ai
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
