#include "ProtoDisableWarning.h"
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: nvidia/animation-controller-interface-main-proto/proto/nvidia_ace.services.animation_controller.v1.proto

#include "nvidia/animation-controller-interface-main-proto/proto/nvidia_ace.services.animation_controller.v1.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_nvidia_2fanimation_2dcommon_2dmain_2dproto_2fproto_2fnvidia_5face_2eanimation_5fid_2ev1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AnimationIds_nvidia_2fanimation_2dcommon_2dmain_2dproto_2fproto_2fnvidia_5face_2eanimation_5fid_2ev1_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_nvidia_2fanimation_2dcommon_2dmain_2dproto_2fproto_2fnvidia_5face_2estatus_2ev1_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Status_nvidia_2fanimation_2dcommon_2dmain_2dproto_2fproto_2fnvidia_5face_2estatus_2ev1_2eproto;
namespace nvidia_ace {
namespace services {
namespace animation_controller {
namespace v1 {
class AnimationGraphRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AnimationGraphRequest> _instance;
} _AnimationGraphRequest_default_instance_;
class AnimationIdsOrStatusDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AnimationIdsOrStatus> _instance;
} _AnimationIdsOrStatus_default_instance_;
}  // namespace v1
}  // namespace animation_controller
}  // namespace services
}  // namespace nvidia_ace
static void InitDefaultsscc_info_AnimationGraphRequest_nvidia_2fanimation_2dcontroller_2dinterface_2dmain_2dproto_2fproto_2fnvidia_5face_2eservices_2eanimation_5fcontroller_2ev1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::nvidia_ace::services::animation_controller::v1::_AnimationGraphRequest_default_instance_;
    new (ptr) ::nvidia_ace::services::animation_controller::v1::AnimationGraphRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_AnimationGraphRequest_nvidia_2fanimation_2dcontroller_2dinterface_2dmain_2dproto_2fproto_2fnvidia_5face_2eservices_2eanimation_5fcontroller_2ev1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_AnimationGraphRequest_nvidia_2fanimation_2dcontroller_2dinterface_2dmain_2dproto_2fproto_2fnvidia_5face_2eservices_2eanimation_5fcontroller_2ev1_2eproto}, {
      &scc_info_AnimationIds_nvidia_2fanimation_2dcommon_2dmain_2dproto_2fproto_2fnvidia_5face_2eanimation_5fid_2ev1_2eproto.base,}};

static void InitDefaultsscc_info_AnimationIdsOrStatus_nvidia_2fanimation_2dcontroller_2dinterface_2dmain_2dproto_2fproto_2fnvidia_5face_2eservices_2eanimation_5fcontroller_2ev1_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::nvidia_ace::services::animation_controller::v1::_AnimationIdsOrStatus_default_instance_;
    new (ptr) ::nvidia_ace::services::animation_controller::v1::AnimationIdsOrStatus();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_AnimationIdsOrStatus_nvidia_2fanimation_2dcontroller_2dinterface_2dmain_2dproto_2fproto_2fnvidia_5face_2eservices_2eanimation_5fcontroller_2ev1_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_AnimationIdsOrStatus_nvidia_2fanimation_2dcontroller_2dinterface_2dmain_2dproto_2fproto_2fnvidia_5face_2eservices_2eanimation_5fcontroller_2ev1_2eproto}, {
      &scc_info_AnimationIds_nvidia_2fanimation_2dcommon_2dmain_2dproto_2fproto_2fnvidia_5face_2eanimation_5fid_2ev1_2eproto.base,
      &scc_info_Status_nvidia_2fanimation_2dcommon_2dmain_2dproto_2fproto_2fnvidia_5face_2estatus_2ev1_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_nvidia_2fanimation_2dcontroller_2dinterface_2dmain_2dproto_2fproto_2fnvidia_5face_2eservices_2eanimation_5fcontroller_2ev1_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_nvidia_2fanimation_2dcontroller_2dinterface_2dmain_2dproto_2fproto_2fnvidia_5face_2eservices_2eanimation_5fcontroller_2ev1_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_nvidia_2fanimation_2dcontroller_2dinterface_2dmain_2dproto_2fproto_2fnvidia_5face_2eservices_2eanimation_5fcontroller_2ev1_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_nvidia_2fanimation_2dcontroller_2dinterface_2dmain_2dproto_2fproto_2fnvidia_5face_2eservices_2eanimation_5fcontroller_2ev1_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::nvidia_ace::services::animation_controller::v1::AnimationGraphRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::nvidia_ace::services::animation_controller::v1::AnimationGraphRequest, animation_ids_),
  PROTOBUF_FIELD_OFFSET(::nvidia_ace::services::animation_controller::v1::AnimationGraphRequest, animation_graph_variable_name_),
  PROTOBUF_FIELD_OFFSET(::nvidia_ace::services::animation_controller::v1::AnimationGraphRequest, animation_graph_variable_value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::nvidia_ace::services::animation_controller::v1::AnimationIdsOrStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::nvidia_ace::services::animation_controller::v1::AnimationIdsOrStatus, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::nvidia_ace::services::animation_controller::v1::AnimationIdsOrStatus, response_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::nvidia_ace::services::animation_controller::v1::AnimationGraphRequest)},
  { 8, -1, sizeof(::nvidia_ace::services::animation_controller::v1::AnimationIdsOrStatus)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::nvidia_ace::services::animation_controller::v1::_AnimationGraphRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::nvidia_ace::services::animation_controller::v1::_AnimationIdsOrStatus_default_instance_),
};

const char descriptor_table_protodef_nvidia_2fanimation_2dcontroller_2dinterface_2dmain_2dproto_2fproto_2fnvidia_5face_2eservices_2eanimation_5fcontroller_2ev1_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\nhnvidia/animation-controller-interface-"
  "main-proto/proto/nvidia_ace.services.ani"
  "mation_controller.v1.proto\022+nvidia_ace.s"
  "ervices.animation_controller.v1\032Unvidia/"
  "animation-controller-interface-main-prot"
  "o/proto/nvidia_ace.controller.v1.proto\032C"
  "nvidia/animation-common-main-proto/proto"
  "/nvidia_ace.status.v1.proto\032Invidia/anim"
  "ation-common-main-proto/proto/nvidia_ace"
  ".animation_id.v1.proto\032Knvidia/animation"
  "-common-main-proto/proto/nvidia_ace.anim"
  "ation_data.v1.proto\032=nvidia/a2x-interfac"
  "e-main-proto/proto/nvidia_ace.a2x.v1.pro"
  "to\032\033google/protobuf/empty.proto\"\247\001\n\025Anim"
  "ationGraphRequest\022\?\n\ranimation_ids\030\001 \001(\013"
  "2(.nvidia_ace.animation_id.v1.AnimationI"
  "ds\022%\n\035animation_graph_variable_name\030\002 \001("
  "\t\022&\n\036animation_graph_variable_value\030\003 \001("
  "\t\"\225\001\n\024AnimationIdsOrStatus\022A\n\ranimation_"
  "ids\030\001 \001(\0132(.nvidia_ace.animation_id.v1.A"
  "nimationIdsH\000\022.\n\006status\030\002 \001(\0132\034.nvidia_a"
  "ce.status.v1.StatusH\000B\n\n\010response2\350\003\n\032An"
  "imationControllerService\022r\n\023RequestAnima"
  "tionIds\022\026.google.protobuf.Empty\032A.nvidia"
  "_ace.services.animation_controller.v1.An"
  "imationIdsOrStatus\"\000\022z\n\027PullAnimationDat"
  "aStream\022(.nvidia_ace.animation_id.v1.Ani"
  "mationIds\0321.nvidia_ace.animation_data.v1"
  ".AnimationDataStream\"\0000\001\022S\n\017PushAudioStr"
  "eam\022\036.nvidia_ace.a2x.v1.AudioStream\032\034.nv"
  "idia_ace.status.v1.Status\"\000(\001\022\204\001\n\034Update"
  "AnimationGraphVariable\022B.nvidia_ace.serv"
  "ices.animation_controller.v1.AnimationGr"
  "aphRequest\032\034.nvidia_ace.status.v1.Status"
  "\"\000(\001b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_nvidia_2fanimation_2dcontroller_2dinterface_2dmain_2dproto_2fproto_2fnvidia_5face_2eservices_2eanimation_5fcontroller_2ev1_2eproto_deps[6] = {
  &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
  &::descriptor_table_nvidia_2fa2x_2dinterface_2dmain_2dproto_2fproto_2fnvidia_5face_2ea2x_2ev1_2eproto,
  &::descriptor_table_nvidia_2fanimation_2dcommon_2dmain_2dproto_2fproto_2fnvidia_5face_2eanimation_5fdata_2ev1_2eproto,
  &::descriptor_table_nvidia_2fanimation_2dcommon_2dmain_2dproto_2fproto_2fnvidia_5face_2eanimation_5fid_2ev1_2eproto,
  &::descriptor_table_nvidia_2fanimation_2dcommon_2dmain_2dproto_2fproto_2fnvidia_5face_2estatus_2ev1_2eproto,
  &::descriptor_table_nvidia_2fanimation_2dcontroller_2dinterface_2dmain_2dproto_2fproto_2fnvidia_5face_2econtroller_2ev1_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_nvidia_2fanimation_2dcontroller_2dinterface_2dmain_2dproto_2fproto_2fnvidia_5face_2eservices_2eanimation_5fcontroller_2ev1_2eproto_sccs[2] = {
  &scc_info_AnimationGraphRequest_nvidia_2fanimation_2dcontroller_2dinterface_2dmain_2dproto_2fproto_2fnvidia_5face_2eservices_2eanimation_5fcontroller_2ev1_2eproto.base,
  &scc_info_AnimationIdsOrStatus_nvidia_2fanimation_2dcontroller_2dinterface_2dmain_2dproto_2fproto_2fnvidia_5face_2eservices_2eanimation_5fcontroller_2ev1_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_nvidia_2fanimation_2dcontroller_2dinterface_2dmain_2dproto_2fproto_2fnvidia_5face_2eservices_2eanimation_5fcontroller_2ev1_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_nvidia_2fanimation_2dcontroller_2dinterface_2dmain_2dproto_2fproto_2fnvidia_5face_2eservices_2eanimation_5fcontroller_2ev1_2eproto = {
  false, false, descriptor_table_protodef_nvidia_2fanimation_2dcontroller_2dinterface_2dmain_2dproto_2fproto_2fnvidia_5face_2eservices_2eanimation_5fcontroller_2ev1_2eproto, "nvidia/animation-controller-interface-main-proto/proto/nvidia_ace.services.animation_controller.v1.proto", 1372,
  &descriptor_table_nvidia_2fanimation_2dcontroller_2dinterface_2dmain_2dproto_2fproto_2fnvidia_5face_2eservices_2eanimation_5fcontroller_2ev1_2eproto_once, descriptor_table_nvidia_2fanimation_2dcontroller_2dinterface_2dmain_2dproto_2fproto_2fnvidia_5face_2eservices_2eanimation_5fcontroller_2ev1_2eproto_sccs, descriptor_table_nvidia_2fanimation_2dcontroller_2dinterface_2dmain_2dproto_2fproto_2fnvidia_5face_2eservices_2eanimation_5fcontroller_2ev1_2eproto_deps, 2, 6,
  schemas, file_default_instances, TableStruct_nvidia_2fanimation_2dcontroller_2dinterface_2dmain_2dproto_2fproto_2fnvidia_5face_2eservices_2eanimation_5fcontroller_2ev1_2eproto::offsets,
  file_level_metadata_nvidia_2fanimation_2dcontroller_2dinterface_2dmain_2dproto_2fproto_2fnvidia_5face_2eservices_2eanimation_5fcontroller_2ev1_2eproto, 2, file_level_enum_descriptors_nvidia_2fanimation_2dcontroller_2dinterface_2dmain_2dproto_2fproto_2fnvidia_5face_2eservices_2eanimation_5fcontroller_2ev1_2eproto, file_level_service_descriptors_nvidia_2fanimation_2dcontroller_2dinterface_2dmain_2dproto_2fproto_2fnvidia_5face_2eservices_2eanimation_5fcontroller_2ev1_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_nvidia_2fanimation_2dcontroller_2dinterface_2dmain_2dproto_2fproto_2fnvidia_5face_2eservices_2eanimation_5fcontroller_2ev1_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_nvidia_2fanimation_2dcontroller_2dinterface_2dmain_2dproto_2fproto_2fnvidia_5face_2eservices_2eanimation_5fcontroller_2ev1_2eproto)), true);
namespace nvidia_ace {
namespace services {
namespace animation_controller {
namespace v1 {

// ===================================================================

class AnimationGraphRequest::_Internal {
 public:
  static const ::nvidia_ace::animation_id::v1::AnimationIds& animation_ids(const AnimationGraphRequest* msg);
};

const ::nvidia_ace::animation_id::v1::AnimationIds&
AnimationGraphRequest::_Internal::animation_ids(const AnimationGraphRequest* msg) {
  return *msg->animation_ids_;
}
void AnimationGraphRequest::clear_animation_ids() {
  if (GetArena() == nullptr && animation_ids_ != nullptr) {
    delete animation_ids_;
  }
  animation_ids_ = nullptr;
}
AnimationGraphRequest::AnimationGraphRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:nvidia_ace.services.animation_controller.v1.AnimationGraphRequest)
}
AnimationGraphRequest::AnimationGraphRequest(const AnimationGraphRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  animation_graph_variable_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_animation_graph_variable_name().empty()) {
    animation_graph_variable_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_animation_graph_variable_name(), 
      GetArena());
  }
  animation_graph_variable_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_animation_graph_variable_value().empty()) {
    animation_graph_variable_value_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_animation_graph_variable_value(), 
      GetArena());
  }
  if (from._internal_has_animation_ids()) {
    animation_ids_ = new ::nvidia_ace::animation_id::v1::AnimationIds(*from.animation_ids_);
  } else {
    animation_ids_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:nvidia_ace.services.animation_controller.v1.AnimationGraphRequest)
}

void AnimationGraphRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AnimationGraphRequest_nvidia_2fanimation_2dcontroller_2dinterface_2dmain_2dproto_2fproto_2fnvidia_5face_2eservices_2eanimation_5fcontroller_2ev1_2eproto.base);
  animation_graph_variable_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  animation_graph_variable_value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  animation_ids_ = nullptr;
}

AnimationGraphRequest::~AnimationGraphRequest() {
  // @@protoc_insertion_point(destructor:nvidia_ace.services.animation_controller.v1.AnimationGraphRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AnimationGraphRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  animation_graph_variable_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  animation_graph_variable_value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete animation_ids_;
}

void AnimationGraphRequest::ArenaDtor(void* object) {
  AnimationGraphRequest* _this = reinterpret_cast< AnimationGraphRequest* >(object);
  (void)_this;
}
void AnimationGraphRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AnimationGraphRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AnimationGraphRequest& AnimationGraphRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AnimationGraphRequest_nvidia_2fanimation_2dcontroller_2dinterface_2dmain_2dproto_2fproto_2fnvidia_5face_2eservices_2eanimation_5fcontroller_2ev1_2eproto.base);
  return *internal_default_instance();
}


void AnimationGraphRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:nvidia_ace.services.animation_controller.v1.AnimationGraphRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  animation_graph_variable_name_.ClearToEmpty();
  animation_graph_variable_value_.ClearToEmpty();
  if (GetArena() == nullptr && animation_ids_ != nullptr) {
    delete animation_ids_;
  }
  animation_ids_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AnimationGraphRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .nvidia_ace.animation_id.v1.AnimationIds animation_ids = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_animation_ids(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string animation_graph_variable_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_animation_graph_variable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "nvidia_ace.services.animation_controller.v1.AnimationGraphRequest.animation_graph_variable_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string animation_graph_variable_value = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_animation_graph_variable_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "nvidia_ace.services.animation_controller.v1.AnimationGraphRequest.animation_graph_variable_value"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AnimationGraphRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:nvidia_ace.services.animation_controller.v1.AnimationGraphRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .nvidia_ace.animation_id.v1.AnimationIds animation_ids = 1;
  if (this->has_animation_ids()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::animation_ids(this), target, stream);
  }

  // string animation_graph_variable_name = 2;
  if (this->animation_graph_variable_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_animation_graph_variable_name().data(), static_cast<int>(this->_internal_animation_graph_variable_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "nvidia_ace.services.animation_controller.v1.AnimationGraphRequest.animation_graph_variable_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_animation_graph_variable_name(), target);
  }

  // string animation_graph_variable_value = 3;
  if (this->animation_graph_variable_value().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_animation_graph_variable_value().data(), static_cast<int>(this->_internal_animation_graph_variable_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "nvidia_ace.services.animation_controller.v1.AnimationGraphRequest.animation_graph_variable_value");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_animation_graph_variable_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nvidia_ace.services.animation_controller.v1.AnimationGraphRequest)
  return target;
}

size_t AnimationGraphRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nvidia_ace.services.animation_controller.v1.AnimationGraphRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string animation_graph_variable_name = 2;
  if (this->animation_graph_variable_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_animation_graph_variable_name());
  }

  // string animation_graph_variable_value = 3;
  if (this->animation_graph_variable_value().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_animation_graph_variable_value());
  }

  // .nvidia_ace.animation_id.v1.AnimationIds animation_ids = 1;
  if (this->has_animation_ids()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *animation_ids_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AnimationGraphRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nvidia_ace.services.animation_controller.v1.AnimationGraphRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AnimationGraphRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AnimationGraphRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nvidia_ace.services.animation_controller.v1.AnimationGraphRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nvidia_ace.services.animation_controller.v1.AnimationGraphRequest)
    MergeFrom(*source);
  }
}

void AnimationGraphRequest::MergeFrom(const AnimationGraphRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nvidia_ace.services.animation_controller.v1.AnimationGraphRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.animation_graph_variable_name().size() > 0) {
    _internal_set_animation_graph_variable_name(from._internal_animation_graph_variable_name());
  }
  if (from.animation_graph_variable_value().size() > 0) {
    _internal_set_animation_graph_variable_value(from._internal_animation_graph_variable_value());
  }
  if (from.has_animation_ids()) {
    _internal_mutable_animation_ids()->::nvidia_ace::animation_id::v1::AnimationIds::MergeFrom(from._internal_animation_ids());
  }
}

void AnimationGraphRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nvidia_ace.services.animation_controller.v1.AnimationGraphRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnimationGraphRequest::CopyFrom(const AnimationGraphRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nvidia_ace.services.animation_controller.v1.AnimationGraphRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AnimationGraphRequest::IsInitialized() const {
  return true;
}

void AnimationGraphRequest::InternalSwap(AnimationGraphRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  animation_graph_variable_name_.Swap(&other->animation_graph_variable_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  animation_graph_variable_value_.Swap(&other->animation_graph_variable_value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(animation_ids_, other->animation_ids_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AnimationGraphRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class AnimationIdsOrStatus::_Internal {
 public:
  static const ::nvidia_ace::animation_id::v1::AnimationIds& animation_ids(const AnimationIdsOrStatus* msg);
  static const ::nvidia_ace::status::v1::Status& status(const AnimationIdsOrStatus* msg);
};

const ::nvidia_ace::animation_id::v1::AnimationIds&
AnimationIdsOrStatus::_Internal::animation_ids(const AnimationIdsOrStatus* msg) {
  return *msg->response_.animation_ids_;
}
const ::nvidia_ace::status::v1::Status&
AnimationIdsOrStatus::_Internal::status(const AnimationIdsOrStatus* msg) {
  return *msg->response_.status_;
}
void AnimationIdsOrStatus::set_allocated_animation_ids(::nvidia_ace::animation_id::v1::AnimationIds* animation_ids) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_response();
  if (animation_ids) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(animation_ids)->GetArena();
    if (message_arena != submessage_arena) {
      animation_ids = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, animation_ids, submessage_arena);
    }
    set_has_animation_ids();
    response_.animation_ids_ = animation_ids;
  }
  // @@protoc_insertion_point(field_set_allocated:nvidia_ace.services.animation_controller.v1.AnimationIdsOrStatus.animation_ids)
}
void AnimationIdsOrStatus::clear_animation_ids() {
  if (_internal_has_animation_ids()) {
    if (GetArena() == nullptr) {
      delete response_.animation_ids_;
    }
    clear_has_response();
  }
}
void AnimationIdsOrStatus::set_allocated_status(::nvidia_ace::status::v1::Status* status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_response();
  if (status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(status)->GetArena();
    if (message_arena != submessage_arena) {
      status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    set_has_status();
    response_.status_ = status;
  }
  // @@protoc_insertion_point(field_set_allocated:nvidia_ace.services.animation_controller.v1.AnimationIdsOrStatus.status)
}
void AnimationIdsOrStatus::clear_status() {
  if (_internal_has_status()) {
    if (GetArena() == nullptr) {
      delete response_.status_;
    }
    clear_has_response();
  }
}
AnimationIdsOrStatus::AnimationIdsOrStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:nvidia_ace.services.animation_controller.v1.AnimationIdsOrStatus)
}
AnimationIdsOrStatus::AnimationIdsOrStatus(const AnimationIdsOrStatus& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_response();
  switch (from.response_case()) {
    case kAnimationIds: {
      _internal_mutable_animation_ids()->::nvidia_ace::animation_id::v1::AnimationIds::MergeFrom(from._internal_animation_ids());
      break;
    }
    case kStatus: {
      _internal_mutable_status()->::nvidia_ace::status::v1::Status::MergeFrom(from._internal_status());
      break;
    }
    case RESPONSE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:nvidia_ace.services.animation_controller.v1.AnimationIdsOrStatus)
}

void AnimationIdsOrStatus::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AnimationIdsOrStatus_nvidia_2fanimation_2dcontroller_2dinterface_2dmain_2dproto_2fproto_2fnvidia_5face_2eservices_2eanimation_5fcontroller_2ev1_2eproto.base);
  clear_has_response();
}

AnimationIdsOrStatus::~AnimationIdsOrStatus() {
  // @@protoc_insertion_point(destructor:nvidia_ace.services.animation_controller.v1.AnimationIdsOrStatus)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AnimationIdsOrStatus::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_response()) {
    clear_response();
  }
}

void AnimationIdsOrStatus::ArenaDtor(void* object) {
  AnimationIdsOrStatus* _this = reinterpret_cast< AnimationIdsOrStatus* >(object);
  (void)_this;
}
void AnimationIdsOrStatus::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AnimationIdsOrStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AnimationIdsOrStatus& AnimationIdsOrStatus::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AnimationIdsOrStatus_nvidia_2fanimation_2dcontroller_2dinterface_2dmain_2dproto_2fproto_2fnvidia_5face_2eservices_2eanimation_5fcontroller_2ev1_2eproto.base);
  return *internal_default_instance();
}


void AnimationIdsOrStatus::clear_response() {
// @@protoc_insertion_point(one_of_clear_start:nvidia_ace.services.animation_controller.v1.AnimationIdsOrStatus)
  switch (response_case()) {
    case kAnimationIds: {
      if (GetArena() == nullptr) {
        delete response_.animation_ids_;
      }
      break;
    }
    case kStatus: {
      if (GetArena() == nullptr) {
        delete response_.status_;
      }
      break;
    }
    case RESPONSE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = RESPONSE_NOT_SET;
}


void AnimationIdsOrStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:nvidia_ace.services.animation_controller.v1.AnimationIdsOrStatus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_response();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AnimationIdsOrStatus::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .nvidia_ace.animation_id.v1.AnimationIds animation_ids = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_animation_ids(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .nvidia_ace.status.v1.Status status = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AnimationIdsOrStatus::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:nvidia_ace.services.animation_controller.v1.AnimationIdsOrStatus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .nvidia_ace.animation_id.v1.AnimationIds animation_ids = 1;
  if (_internal_has_animation_ids()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::animation_ids(this), target, stream);
  }

  // .nvidia_ace.status.v1.Status status = 2;
  if (_internal_has_status()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::status(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nvidia_ace.services.animation_controller.v1.AnimationIdsOrStatus)
  return target;
}

size_t AnimationIdsOrStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nvidia_ace.services.animation_controller.v1.AnimationIdsOrStatus)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (response_case()) {
    // .nvidia_ace.animation_id.v1.AnimationIds animation_ids = 1;
    case kAnimationIds: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *response_.animation_ids_);
      break;
    }
    // .nvidia_ace.status.v1.Status status = 2;
    case kStatus: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *response_.status_);
      break;
    }
    case RESPONSE_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AnimationIdsOrStatus::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nvidia_ace.services.animation_controller.v1.AnimationIdsOrStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const AnimationIdsOrStatus* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AnimationIdsOrStatus>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nvidia_ace.services.animation_controller.v1.AnimationIdsOrStatus)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nvidia_ace.services.animation_controller.v1.AnimationIdsOrStatus)
    MergeFrom(*source);
  }
}

void AnimationIdsOrStatus::MergeFrom(const AnimationIdsOrStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nvidia_ace.services.animation_controller.v1.AnimationIdsOrStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.response_case()) {
    case kAnimationIds: {
      _internal_mutable_animation_ids()->::nvidia_ace::animation_id::v1::AnimationIds::MergeFrom(from._internal_animation_ids());
      break;
    }
    case kStatus: {
      _internal_mutable_status()->::nvidia_ace::status::v1::Status::MergeFrom(from._internal_status());
      break;
    }
    case RESPONSE_NOT_SET: {
      break;
    }
  }
}

void AnimationIdsOrStatus::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nvidia_ace.services.animation_controller.v1.AnimationIdsOrStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnimationIdsOrStatus::CopyFrom(const AnimationIdsOrStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nvidia_ace.services.animation_controller.v1.AnimationIdsOrStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AnimationIdsOrStatus::IsInitialized() const {
  return true;
}

void AnimationIdsOrStatus::InternalSwap(AnimationIdsOrStatus* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(response_, other->response_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata AnimationIdsOrStatus::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace animation_controller
}  // namespace services
}  // namespace nvidia_ace
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::nvidia_ace::services::animation_controller::v1::AnimationGraphRequest* Arena::CreateMaybeMessage< ::nvidia_ace::services::animation_controller::v1::AnimationGraphRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::nvidia_ace::services::animation_controller::v1::AnimationGraphRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::nvidia_ace::services::animation_controller::v1::AnimationIdsOrStatus* Arena::CreateMaybeMessage< ::nvidia_ace::services::animation_controller::v1::AnimationIdsOrStatus >(Arena* arena) {
  return Arena::CreateMessageInternal< ::nvidia_ace::services::animation_controller::v1::AnimationIdsOrStatus >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
